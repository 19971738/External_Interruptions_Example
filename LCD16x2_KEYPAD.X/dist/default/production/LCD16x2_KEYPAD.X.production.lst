

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 24 16:53:54 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.20
    69                           ; Generated 12/02/2020 GMT
    70                           ; 
    71                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4550 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK0
   104  0047D8                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _e
   108  0047D8  7CEE               	dw	31982
   109  0047DA  412B               	dw	16683
   110                           
   111                           ;initializer for _cont
   112  0047DC  0001               	dw	1
   113                           
   114                           ;initializer for _b
   115  0047DE  0001               	dw	1
   116  0000                     _LATD	set	3980
   117  0000                     _LATA	set	3977
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _INTCONbits	set	4082
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISBbits	set	3987
   122  0000                     _TRISA	set	3986
   123  0000                     _TRISD	set	3989
   124  0000                     _OSCCON	set	4051
   125  0000                     _LATD3	set	31843
   126  0000                     _LATD2	set	31842
   127  0000                     _RB5	set	31757
   128  0000                     _RB0	set	31752
   129  0000                     _RB6	set	31758
   130  0000                     _RB4	set	31756
   131  0000                     _RB2	set	31754
   132  0000                     _RC4	set	31764
   133  0000                     _RC2	set	31762
   134  0000                     _RC1	set	31761
   135  0000                     _RC0	set	31760
   136  0000                     _RB1	set	31753
   137                           
   138                           	psect	smallconst
   139  000800                     __psmallconst:
   140                           	callstack 0
   141  000800  00                 	db	0
   142  000801                     STR_3:
   143                           
   144                           ; BSR set to: 0
   145  000801  49                 	db	73	;'I'
   146  000802  6E                 	db	110	;'n'
   147  000803  74                 	db	116	;'t'
   148  000804  72                 	db	114	;'r'
   149  000805  6F                 	db	111	;'o'
   150  000806  64                 	db	100	;'d'
   151  000807  75                 	db	117	;'u'
   152  000808  63                 	db	99	;'c'
   153  000809  65                 	db	101	;'e'
   154  00080A  20                 	db	32
   155  00080B  76                 	db	118	;'v'
   156  00080C  61                 	db	97	;'a'
   157  00080D  6C                 	db	108	;'l'
   158  00080E  6F                 	db	111	;'o'
   159  00080F  72                 	db	114	;'r'
   160  000810  3A                 	db	58	;':'
   161  000811  20                 	db	32
   162  000812  00                 	db	0
   163  000813                     STR_2:
   164                           
   165                           ; BSR set to: 0
   166  000813  44                 	db	68	;'D'
   167  000814  65                 	db	101	;'e'
   168  000815  20                 	db	32
   169  000816  4C                 	db	76	;'L'
   170  000817  75                 	db	117	;'u'
   171  000818  6E                 	db	110	;'n'
   172  000819  61                 	db	97	;'a'
   173  00081A  20                 	db	32
   174  00081B  50                 	db	80	;'P'
   175  00081C  6F                 	db	111	;'o'
   176  00081D  6E                 	db	110	;'n'
   177  00081E  63                 	db	99	;'c'
   178  00081F  65                 	db	101	;'e'
   179  000820  00                 	db	0
   180  000821                     STR_1:
   181                           
   182                           ; BSR set to: 0
   183  000821  4A                 	db	74	;'J'
   184  000822  75                 	db	117	;'u'
   185  000823  61                 	db	97	;'a'
   186  000824  6E                 	db	110	;'n'
   187  000825  20                 	db	32
   188  000826  44                 	db	68	;'D'
   189  000827  65                 	db	101	;'e'
   190  000828  20                 	db	32
   191  000829  44                 	db	68	;'D'
   192  00082A  69                 	db	105	;'i'
   193  00082B  6F                 	db	111	;'o'
   194  00082C  73                 	db	115	;'s'
   195  00082D  00                 	db	0
   196  00082E                     STR_5:
   197                           
   198                           ; BSR set to: 0
   199  00082E  25                 	db	37
   200  00082F  30                 	db	48	;'0'
   201  000830  2E                 	db	46
   202  000831  33                 	db	51	;'3'
   203  000832  66                 	db	102	;'f'
   204  000833  00                 	db	0
   205  000834                     STR_6:
   206                           
   207                           ; BSR set to: 0
   208  000834  49                 	db	73	;'I'
   209  000835  4E                 	db	78	;'N'
   210  000836  46                 	db	70	;'F'
   211  000837  00                 	db	0
   212  000838                     STR_10:
   213                           
   214                           ; BSR set to: 0
   215  000838  4E                 	db	78	;'N'
   216  000839  41                 	db	65	;'A'
   217  00083A  4E                 	db	78	;'N'
   218  00083B  00                 	db	0
   219  00083C                     STR_7:
   220                           
   221                           ; BSR set to: 0
   222  00083C  69                 	db	105	;'i'
   223  00083D  6E                 	db	110	;'n'
   224  00083E  66                 	db	102	;'f'
   225  00083F  00                 	db	0
   226  000840                     STR_11:
   227                           
   228                           ; BSR set to: 0
   229  000840  6E                 	db	110	;'n'
   230  000841  61                 	db	97	;'a'
   231  000842  6E                 	db	110	;'n'
   232  000843  00                 	db	0
   233  000844                     STR_14:
   234                           
   235                           ; BSR set to: 0
   236  000844  6C                 	db	108	;'l'
   237  000845  66                 	db	102	;'f'
   238  000846  00                 	db	0
   239  000847                     STR_4:
   240                           
   241                           ; BSR set to: 0
   242  000847  25                 	db	37
   243  000848  64                 	db	100	;'d'
   244  000849  00                 	db	0
   245  00084A  00                 	db	0	; dummy byte at the end
   246  0000                     
   247                           ; #config settings
   248                           
   249                           	psect	cinit
   250  0044E8                     __pcinit:
   251                           	callstack 0
   252  0044E8                     start_initialization:
   253                           	callstack 0
   254  0044E8                     __initialization:
   255                           	callstack 0
   256                           
   257                           ; Initialize objects allocated to BANK0 (8 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  0044E8  0ED8               	movlw	low __pidataBANK0
   260  0044EA  6EF6               	movwf	tblptrl,c
   261  0044EC  0E47               	movlw	high __pidataBANK0
   262  0044EE  6EF7               	movwf	tblptrh,c
   263  0044F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  0044F2  6EF8               	movwf	tblptru,c
   265  0044F4  EE00  F0F2         	lfsr	0,__pdataBANK0
   266  0044F8  EE10 F008          	lfsr	1,8
   267  0044FC                     copy_data0:
   268  0044FC  0009               	tblrd		*+
   269  0044FE  CFF5 FFEE          	movff	tablat,postinc0
   270  004502  50E5               	movf	postdec1,w,c
   271  004504  50E1               	movf	fsr1l,w,c
   272  004506  E1FA               	bnz	copy_data0
   273                           
   274                           ; Clear objects allocated to BANK1 (80 bytes)
   275  004508  EE01  F000         	lfsr	0,__pbssBANK1
   276  00450C  0E50               	movlw	80
   277  00450E                     clear_0:
   278  00450E  6AEE               	clrf	postinc0,c
   279  004510  06E8               	decf	wreg,f,c
   280  004512  E1FD               	bnz	clear_0
   281                           
   282                           ; Clear objects allocated to BANK0 (38 bytes)
   283  004514  EE00  F0CC         	lfsr	0,__pbssBANK0
   284  004518  0E26               	movlw	38
   285  00451A                     clear_1:
   286  00451A  6AEE               	clrf	postinc0,c
   287  00451C  06E8               	decf	wreg,f,c
   288  00451E  E1FD               	bnz	clear_1
   289                           
   290                           ; Clear objects allocated to COMRAM (2 bytes)
   291  004520  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   292  004522  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   293  004524                     end_of_initialization:
   294                           	callstack 0
   295  004524                     __end_of__initialization:
   296                           	callstack 0
   297  004524  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298  004526  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299  004528  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300  00452A  6EF8               	movwf	tblptru,c
   301  00452C  0100               	movlb	0
   302  00452E  EF18  F01B         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305  00005D                     __pbssCOMRAM:
   306                           	callstack 0
   307  00005D                     _d:
   308                           	callstack 0
   309  00005D                     	ds	2
   310                           
   311                           	psect	bssBANK0
   312  0000CC                     __pbssBANK0:
   313                           	callstack 0
   314  0000CC                     floorf@F524:
   315                           	callstack 0
   316  0000CC                     	ds	4
   317  0000D0                     ___fpclassifyf@F463:
   318                           	callstack 0
   319  0000D0                     	ds	4
   320  0000D4                     _volt:
   321                           	callstack 0
   322  0000D4                     	ds	4
   323  0000D8                     _temp:
   324                           	callstack 0
   325  0000D8                     	ds	4
   326  0000DC                     _nout:
   327                           	callstack 0
   328  0000DC                     	ds	2
   329  0000DE                     _width:
   330                           	callstack 0
   331  0000DE                     	ds	2
   332  0000E0                     _prec:
   333                           	callstack 0
   334  0000E0                     	ds	2
   335  0000E2                     _flags:
   336                           	callstack 0
   337  0000E2                     	ds	2
   338  0000E4                     _cont2:
   339                           	callstack 0
   340  0000E4                     	ds	2
   341  0000E6                     _a:
   342                           	callstack 0
   343  0000E6                     	ds	2
   344  0000E8                     _ADC:
   345                           	callstack 0
   346  0000E8                     	ds	2
   347  0000EA                     _temp2:
   348                           	callstack 0
   349  0000EA                     	ds	2
   350  0000EC                     _f:
   351                           	callstack 0
   352  0000EC                     	ds	2
   353  0000EE                     _c:
   354                           	callstack 0
   355  0000EE                     	ds	2
   356  0000F0                     _duty_cicle:
   357                           	callstack 0
   358  0000F0                     	ds	2
   359                           
   360                           	psect	dataBANK0
   361  0000F2                     __pdataBANK0:
   362                           	callstack 0
   363  0000F2                     _e:
   364                           	callstack 0
   365  0000F2                     	ds	4
   366  0000F6                     _cont:
   367                           	callstack 0
   368  0000F6                     	ds	2
   369  0000F8                     _b:
   370                           	callstack 0
   371  0000F8                     	ds	2
   372                           
   373                           	psect	bssBANK1
   374  000100                     __pbssBANK1:
   375                           	callstack 0
   376  000100                     _dbuf:
   377                           	callstack 0
   378  000100                     	ds	80
   379                           
   380                           	psect	cstackBANK0
   381  000060                     __pcstackBANK0:
   382                           	callstack 0
   383  000060                     efgtoa@ou:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x0
   387  000060                     	ds	4
   388  000064                     _efgtoa$898:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392  000064                     	ds	2
   393  000066                     _efgtoa$899:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x6
   397  000066                     	ds	2
   398  000068                     _efgtoa$903:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x8
   402  000068                     	ds	2
   403  00006A                     _efgtoa$907:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xA
   407  00006A                     	ds	2
   408  00006C                     _efgtoa$908:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0xC
   412  00006C                     	ds	2
   413  00006E                     _efgtoa$909:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xE
   417  00006E                     	ds	2
   418  000070                     efgtoa@t:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x10
   422  000070                     	ds	2
   423  000072                     efgtoa@pp:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x12
   427  000072                     	ds	2
   428  000074                     efgtoa@m:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x14
   432  000074                     	ds	2
   433  000076                     efgtoa@ne:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x16
   437  000076                     	ds	2
   438  000078                     efgtoa@d:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x18
   442  000078                     	ds	2
   443  00007A                     efgtoa@sign:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1A
   447  00007A                     	ds	2
   448  00007C                     efgtoa@p:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x1C
   452  00007C                     	ds	2
   453  00007E                     efgtoa@nmode:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x1E
   457  00007E                     	ds	1
   458  00007F                     efgtoa@w:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x1F
   462  00007F                     	ds	2
   463  000081                     efgtoa@mode:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x21
   467  000081                     	ds	1
   468  000082                     efgtoa@h:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x22
   472  000082                     	ds	4
   473  000086                     efgtoa@l:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x26
   477  000086                     	ds	4
   478  00008A                     efgtoa@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x2A
   482  00008A                     	ds	2
   483  00008C                     efgtoa@g:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x2C
   487  00008C                     	ds	4
   488  000090                     efgtoa@e:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x30
   492  000090                     	ds	2
   493  000092                     efgtoa@n:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x32
   497  000092                     	ds	2
   498  000094                     efgtoa@u:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x34
   502  000094                     	ds	4
   503  000098                     vfpfcnvrt@ll:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x38
   507  000098                     	ds	8
   508  0000A0                     vfpfcnvrt@done:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x40
   512  0000A0                     	ds	2
   513  0000A2                     _vfpfcnvrt$923:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x42
   517  0000A2                     	ds	2
   518  0000A4                     _vfpfcnvrt$928:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x44
   522  0000A4                     	ds	2
   523  0000A6                     vfpfcnvrt@f:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x46
   527  0000A6                     	ds	4
   528  0000AA                     vfpfcnvrt@ct:
   529                           	callstack 0
   530                           
   531                           ; 3 bytes @ 0x4A
   532  0000AA                     	ds	3
   533  0000AD                     vfpfcnvrt@c:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x4D
   537  0000AD                     	ds	1
   538  0000AE                     ?_sprintf:
   539                           	callstack 0
   540  0000AE                     sprintf@s:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x4E
   544  0000AE                     	ds	2
   545  0000B0                     sprintf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x50
   549  0000B0                     	ds	6
   550  0000B6                     main@Total_distance:
   551                           	callstack 0
   552                           
   553                           ; 20 bytes @ 0x56
   554  0000B6                     	ds	20
   555  0000CA                     main@Distance:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x6A
   559  0000CA                     	ds	2
   560                           
   561                           	psect	cstackCOMRAM
   562  000001                     __pcstackCOMRAM:
   563                           	callstack 0
   564  000001                     ??_Secuence1:
   565  000001                     ??_Secuence3:
   566  000001                     ?_strlen:
   567                           	callstack 0
   568  000001                     ?___fpclassifyf:
   569                           	callstack 0
   570  000001                     ?_isupper:
   571                           	callstack 0
   572  000001                     ?_isdigit:
   573                           	callstack 0
   574  000001                     ?_strncmp:
   575                           	callstack 0
   576  000001                     ?_isspace:
   577                           	callstack 0
   578  000001                     ?___wmul:
   579                           	callstack 0
   580  000001                     ?___awdiv:
   581                           	callstack 0
   582  000001                     ?___awmod:
   583                           	callstack 0
   584  000001                     ?___fladd:
   585                           	callstack 0
   586  000001                     ?___fldiv:
   587                           	callstack 0
   588  000001                     ?___flmul:
   589                           	callstack 0
   590  000001                     ?___flneg:
   591                           	callstack 0
   592  000001                     ?___fltol:
   593                           	callstack 0
   594  000001                     ?___aodiv:
   595                           	callstack 0
   596  000001                     ?___aomod:
   597                           	callstack 0
   598  000001                     MSdelay@val:
   599                           	callstack 0
   600  000001                     ___wmul@multiplier:
   601                           	callstack 0
   602  000001                     ___awdiv@dividend:
   603                           	callstack 0
   604  000001                     ___awmod@dividend:
   605                           	callstack 0
   606  000001                     isdigit@c:
   607                           	callstack 0
   608  000001                     isspace@c:
   609                           	callstack 0
   610  000001                     isupper@c:
   611                           	callstack 0
   612  000001                     fputc@c:
   613                           	callstack 0
   614  000001                     strcpy@dest:
   615                           	callstack 0
   616  000001                     strlen@s:
   617                           	callstack 0
   618  000001                     strncmp@_l:
   619                           	callstack 0
   620  000001                     ___fleq@ff1:
   621                           	callstack 0
   622  000001                     ___flneg@f1:
   623                           	callstack 0
   624  000001                     ___fltol@f1:
   625                           	callstack 0
   626  000001                     ___fladd@b:
   627                           	callstack 0
   628  000001                     ___fldiv@b:
   629                           	callstack 0
   630  000001                     ___flmul@b:
   631                           	callstack 0
   632  000001                     ___fpclassifyf@x:
   633                           	callstack 0
   634  000001                     ___aodiv@dividend:
   635                           	callstack 0
   636  000001                     ___aomod@dividend:
   637                           	callstack 0
   638                           
   639                           ; 8 bytes @ 0x0
   640  000001                     	ds	2
   641  000003                     ??_isupper:
   642  000003                     ??_isdigit:
   643  000003                     ??_isspace:
   644  000003                     MSdelay@i:
   645                           	callstack 0
   646  000003                     ___wmul@multiplicand:
   647                           	callstack 0
   648  000003                     ___awdiv@divisor:
   649                           	callstack 0
   650  000003                     ___awmod@divisor:
   651                           	callstack 0
   652  000003                     fputc@fp:
   653                           	callstack 0
   654  000003                     strcpy@src:
   655                           	callstack 0
   656  000003                     strlen@a:
   657                           	callstack 0
   658  000003                     strncmp@_r:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  000003                     	ds	2
   663  000005                     ??_fputc:
   664  000005                     ??___fpclassifyf:
   665  000005                     ??_strcpy:
   666  000005                     ??___fltol:
   667  000005                     ___awdiv@counter:
   668                           	callstack 0
   669  000005                     ___awmod@counter:
   670                           	callstack 0
   671  000005                     MSdelay@j:
   672                           	callstack 0
   673  000005                     ___wmul@product:
   674                           	callstack 0
   675  000005                     strncmp@n:
   676                           	callstack 0
   677  000005                     ___fleq@ff2:
   678                           	callstack 0
   679  000005                     ___fladd@a:
   680                           	callstack 0
   681  000005                     ___fldiv@a:
   682                           	callstack 0
   683  000005                     ___flmul@a:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x4
   687  000005                     	ds	1
   688  000006                     ___awdiv@sign:
   689                           	callstack 0
   690  000006                     ___awmod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x5
   694  000006                     	ds	1
   695  000007                     ??_LCD_Command:
   696  000007                     ??_strncmp:
   697  000007                     ??_LCD_Char:
   698  000007                     ?_tolower:
   699                           	callstack 0
   700  000007                     _isspace$995:
   701                           	callstack 0
   702  000007                     ___awdiv@quotient:
   703                           	callstack 0
   704  000007                     strcpy@s:
   705                           	callstack 0
   706  000007                     tolower@c:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x6
   710  000007                     	ds	1
   711  000008                     ?_atoi:
   712                           	callstack 0
   713  000008                     LCD_Command@cmd:
   714                           	callstack 0
   715  000008                     LCD_Char@dat:
   716                           	callstack 0
   717  000008                     atoi@s:
   718                           	callstack 0
   719  000008                     strncmp@l:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x7
   723  000008                     	ds	1
   724  000009                     ??_Secuence2:
   725  000009                     ??_Secuence4:
   726  000009                     ??___fladd:
   727  000009                     ??___fldiv:
   728  000009                     ??___flmul:
   729  000009                     ??_tolower:
   730  000009                     ??___fleq:
   731  000009                     ___fltol@sign1:
   732                           	callstack 0
   733  000009                     LCD_String@msg:
   734                           	callstack 0
   735  000009                     ___fpclassifyf@e:
   736                           	callstack 0
   737  000009                     strcpy@d:
   738                           	callstack 0
   739  000009                     ___aodiv@divisor:
   740                           	callstack 0
   741  000009                     ___aomod@divisor:
   742                           	callstack 0
   743                           
   744                           ; 8 bytes @ 0x8
   745  000009                     	ds	1
   746  00000A                     ??_atoi:
   747  00000A                     ___fltol@exp1:
   748                           	callstack 0
   749  00000A                     fputs@s:
   750                           	callstack 0
   751  00000A                     strncmp@r:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x9
   755  00000A                     	ds	1
   756  00000B                     LCD_String_xy@pos:
   757                           	callstack 0
   758  00000B                     ___fpclassifyf@u:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0xA
   762  00000B                     	ds	1
   763  00000C                     LCD_String_xy@msg:
   764                           	callstack 0
   765  00000C                     fputs@fp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xB
   769  00000C                     	ds	1
   770  00000D                     ___fladd@signs:
   771                           	callstack 0
   772  00000D                     ___flmul@sign:
   773                           	callstack 0
   774  00000D                     _tolower$1059:
   775                           	callstack 0
   776  00000D                     ___fldiv@rem:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0xC
   780  00000D                     	ds	1
   781  00000E                     LCD_String_xy@row:
   782                           	callstack 0
   783  00000E                     ___fladd@aexp:
   784                           	callstack 0
   785  00000E                     fputs@c:
   786                           	callstack 0
   787  00000E                     atoi@neg:
   788                           	callstack 0
   789  00000E                     ___flmul@grs:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0xD
   793  00000E                     	ds	1
   794  00000F                     LCD_String_xy@location:
   795                           	callstack 0
   796  00000F                     ___fladd@bexp:
   797                           	callstack 0
   798  00000F                     fputs@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0xE
   802  00000F                     	ds	1
   803  000010                     ___fladd@grs:
   804                           	callstack 0
   805  000010                     _atoi$964:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0xF
   809  000010                     	ds	1
   810  000011                     ?_pad:
   811                           	callstack 0
   812  000011                     ___aodiv@counter:
   813                           	callstack 0
   814  000011                     ___aomod@counter:
   815                           	callstack 0
   816  000011                     ___fldiv@sign:
   817                           	callstack 0
   818  000011                     pad@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x10
   822  000011                     	ds	1
   823  000012                     ___aodiv@sign:
   824                           	callstack 0
   825  000012                     ___aomod@sign:
   826                           	callstack 0
   827  000012                     ___flmul@aexp:
   828                           	callstack 0
   829  000012                     ___fldiv@new_exp:
   830                           	callstack 0
   831  000012                     _atoi$966:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x11
   835  000012                     	ds	1
   836  000013                     ?_abs:
   837                           	callstack 0
   838  000013                     ___flmul@bexp:
   839                           	callstack 0
   840  000013                     pad@buf:
   841                           	callstack 0
   842  000013                     abs@a:
   843                           	callstack 0
   844  000013                     ___aodiv@quotient:
   845                           	callstack 0
   846                           
   847                           ; 8 bytes @ 0x12
   848  000013                     	ds	1
   849  000014                     _atoi$965:
   850                           	callstack 0
   851  000014                     ___fldiv@grs:
   852                           	callstack 0
   853  000014                     ___flmul@prod:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x13
   857  000014                     	ds	1
   858  000015                     ??_abs:
   859  000015                     pad@p:
   860                           	callstack 0
   861  000015                     atoi@n:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x14
   865  000015                     	ds	2
   866  000017                     ??_pad:
   867                           
   868                           ; 1 bytes @ 0x16
   869  000017                     	ds	1
   870  000018                     ___fldiv@bexp:
   871                           	callstack 0
   872  000018                     ___flmul@temp:
   873                           	callstack 0
   874  000018                     pad@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x17
   878  000018                     	ds	1
   879  000019                     ___fldiv@aexp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x18
   883  000019                     	ds	1
   884  00001A                     ?___flsub:
   885                           	callstack 0
   886  00001A                     ?_floorf:
   887                           	callstack 0
   888  00001A                     pad@w:
   889                           	callstack 0
   890  00001A                     ___flge@ff1:
   891                           	callstack 0
   892  00001A                     ___flsub@b:
   893                           	callstack 0
   894  00001A                     floorf@x:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x19
   898  00001A                     	ds	2
   899  00001C                     ?_dtoa:
   900                           	callstack 0
   901  00001C                     dtoa@fp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x1B
   905  00001C                     	ds	2
   906  00001E                     ??_floorf:
   907  00001E                     ___flge@ff2:
   908                           	callstack 0
   909  00001E                     ___flsub@a:
   910                           	callstack 0
   911  00001E                     dtoa@d:
   912                           	callstack 0
   913                           
   914                           ; 8 bytes @ 0x1D
   915  00001E                     	ds	4
   916  000022                     ??___flge:
   917                           
   918                           ; 1 bytes @ 0x21
   919  000022                     	ds	2
   920  000024                     floorf@m:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x23
   924  000024                     	ds	2
   925  000026                     ??_dtoa:
   926                           
   927                           ; 1 bytes @ 0x25
   928  000026                     	ds	2
   929  000028                     floorf@e:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x27
   933  000028                     	ds	2
   934  00002A                     floorf@u:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x29
   938  00002A                     	ds	4
   939  00002E                     ?_efgtoa:
   940                           	callstack 0
   941  00002E                     _dtoa$874:
   942                           	callstack 0
   943  00002E                     efgtoa@fp:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2D
   947  00002E                     	ds	2
   948  000030                     dtoa@p:
   949                           	callstack 0
   950  000030                     efgtoa@f:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x2F
   954  000030                     	ds	2
   955  000032                     dtoa@w:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x31
   959  000032                     	ds	2
   960  000034                     efgtoa@c:
   961                           	callstack 0
   962  000034                     dtoa@s:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x33
   966  000034                     	ds	1
   967  000035                     ??_efgtoa:
   968                           
   969                           ; 1 bytes @ 0x34
   970  000035                     	ds	1
   971  000036                     dtoa@n:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x35
   975  000036                     	ds	8
   976  00003E                     dtoa@i:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x3D
   980  00003E                     	ds	2
   981  000040                     ?_vfpfcnvrt:
   982                           	callstack 0
   983  000040                     vfpfcnvrt@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x3F
   987  000040                     	ds	2
   988  000042                     vfpfcnvrt@fmt:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x41
   992  000042                     	ds	2
   993  000044                     vfpfcnvrt@ap:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x43
   997  000044                     	ds	2
   998  000046                     ??_vfpfcnvrt:
   999                           
  1000                           ; 1 bytes @ 0x45
  1001  000046                     	ds	4
  1002  00004A                     ?_vfprintf:
  1003                           	callstack 0
  1004  00004A                     vfprintf@fp:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x49
  1008  00004A                     	ds	2
  1009  00004C                     vfprintf@fmt:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x4B
  1013  00004C                     	ds	2
  1014  00004E                     vfprintf@ap:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x4D
  1018  00004E                     	ds	2
  1019  000050                     vfprintf@cfmt:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x4F
  1023  000050                     	ds	2
  1024  000052                     
  1025                           ; 1 bytes @ 0x51
  1026  000052                     	ds	2
  1027  000054                     sprintf@ap:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x53
  1031  000054                     	ds	2
  1032  000056                     sprintf@f:
  1033                           	callstack 0
  1034                           
  1035                           ; 6 bytes @ 0x55
  1036  000056                     	ds	6
  1037  00005C                     ??_main:
  1038                           
  1039                           ; 1 bytes @ 0x5B
  1040  00005C                     	ds	1
  1041                           
  1042 ;;
  1043 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1044 ;;
  1045 ;; *************** function _main *****************
  1046 ;; Defined at:
  1047 ;;		line 25 in file "distance_finding.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  Total_distan   40    0        float [10]
  1052 ;;  Total_distan   20   86[BANK0 ] int [10]
  1053 ;;  Distance        2  106[BANK0 ] int 
  1054 ;;  Time            2    0        int 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1066 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         1      22       0       0       0       0       0       0       0
  1068 ;;Total ram usage:       23 bytes
  1069 ;; Hardware stack levels required when called:    9
  1070 ;; This function calls:
  1071 ;;		_Int_Ext
  1072 ;;		_LCD_Clear
  1073 ;;		_LCD_Init
  1074 ;;		_LCD_String_xy
  1075 ;;		_MSdelay
  1076 ;;		_Secuence1
  1077 ;;		_Secuence2
  1078 ;;		_Secuence3
  1079 ;;		_Secuence4
  1080 ;;		_sprintf
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087  003630                     __ptext0:
  1088                           	callstack 0
  1089  003630                     _main:
  1090                           	callstack 22
  1091  003630                     
  1092                           ;distance_finding.c: 27:     int Distance;;distance_finding.c: 28:     int Time;;distanc
      +                          e_finding.c: 29:     int Total_distance[10];;distance_finding.c: 30:     float Total_dis
      +                          tance2[10];;distance_finding.c: 34:     OSCCON=0x72;
  1093  003630  0E72               	movlw	114
  1094  003632  6ED3               	movwf	211,c	;volatile
  1095                           
  1096                           ;distance_finding.c: 36:     TRISD = 0;
  1097  003634  0E00               	movlw	0
  1098  003636  6E95               	movwf	149,c	;volatile
  1099                           
  1100                           ;distance_finding.c: 37:     TRISA = 0;
  1101  003638  0E00               	movlw	0
  1102  00363A  6E92               	movwf	146,c	;volatile
  1103  00363C                     
  1104                           ;distance_finding.c: 39:     Int_Ext();
  1105  00363C  ECE6  F023         	call	_Int_Ext	;wreg free
  1106  003640                     
  1107                           ;distance_finding.c: 45:     LCD_Init();
  1108  003640  ECB2  F023         	call	_LCD_Init	;wreg free
  1109  003644                     
  1110                           ;distance_finding.c: 46:     LCD_String_xy(1,0,"Juan De Dios");
  1111  003644  0E00               	movlw	0
  1112  003646  6E0B               	movwf	LCD_String_xy@pos^0,c
  1113  003648  0E21               	movlw	low STR_1
  1114  00364A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1115  00364C  0E08               	movlw	high STR_1
  1116  00364E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1117  003650  0E01               	movlw	1
  1118  003652  EC23  F023         	call	_LCD_String_xy
  1119  003656                     
  1120                           ;distance_finding.c: 47:     LCD_String_xy(2,0,"De Luna Ponce");
  1121  003656  0E00               	movlw	0
  1122  003658  6E0B               	movwf	LCD_String_xy@pos^0,c
  1123  00365A  0E13               	movlw	low STR_2
  1124  00365C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1125  00365E  0E08               	movlw	high STR_2
  1126  003660  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1127  003662  0E02               	movlw	2
  1128  003664  EC23  F023         	call	_LCD_String_xy
  1129  003668                     
  1130                           ;distance_finding.c: 52:     TRISD = 0;
  1131  003668  0E00               	movlw	0
  1132  00366A  6E95               	movwf	149,c	;volatile
  1133  00366C                     
  1134                           ;distance_finding.c: 55:     Int_Ext();
  1135  00366C  ECE6  F023         	call	_Int_Ext	;wreg free
  1136  003670                     l89:
  1137                           
  1138                           ;distance_finding.c: 58:     LCD_Clear();
  1139  003670  ECF0  F023         	call	_LCD_Clear	;wreg free
  1140                           
  1141                           ;distance_finding.c: 59:     while(c==0){
  1142  003674  EF4D  F01B         	goto	l5213
  1143  003678                     l5203:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;distance_finding.c: 60:     LCD_String_xy(1,0,"Introduce valor: ");
  1147  003678  0E00               	movlw	0
  1148  00367A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1149  00367C  0E01               	movlw	low STR_3
  1150  00367E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1151  003680  0E08               	movlw	high STR_3
  1152  003682  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1153  003684  0E01               	movlw	1
  1154  003686  EC23  F023         	call	_LCD_String_xy
  1155  00368A                     
  1156                           ;distance_finding.c: 61:     Secuence1();
  1157  00368A  EC2A  F018         	call	_Secuence1	;wreg free
  1158  00368E                     
  1159                           ;distance_finding.c: 62:     Secuence2();
  1160  00368E  EC0A  F017         	call	_Secuence2	;wreg free
  1161  003692                     
  1162                           ;distance_finding.c: 63:     Secuence3();
  1163  003692  ECDC  F015         	call	_Secuence3	;wreg free
  1164  003696                     
  1165                           ;distance_finding.c: 64:     Secuence4();
  1166  003696  ECA8  F014         	call	_Secuence4	;wreg free
  1167  00369A                     l5213:
  1168                           
  1169                           ;distance_finding.c: 59:     while(c==0){
  1170  00369A  0100               	movlb	0	; () banked
  1171  00369C  51EE               	movf	_c& (0+255),w,b
  1172  00369E  11EF               	iorwf	(_c+1)& (0+255),w,b
  1173  0036A0  B4D8               	btfsc	status,2,c
  1174  0036A2  EF55  F01B         	goto	u6651
  1175  0036A6  EF57  F01B         	goto	u6650
  1176  0036AA                     u6651:
  1177  0036AA  EF3C  F01B         	goto	l5203
  1178  0036AE                     u6650:
  1179  0036AE                     
  1180                           ; BSR set to: 0
  1181                           ;distance_finding.c: 66:     LCD_Clear();
  1182  0036AE  ECF0  F023         	call	_LCD_Clear	;wreg free
  1183                           
  1184                           ;distance_finding.c: 67:     while(c>=1 && f == 0){
  1185  0036B2  EF8E  F01B         	goto	l5229
  1186  0036B6                     l5217:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;distance_finding.c: 68:     Secuence1();
  1190  0036B6  EC2A  F018         	call	_Secuence1	;wreg free
  1191                           
  1192                           ;distance_finding.c: 69:     Secuence2();
  1193  0036BA  EC0A  F017         	call	_Secuence2	;wreg free
  1194                           
  1195                           ;distance_finding.c: 70:     Secuence3();
  1196  0036BE  ECDC  F015         	call	_Secuence3	;wreg free
  1197                           
  1198                           ;distance_finding.c: 71:     Secuence4();
  1199  0036C2  ECA8  F014         	call	_Secuence4	;wreg free
  1200  0036C6                     
  1201                           ;distance_finding.c: 72:     _delay((unsigned long)((900)*(20000000/4000000.0)));
  1202  0036C6  0E06               	movlw	6
  1203  0036C8  6E5C               	movwf	??_main^0,c
  1204  0036CA  0ED7               	movlw	215
  1205  0036CC                     u6697:
  1206  0036CC  2EE8               	decfsz	wreg,f,c
  1207  0036CE  D7FE               	bra	u6697
  1208  0036D0  2E5C               	decfsz	??_main^0,f,c
  1209  0036D2  D7FC               	bra	u6697
  1210  0036D4  F000               	nop	
  1211  0036D6                     
  1212                           ;distance_finding.c: 73:     Distance = (a*1);
  1213  0036D6  C0E6  F0CA         	movff	_a,main@Distance
  1214  0036DA  C0E7  F0CB         	movff	_a+1,main@Distance+1
  1215  0036DE                     
  1216                           ;distance_finding.c: 74:     sprintf(Total_distance,"%d",Distance);
  1217  0036DE  0EB6               	movlw	low main@Total_distance
  1218  0036E0  0100               	movlb	0	; () banked
  1219  0036E2  6FAE               	movwf	sprintf@s& (0+255),b
  1220  0036E4  0E00               	movlw	high main@Total_distance
  1221  0036E6  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  1222  0036E8  0E47               	movlw	low STR_4
  1223  0036EA  6FB0               	movwf	sprintf@fmt& (0+255),b
  1224  0036EC  0E08               	movlw	high STR_4
  1225  0036EE  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  1226  0036F0  C0CA  F0B2         	movff	main@Distance,?_sprintf+4
  1227  0036F4  C0CB  F0B3         	movff	main@Distance+1,?_sprintf+5
  1228  0036F8  EC00  F022         	call	_sprintf	;wreg free
  1229  0036FC                     
  1230                           ;distance_finding.c: 75:     LCD_String_xy(b,c-1,Total_distance);
  1231  0036FC  0100               	movlb	0	; () banked
  1232  0036FE  05EE               	decf	_c& (0+255),w,b
  1233  003700  6E0B               	movwf	LCD_String_xy@pos^0,c
  1234  003702  0EB6               	movlw	low main@Total_distance
  1235  003704  6E0C               	movwf	LCD_String_xy@msg^0,c
  1236  003706  0E00               	movlw	high main@Total_distance
  1237  003708  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1238  00370A  51F8               	movf	_b& (0+255),w,b
  1239  00370C  EC23  F023         	call	_LCD_String_xy
  1240  003710                     
  1241                           ;distance_finding.c: 76:     MSdelay(50);
  1242  003710  0E00               	movlw	0
  1243  003712  6E02               	movwf	(MSdelay@val+1)^0,c
  1244  003714  0E32               	movlw	50
  1245  003716  6E01               	movwf	MSdelay@val^0,c
  1246  003718  EC99  F022         	call	_MSdelay	;wreg free
  1247  00371C                     l5229:
  1248                           
  1249                           ;distance_finding.c: 67:     while(c>=1 && f == 0){
  1250  00371C  0100               	movlb	0	; () banked
  1251  00371E  BFEF               	btfsc	(_c+1)& (0+255),7,b
  1252  003720  EF9A  F01B         	goto	u6661
  1253  003724  51EF               	movf	(_c+1)& (0+255),w,b
  1254  003726  E108               	bnz	u6660
  1255  003728  05EE               	decf	_c& (0+255),w,b
  1256  00372A  A0D8               	btfss	status,0,c
  1257  00372C  EF9A  F01B         	goto	u6661
  1258  003730  EF9C  F01B         	goto	u6660
  1259  003734                     u6661:
  1260  003734  EFD0  F01B         	goto	l5241
  1261  003738                     u6660:
  1262  003738                     
  1263                           ; BSR set to: 0
  1264  003738  51EC               	movf	_f& (0+255),w,b
  1265  00373A  11ED               	iorwf	(_f+1)& (0+255),w,b
  1266  00373C  B4D8               	btfsc	status,2,c
  1267  00373E  EFA3  F01B         	goto	u6671
  1268  003742  EFA5  F01B         	goto	u6670
  1269  003746                     u6671:
  1270  003746  EF5B  F01B         	goto	l5217
  1271  00374A                     u6670:
  1272  00374A  EFD0  F01B         	goto	l5241
  1273  00374E                     l5233:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;distance_finding.c: 79:         Secuence1();
  1277  00374E  EC2A  F018         	call	_Secuence1	;wreg free
  1278                           
  1279                           ;distance_finding.c: 80:         Secuence2();
  1280  003752  EC0A  F017         	call	_Secuence2	;wreg free
  1281                           
  1282                           ;distance_finding.c: 81:         Secuence3();
  1283  003756  ECDC  F015         	call	_Secuence3	;wreg free
  1284                           
  1285                           ;distance_finding.c: 82:         Secuence4();
  1286  00375A  ECA8  F014         	call	_Secuence4	;wreg free
  1287  00375E                     
  1288                           ;distance_finding.c: 83:         sprintf(Total_distance,"%0.3f",e);
  1289  00375E  0EB6               	movlw	low main@Total_distance
  1290  003760  0100               	movlb	0	; () banked
  1291  003762  6FAE               	movwf	sprintf@s& (0+255),b
  1292  003764  0E00               	movlw	high main@Total_distance
  1293  003766  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  1294  003768  0E2E               	movlw	low STR_5
  1295  00376A  6FB0               	movwf	sprintf@fmt& (0+255),b
  1296  00376C  0E08               	movlw	high STR_5
  1297  00376E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  1298  003770  0EEE               	movlw	238
  1299  003772  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  1300  003774  0E7C               	movlw	124
  1301  003776  6FB3               	movwf	(?_sprintf+5)& (0+255),b
  1302  003778  0E2B               	movlw	43
  1303  00377A  6FB4               	movwf	(?_sprintf+6)& (0+255),b
  1304  00377C  0E41               	movlw	65
  1305  00377E  6FB5               	movwf	(?_sprintf+7)& (0+255),b
  1306  003780  EC00  F022         	call	_sprintf	;wreg free
  1307  003784                     
  1308                           ;distance_finding.c: 84:         LCD_String_xy(1,0,Total_distance);
  1309  003784  0E00               	movlw	0
  1310  003786  6E0B               	movwf	LCD_String_xy@pos^0,c
  1311  003788  0EB6               	movlw	low main@Total_distance
  1312  00378A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1313  00378C  0E00               	movlw	high main@Total_distance
  1314  00378E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1315  003790  0E01               	movlw	1
  1316  003792  EC23  F023         	call	_LCD_String_xy
  1317  003796                     
  1318                           ;distance_finding.c: 85:         c=1;
  1319  003796  0E00               	movlw	0
  1320  003798  0100               	movlb	0	; () banked
  1321  00379A  6FEF               	movwf	(_c+1)& (0+255),b
  1322  00379C  0E01               	movlw	1
  1323  00379E  6FEE               	movwf	_c& (0+255),b
  1324  0037A0                     l5241:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;distance_finding.c: 78:     while(f==1){
  1328  0037A0  05EC               	decf	_f& (0+255),w,b
  1329  0037A2  11ED               	iorwf	(_f+1)& (0+255),w,b
  1330  0037A4  B4D8               	btfsc	status,2,c
  1331  0037A6  EFD7  F01B         	goto	u6681
  1332  0037AA  EFD9  F01B         	goto	u6680
  1333  0037AE                     u6681:
  1334  0037AE  EFA7  F01B         	goto	l5233
  1335  0037B2                     u6680:
  1336  0037B2  EF38  F01B         	goto	l89
  1337  0037B6  EF07  F000         	goto	start
  1338  0037BA                     __end_of_main:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _sprintf *****************
  1342 ;; Defined at:
  1343 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  s               2   78[BANK0 ] PTR unsigned char 
  1346 ;;		 -> main@Total_distance(20), 
  1347 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  1348 ;;		 -> STR_5(6), STR_4(3), 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  f               6   85[COMRAM] struct _IO_FILE
  1351 ;;  ap              2   83[COMRAM] PTR void [1]
  1352 ;;		 -> ?_sprintf(2), 
  1353 ;;  ret             2    0        int 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   78[BANK0 ] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       8       0       0       0       0       0       0       0
  1364 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:        10       8       0       0       0       0       0       0       0
  1367 ;;Total ram usage:       18 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    8
  1370 ;; This function calls:
  1371 ;;		_vfprintf
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text1
  1378  004400                     __ptext1:
  1379                           	callstack 0
  1380  004400                     _sprintf:
  1381                           	callstack 22
  1382  004400  0EB2               	movlw	low (?_sprintf+4)
  1383  004402  6E54               	movwf	sprintf@ap^0,c
  1384  004404  0E00               	movlw	high (?_sprintf+4)
  1385  004406  6E55               	movwf	(sprintf@ap+1)^0,c
  1386  004408  C0AE  F056         	movff	sprintf@s,sprintf@f
  1387  00440C  C0AF  F057         	movff	sprintf@s+1,sprintf@f+1
  1388  004410  0E00               	movlw	0
  1389  004412  6E59               	movwf	(sprintf@f+3)^0,c
  1390  004414  0E00               	movlw	0
  1391  004416  6E58               	movwf	(sprintf@f+2)^0,c
  1392  004418  0E00               	movlw	0
  1393  00441A  6E5B               	movwf	(sprintf@f+5)^0,c
  1394  00441C  0E00               	movlw	0
  1395  00441E  6E5A               	movwf	(sprintf@f+4)^0,c
  1396  004420  0E56               	movlw	low sprintf@f
  1397  004422  6E4A               	movwf	vfprintf@fp^0,c
  1398  004424  0E00               	movlw	high sprintf@f
  1399  004426  6E4B               	movwf	(vfprintf@fp+1)^0,c
  1400  004428  C0B0  F04C         	movff	sprintf@fmt,vfprintf@fmt
  1401  00442C  C0B1  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1402  004430  0E54               	movlw	low sprintf@ap
  1403  004432  6E4E               	movwf	vfprintf@ap^0,c
  1404  004434  0E00               	movlw	high sprintf@ap
  1405  004436  6E4F               	movwf	(vfprintf@ap+1)^0,c
  1406  004438  EC19  F021         	call	_vfprintf	;wreg free
  1407  00443C  5058               	movf	(sprintf@f+2)^0,w,c
  1408  00443E  0100               	movlb	0	; () banked
  1409  004440  25AE               	addwf	sprintf@s& (0+255),w,b
  1410  004442  6ED9               	movwf	fsr2l,c
  1411  004444  5059               	movf	(sprintf@f+3)^0,w,c
  1412  004446  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1413  004448  6EDA               	movwf	fsr2h,c
  1414  00444A  0E00               	movlw	0
  1415  00444C  6EDF               	movwf	indf2,c
  1416  00444E                     
  1417                           ; BSR set to: 0
  1418  00444E  0012               	return		;funcret
  1419  004450                     __end_of_sprintf:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _vfprintf *****************
  1423 ;; Defined at:
  1424 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  1427 ;;		 -> sprintf@f(6), 
  1428 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  1429 ;;		 -> STR_5(6), STR_4(3), 
  1430 ;;  ap              2   77[COMRAM] PTR PTR void 
  1431 ;;		 -> sprintf@ap(2), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  1434 ;;		 -> STR_5(6), STR_4(3), 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   73[COMRAM] int 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         6       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        8 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    7
  1451 ;; This function calls:
  1452 ;;		_vfpfcnvrt
  1453 ;; This function is called by:
  1454 ;;		_sprintf
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text2
  1459  004232                     __ptext2:
  1460                           	callstack 0
  1461  004232                     _vfprintf:
  1462                           	callstack 22
  1463  004232                     
  1464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1465  004232  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  1466  004236  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1467  00423A                     
  1468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1469  00423A  0E00               	movlw	0
  1470  00423C  0100               	movlb	0	; () banked
  1471  00423E  6FDD               	movwf	(_nout+1)& (0+255),b
  1472  004240  0E00               	movlw	0
  1473  004242  6FDC               	movwf	_nout& (0+255),b
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1476  004244  EF37  F021         	goto	l4775
  1477  004248                     l4773:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1481  004248  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1482  00424C  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1483  004250  0E50               	movlw	low vfprintf@cfmt
  1484  004252  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1485  004254  0E00               	movlw	high vfprintf@cfmt
  1486  004256  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1487  004258  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1488  00425C  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1489  004260  ECFE  F009         	call	_vfpfcnvrt	;wreg free
  1490  004264  5040               	movf	?_vfpfcnvrt^0,w,c
  1491  004266  0100               	movlb	0	; () banked
  1492  004268  27DC               	addwf	_nout& (0+255),f,b
  1493  00426A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1494  00426C  23DD               	addwfc	(_nout+1)& (0+255),f,b
  1495  00426E                     l4775:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1499  00426E  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  1500  004272  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1501  004276                     	if	0	;tblptru may be non-zero
  1502  004276                     	endif
  1503  004276                     	if	0	;tblptru may be non-zero
  1504  004276                     	endif
  1505  004276  0008               	tblrd		*
  1506  004278  50F5               	movf	tablat,w,c
  1507  00427A  0900               	iorlw	0
  1508  00427C  A4D8               	btfss	status,2,c
  1509  00427E  EF43  F021         	goto	u5981
  1510  004282  EF45  F021         	goto	u5980
  1511  004286                     u5981:
  1512  004286  EF24  F021         	goto	l4773
  1513  00428A                     u5980:
  1514  00428A                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1517  00428A  C0DC  F04A         	movff	_nout,?_vfprintf
  1518  00428E  C0DD  F04B         	movff	_nout+1,?_vfprintf+1
  1519  004292                     
  1520                           ; BSR set to: 0
  1521  004292  0012               	return		;funcret
  1522  004294                     __end_of_vfprintf:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _vfpfcnvrt *****************
  1526 ;; Defined at:
  1527 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1530 ;;		 -> sprintf@f(6), 
  1531 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1532 ;;		 -> vfprintf@cfmt(2), 
  1533 ;;  ap              2   67[COMRAM] PTR PTR void 
  1534 ;;		 -> sprintf@ap(2), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  ll              8   56[BANK0 ] long long 
  1537 ;;  llu             8    0        unsigned long long 
  1538 ;;  f               4   70[BANK0 ] unsigned long long 
  1539 ;;  ct              3   74[BANK0 ] unsigned char [3]
  1540 ;;  vp              3    0        PTR void 
  1541 ;;  cp              3    0        PTR unsigned char 
  1542 ;;  done            2   64[BANK0 ] int 
  1543 ;;  i               2    0        int 
  1544 ;;  c               1   77[BANK0 ] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2   63[COMRAM] int 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1554 ;;      Params:         6       0       0       0       0       0       0       0       0
  1555 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1556 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1557 ;;      Totals:        10      22       0       0       0       0       0       0       0
  1558 ;;Total ram usage:       32 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    6
  1561 ;; This function calls:
  1562 ;;		_atoi
  1563 ;;		_dtoa
  1564 ;;		_efgtoa
  1565 ;;		_fputc
  1566 ;;		_isdigit
  1567 ;;		_isupper
  1568 ;;		_strncmp
  1569 ;;		_tolower
  1570 ;; This function is called by:
  1571 ;;		_vfprintf
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text3
  1576  0013FC                     __ptext3:
  1577                           	callstack 0
  1578  0013FC                     _vfpfcnvrt:
  1579                           	callstack 22
  1580  0013FC                     
  1581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1582  0013FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1583  001400  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1584  001404  CFDE FFF6          	movff	postinc2,tblptrl
  1585  001408  CFDD FFF7          	movff	postdec2,tblptrh
  1586  00140C                     	if	0	;tblptru may be non-zero
  1587  00140C                     	endif
  1588  00140C                     	if	0	;tblptru may be non-zero
  1589  00140C                     	endif
  1590  00140C  0008               	tblrd		*
  1591  00140E  50F5               	movf	tablat,w,c
  1592  001410  0A25               	xorlw	37
  1593  001412  A4D8               	btfss	status,2,c
  1594  001414  EF0E  F00A         	goto	u5771
  1595  001418  EF10  F00A         	goto	u5770
  1596  00141C                     u5771:
  1597  00141C  EFD8  F00C         	goto	l4745
  1598  001420                     u5770:
  1599  001420                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1601  001420  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1602  001424  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1603  001428  2ADE               	incf	postinc2,f,c
  1604  00142A  0E00               	movlw	0
  1605  00142C  22DD               	addwfc	postdec2,f,c
  1606  00142E                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1608  00142E  0E00               	movlw	0
  1609  001430  0100               	movlb	0	; () banked
  1610  001432  6FDF               	movwf	(_width+1)& (0+255),b
  1611  001434  0E00               	movlw	0
  1612  001436  6FDE               	movwf	_width& (0+255),b
  1613  001438  C0DE  F0E2         	movff	_width,_flags
  1614  00143C  C0DF  F0E3         	movff	_width+1,_flags+1
  1615  001440                     
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1618  001440  69E0               	setf	_prec& (0+255),b
  1619  001442  69E1               	setf	(_prec+1)& (0+255),b
  1620  001444                     
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1623  001444  0E00               	movlw	0
  1624  001446  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1625  001448  0E00               	movlw	0
  1626  00144A  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1629  00144C  EF6E  F00A         	goto	l4657
  1630  001450                     l4631:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1634  001450  81E2               	bsf	_flags& (0+255),0,b
  1635  001452                     l4633:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1639  001452  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  001456  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  00145A  2ADE               	incf	postinc2,f,c
  1642  00145C  0E00               	movlw	0
  1643  00145E  22DD               	addwfc	postdec2,f,c
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1646  001460  EF6E  F00A         	goto	l4657
  1647  001464                     l4635:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1651  001464  83E2               	bsf	_flags& (0+255),1,b
  1652  001466  EF29  F00A         	goto	l4633
  1653  00146A                     l4639:
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1657  00146A  85E2               	bsf	_flags& (0+255),2,b
  1658  00146C  EF29  F00A         	goto	l4633
  1659  001470                     l4643:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1663  001470  87E2               	bsf	_flags& (0+255),3,b
  1664  001472  EF29  F00A         	goto	l4633
  1665  001476                     l4647:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1669  001476  89E2               	bsf	_flags& (0+255),4,b
  1670  001478  EF29  F00A         	goto	l4633
  1671  00147C                     l4651:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1675  00147C  0E00               	movlw	0
  1676  00147E  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1677  001480  0E01               	movlw	1
  1678  001482  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1681  001484  EF6E  F00A         	goto	l4657
  1682  001488                     l4655:
  1683                           
  1684                           ; BSR set to: 0
  1685  001488  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1686  00148C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1687  001490  CFDE FFF6          	movff	postinc2,tblptrl
  1688  001494  CFDD FFF7          	movff	postdec2,tblptrh
  1689  001498                     	if	0	;tblptru may be non-zero
  1690  001498                     	endif
  1691  001498                     	if	0	;tblptru may be non-zero
  1692  001498                     	endif
  1693  001498  0008               	tblrd		*
  1694  00149A  50F5               	movf	tablat,w,c
  1695  00149C  6E46               	movwf	??_vfpfcnvrt^0,c
  1696  00149E  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1697                           
  1698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 1, Range of values is 0 to 0
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte            4     3 (average)
  1704                           ;	Chosen strategy is simple_byte
  1705  0014A0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1706  0014A2  0A00               	xorlw	0	; case 0
  1707  0014A4  B4D8               	btfsc	status,2,c
  1708  0014A6  EF57  F00A         	goto	l5299
  1709  0014AA  EF3E  F00A         	goto	l4651
  1710  0014AE                     l5299:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 5, Range of values is 32 to 48
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte           16     9 (average)
  1718                           ;	Chosen strategy is simple_byte
  1719  0014AE  5046               	movf	??_vfpfcnvrt^0,w,c
  1720  0014B0  0A20               	xorlw	32	; case 32
  1721  0014B2  B4D8               	btfsc	status,2,c
  1722  0014B4  EF38  F00A         	goto	l4643
  1723  0014B8  0A03               	xorlw	3	; case 35
  1724  0014BA  B4D8               	btfsc	status,2,c
  1725  0014BC  EF3B  F00A         	goto	l4647
  1726  0014C0  0A08               	xorlw	8	; case 43
  1727  0014C2  B4D8               	btfsc	status,2,c
  1728  0014C4  EF35  F00A         	goto	l4639
  1729  0014C8  0A06               	xorlw	6	; case 45
  1730  0014CA  B4D8               	btfsc	status,2,c
  1731  0014CC  EF28  F00A         	goto	l4631
  1732  0014D0  0A1D               	xorlw	29	; case 48
  1733  0014D2  B4D8               	btfsc	status,2,c
  1734  0014D4  EF32  F00A         	goto	l4635
  1735  0014D8  EF3E  F00A         	goto	l4651
  1736  0014DC                     l4657:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1740  0014DC  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  1741  0014DE  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1742  0014E0  B4D8               	btfsc	status,2,c
  1743  0014E2  EF75  F00A         	goto	u5781
  1744  0014E6  EF77  F00A         	goto	u5780
  1745  0014EA                     u5781:
  1746  0014EA  EF44  F00A         	goto	l4655
  1747  0014EE                     u5780:
  1748  0014EE                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1751  0014EE  A1E2               	btfss	_flags& (0+255),0,b
  1752  0014F0  EF7C  F00A         	goto	u5791
  1753  0014F4  EF7E  F00A         	goto	u5790
  1754  0014F8                     u5791:
  1755  0014F8  EF7F  F00A         	goto	l4661
  1756  0014FC                     u5790:
  1757  0014FC                     
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1760  0014FC  93E2               	bcf	_flags& (0+255),1,b
  1761  0014FE                     l4661:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1765  0014FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1766  001502  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1767  001506  CFDE FFF6          	movff	postinc2,tblptrl
  1768  00150A  CFDD FFF7          	movff	postdec2,tblptrh
  1769  00150E                     	if	0	;tblptru may be non-zero
  1770  00150E                     	endif
  1771  00150E                     	if	0	;tblptru may be non-zero
  1772  00150E                     	endif
  1773  00150E  0008               	tblrd		*
  1774  001510  50F5               	movf	tablat,w,c
  1775  001512  0A2E               	xorlw	46
  1776  001514  A4D8               	btfss	status,2,c
  1777  001516  EF8F  F00A         	goto	u5801
  1778  00151A  EF91  F00A         	goto	u5800
  1779  00151E                     u5801:
  1780  00151E  EF0F  F00B         	goto	l4681
  1781  001522                     u5800:
  1782  001522                     
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1785  001522  0E00               	movlw	0
  1786  001524  6FE1               	movwf	(_prec+1)& (0+255),b
  1787  001526  0E00               	movlw	0
  1788  001528  6FE0               	movwf	_prec& (0+255),b
  1789  00152A                     
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1792  00152A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  00152E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  001532  2ADE               	incf	postinc2,f,c
  1795  001534  0E00               	movlw	0
  1796  001536  22DD               	addwfc	postdec2,f,c
  1797  001538                     
  1798                           ; BSR set to: 0
  1799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1800  001538  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  00153C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  001540  CFDE FFF6          	movff	postinc2,tblptrl
  1803  001544  CFDD FFF7          	movff	postdec2,tblptrh
  1804  001548                     	if	0	;tblptru may be non-zero
  1805  001548                     	endif
  1806  001548                     	if	0	;tblptru may be non-zero
  1807  001548                     	endif
  1808  001548  0008               	tblrd		*
  1809  00154A  50F5               	movf	tablat,w,c
  1810  00154C  0A2A               	xorlw	42
  1811  00154E  A4D8               	btfss	status,2,c
  1812  001550  EFAC  F00A         	goto	u5811
  1813  001554  EFAE  F00A         	goto	u5810
  1814  001558                     u5811:
  1815  001558  EFCB  F00A         	goto	l4671
  1816  00155C                     u5810:
  1817  00155C                     
  1818                           ; BSR set to: 0
  1819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1820  00155C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1821  001560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1822  001564  2ADE               	incf	postinc2,f,c
  1823  001566  0E00               	movlw	0
  1824  001568  22DD               	addwfc	postdec2,f,c
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1827  00156A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1828  00156E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1829  001572  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1830  001576  0E02               	movlw	2
  1831  001578  26DE               	addwf	postinc2,f,c
  1832  00157A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1833  00157E  0E00               	movlw	0
  1834  001580  22DD               	addwfc	postdec2,f,c
  1835  001582  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1836  001586  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1837  00158A  CFDE F0E0          	movff	postinc2,_prec
  1838  00158E  CFDD F0E1          	movff	postdec2,_prec+1
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1841  001592  EF0F  F00B         	goto	l4681
  1842  001596                     l4671:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1846  001596  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1847  00159A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1848  00159E  CFDE F008          	movff	postinc2,atoi@s
  1849  0015A2  CFDD F009          	movff	postdec2,atoi@s+1
  1850  0015A6  EC50  F01A         	call	_atoi	;wreg free
  1851  0015AA  C008  F0E0         	movff	?_atoi,_prec
  1852  0015AE  C009  F0E1         	movff	?_atoi+1,_prec+1
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1855  0015B2  EFE2  F00A         	goto	l4675
  1856  0015B6                     l4673:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1860  0015B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1861  0015BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1862  0015BE  2ADE               	incf	postinc2,f,c
  1863  0015C0  0E00               	movlw	0
  1864  0015C2  22DD               	addwfc	postdec2,f,c
  1865  0015C4                     l4675:
  1866  0015C4  0ED0               	movlw	208
  1867  0015C6  6E46               	movwf	??_vfpfcnvrt^0,c
  1868  0015C8  0EFF               	movlw	255
  1869  0015CA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1870  0015CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871  0015D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872  0015D4  CFDE FFF6          	movff	postinc2,tblptrl
  1873  0015D8  CFDD FFF7          	movff	postdec2,tblptrh
  1874  0015DC                     	if	0	;tblptru may be non-zero
  1875  0015DC                     	endif
  1876  0015DC                     	if	0	;tblptru may be non-zero
  1877  0015DC                     	endif
  1878  0015DC  0008               	tblrd		*
  1879  0015DE  50F5               	movf	tablat,w,c
  1880  0015E0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1881  0015E2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1882  0015E4  5046               	movf	??_vfpfcnvrt^0,w,c
  1883  0015E6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1884  0015E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1885  0015EA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1886  0015EC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1887  0015EE  E10A               	bnz	u5820
  1888  0015F0  0E0A               	movlw	10
  1889  0015F2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1890  0015F4  A0D8               	btfss	status,0,c
  1891  0015F6  EFFF  F00A         	goto	u5821
  1892  0015FA  EF02  F00B         	goto	u5820
  1893  0015FE                     u5821:
  1894  0015FE  0E01               	movlw	1
  1895  001600  EF03  F00B         	goto	u5830
  1896  001604                     u5820:
  1897  001604  0E00               	movlw	0
  1898  001606                     u5830:
  1899  001606  0100               	movlb	0	; () banked
  1900  001608  6FA2               	movwf	_vfpfcnvrt$923& (0+255),b
  1901  00160A  6BA3               	clrf	(_vfpfcnvrt$923+1)& (0+255),b
  1902  00160C                     
  1903                           ; BSR set to: 0
  1904  00160C  51A2               	movf	_vfpfcnvrt$923& (0+255),w,b
  1905  00160E  11A3               	iorwf	(_vfpfcnvrt$923+1)& (0+255),w,b
  1906  001610  A4D8               	btfss	status,2,c
  1907  001612  EF0D  F00B         	goto	u5841
  1908  001616  EF0F  F00B         	goto	u5840
  1909  00161A                     u5841:
  1910  00161A  EFDB  F00A         	goto	l4673
  1911  00161E                     u5840:
  1912  00161E                     l4681:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1916  00161E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1917  001622  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1918  001626  CFDE FFF6          	movff	postinc2,tblptrl
  1919  00162A  CFDD FFF7          	movff	postdec2,tblptrh
  1920  00162E                     	if	0	;tblptru may be non-zero
  1921  00162E                     	endif
  1922  00162E                     	if	0	;tblptru may be non-zero
  1923  00162E                     	endif
  1924  00162E  0008               	tblrd		*
  1925  001630  50F5               	movf	tablat,w,c
  1926  001632  6E07               	movwf	tolower@c^0,c
  1927  001634  6A08               	clrf	(tolower@c+1)^0,c
  1928  001636  EC4A  F021         	call	_tolower	;wreg free
  1929  00163A  5007               	movf	?_tolower^0,w,c
  1930  00163C  0100               	movlb	0	; () banked
  1931  00163E  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  1932  001640                     
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1935  001640  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  1936  001642  B4D8               	btfsc	status,2,c
  1937  001644  EF26  F00B         	goto	u5851
  1938  001648  EF28  F00B         	goto	u5850
  1939  00164C                     u5851:
  1940  00164C  EF62  F00B         	goto	l4691
  1941  001650                     u5850:
  1942  001650                     
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1945  001650  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1946  001654  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1947  001658  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1948  00165C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1949  001660  0E01               	movlw	1
  1950  001662  2646               	addwf	??_vfpfcnvrt^0,f,c
  1951  001664  0E00               	movlw	0
  1952  001666  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1953  001668  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1954  00166C  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1955  001670                     	if	0	;tblptru may be non-zero
  1956  001670                     	endif
  1957  001670                     	if	0	;tblptru may be non-zero
  1958  001670                     	endif
  1959  001670  0008               	tblrd		*
  1960  001672  50F5               	movf	tablat,w,c
  1961  001674  6E07               	movwf	tolower@c^0,c
  1962  001676  6A08               	clrf	(tolower@c+1)^0,c
  1963  001678  EC4A  F021         	call	_tolower	;wreg free
  1964  00167C  5007               	movf	?_tolower^0,w,c
  1965  00167E  0100               	movlb	0	; () banked
  1966  001680  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1967  001682                     
  1968                           ; BSR set to: 0
  1969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1970  001682  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1971  001684  B4D8               	btfsc	status,2,c
  1972  001686  EF47  F00B         	goto	u5861
  1973  00168A  EF49  F00B         	goto	u5860
  1974  00168E                     u5861:
  1975  00168E  EF62  F00B         	goto	l4691
  1976  001692                     u5860:
  1977  001692                     
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1980  001692  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1981  001696  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1982  00169A  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1983  00169E  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1984  0016A2  0E02               	movlw	2
  1985  0016A4  2646               	addwf	??_vfpfcnvrt^0,f,c
  1986  0016A6  0E00               	movlw	0
  1987  0016A8  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1988  0016AA  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1989  0016AE  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1990  0016B2                     	if	0	;tblptru may be non-zero
  1991  0016B2                     	endif
  1992  0016B2                     	if	0	;tblptru may be non-zero
  1993  0016B2                     	endif
  1994  0016B2  0008               	tblrd		*
  1995  0016B4  50F5               	movf	tablat,w,c
  1996  0016B6  6E07               	movwf	tolower@c^0,c
  1997  0016B8  6A08               	clrf	(tolower@c+1)^0,c
  1998  0016BA  EC4A  F021         	call	_tolower	;wreg free
  1999  0016BE  5007               	movf	?_tolower^0,w,c
  2000  0016C0  0100               	movlb	0	; () banked
  2001  0016C2  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2002  0016C4                     l4691:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2006  0016C4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  0016C8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  2009  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  2010  0016D4                     	if	0	;tblptru may be non-zero
  2011  0016D4                     	endif
  2012  0016D4                     	if	0	;tblptru may be non-zero
  2013  0016D4                     	endif
  2014  0016D4  0008               	tblrd		*
  2015  0016D6  50F5               	movf	tablat,w,c
  2016  0016D8  0A64               	xorlw	100
  2017  0016DA  B4D8               	btfsc	status,2,c
  2018  0016DC  EF72  F00B         	goto	u5871
  2019  0016E0  EF74  F00B         	goto	u5870
  2020  0016E4                     u5871:
  2021  0016E4  EF86  F00B         	goto	l4695
  2022  0016E8                     u5870:
  2023  0016E8                     
  2024                           ; BSR set to: 0
  2025  0016E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2026  0016EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2027  0016F0  CFDE FFF6          	movff	postinc2,tblptrl
  2028  0016F4  CFDD FFF7          	movff	postdec2,tblptrh
  2029  0016F8                     	if	0	;tblptru may be non-zero
  2030  0016F8                     	endif
  2031  0016F8                     	if	0	;tblptru may be non-zero
  2032  0016F8                     	endif
  2033  0016F8  0008               	tblrd		*
  2034  0016FA  50F5               	movf	tablat,w,c
  2035  0016FC  0A69               	xorlw	105
  2036  0016FE  A4D8               	btfss	status,2,c
  2037  001700  EF84  F00B         	goto	u5881
  2038  001704  EF86  F00B         	goto	u5880
  2039  001708                     u5881:
  2040  001708  EFC6  F00B         	goto	l4701
  2041  00170C                     u5880:
  2042  00170C                     l4695:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2046  00170C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047  001710  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048  001714  2ADE               	incf	postinc2,f,c
  2049  001716  0E00               	movlw	0
  2050  001718  22DD               	addwfc	postdec2,f,c
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2053  00171A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2054  00171E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2055  001722  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2056  001726  0E02               	movlw	2
  2057  001728  26DE               	addwf	postinc2,f,c
  2058  00172A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2059  00172E  0E00               	movlw	0
  2060  001730  22DD               	addwfc	postdec2,f,c
  2061  001732  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2062  001736  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2063  00173A  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  2064  00173E  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  2065  001742  0E00               	movlw	0
  2066  001744  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2067  001746  0EFF               	movlw	-1
  2068  001748  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2069  00174A  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2070  00174C  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2071  00174E  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2072  001750  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2073  001752  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2074  001754                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2077  001754  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2078  001758  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2079  00175C  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2080  001760  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2081  001764  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2082  001768  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2083  00176C  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2084  001770  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2085  001774  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2086  001778  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2087  00177C  EC36  F013         	call	_dtoa	;wreg free
  2088  001780  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2089  001784  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2090  001788  EFF3  F00C         	goto	l1095
  2091  00178C                     l4701:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  2095  00178C  0E66               	movlw	102
  2096  00178E  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2097  001790  A4D8               	btfss	status,2,c
  2098  001792  EFCD  F00B         	goto	u5891
  2099  001796  EFCF  F00B         	goto	u5890
  2100  00179A                     u5891:
  2101  00179A  EF0F  F00C         	goto	l4713
  2102  00179E                     u5890:
  2103  00179E                     
  2104                           ; BSR set to: 0
  2105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  2106  00179E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2107  0017A2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2108  0017A6  CFDE FFF6          	movff	postinc2,tblptrl
  2109  0017AA  CFDD FFF7          	movff	postdec2,tblptrh
  2110  0017AE                     	if	0	;tblptru may be non-zero
  2111  0017AE                     	endif
  2112  0017AE                     	if	0	;tblptru may be non-zero
  2113  0017AE                     	endif
  2114  0017AE  0008               	tblrd		*
  2115  0017B0  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  2116  0017B4                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2119  0017B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2120  0017B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2121  0017BC  2ADE               	incf	postinc2,f,c
  2122  0017BE  0E00               	movlw	0
  2123  0017C0  22DD               	addwfc	postdec2,f,c
  2124  0017C2                     
  2125                           ; BSR set to: 0
  2126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2127  0017C2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2128  0017C6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2129  0017CA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2130  0017CE  0E04               	movlw	4
  2131  0017D0  26DE               	addwf	postinc2,f,c
  2132  0017D2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2133  0017D6  0E00               	movlw	0
  2134  0017D8  22DD               	addwfc	postdec2,f,c
  2135  0017DA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2136  0017DE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2137  0017E2  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  2138  0017E6  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  2139  0017EA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  2140  0017EE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  2141  0017F2                     l4709:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2145  0017F2  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2146  0017F6  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2147  0017FA  C0A6  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2148  0017FE  C0A7  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2149  001802  C0A8  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2150  001806  C0A9  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2151  00180A  C0AD  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2152  00180E  EC26  F004         	call	_efgtoa	;wreg free
  2153  001812  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2154  001816  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2155  00181A  EFF3  F00C         	goto	l1095
  2156  00181E                     l4713:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2160  00181E  0EAA               	movlw	low vfpfcnvrt@ct
  2161  001820  6E01               	movwf	strncmp@_l^0,c
  2162  001822  0E00               	movlw	high vfpfcnvrt@ct
  2163  001824  6E02               	movwf	(strncmp@_l+1)^0,c
  2164  001826  0E44               	movlw	low STR_14
  2165  001828  6E03               	movwf	strncmp@_r^0,c
  2166  00182A  0E08               	movlw	high STR_14
  2167  00182C  6E04               	movwf	(strncmp@_r+1)^0,c
  2168  00182E  0E00               	movlw	0
  2169  001830  6E06               	movwf	(strncmp@n+1)^0,c
  2170  001832  0E02               	movlw	2
  2171  001834  6E05               	movwf	strncmp@n^0,c
  2172  001836  ECD7  F01E         	call	_strncmp	;wreg free
  2173  00183A  5001               	movf	?_strncmp^0,w,c
  2174  00183C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2175  00183E  A4D8               	btfss	status,2,c
  2176  001840  EF24  F00C         	goto	u5901
  2177  001844  EF26  F00C         	goto	u5900
  2178  001848                     u5901:
  2179  001848  EFA2  F00C         	goto	l4729
  2180  00184C                     u5900:
  2181  00184C                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2183  00184C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184  001850  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185  001854  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2186  001858  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2187  00185C  0E01               	movlw	1
  2188  00185E  2646               	addwf	??_vfpfcnvrt^0,f,c
  2189  001860  0E00               	movlw	0
  2190  001862  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2191  001864  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2192  001868  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2193  00186C                     	if	0	;tblptru may be non-zero
  2194  00186C                     	endif
  2195  00186C                     	if	0	;tblptru may be non-zero
  2196  00186C                     	endif
  2197  00186C  0008               	tblrd		*
  2198  00186E  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  2199  001872  0EBF               	movlw	191
  2200  001874  6E46               	movwf	??_vfpfcnvrt^0,c
  2201  001876  0EFF               	movlw	255
  2202  001878  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2203  00187A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2204  00187E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2205  001882  CFDE FFF6          	movff	postinc2,tblptrl
  2206  001886  CFDD FFF7          	movff	postdec2,tblptrh
  2207  00188A                     	if	0	;tblptru may be non-zero
  2208  00188A                     	endif
  2209  00188A                     	if	0	;tblptru may be non-zero
  2210  00188A                     	endif
  2211  00188A  0008               	tblrd		*
  2212  00188C  50F5               	movf	tablat,w,c
  2213  00188E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2214  001890  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2215  001892  5046               	movf	??_vfpfcnvrt^0,w,c
  2216  001894  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2217  001896  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2218  001898  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2219  00189A  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2220  00189C  E10A               	bnz	u5910
  2221  00189E  0E1A               	movlw	26
  2222  0018A0  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2223  0018A2  A0D8               	btfss	status,0,c
  2224  0018A4  EF56  F00C         	goto	u5911
  2225  0018A8  EF59  F00C         	goto	u5910
  2226  0018AC                     u5911:
  2227  0018AC  0E01               	movlw	1
  2228  0018AE  EF5A  F00C         	goto	u5920
  2229  0018B2                     u5910:
  2230  0018B2  0E00               	movlw	0
  2231  0018B4                     u5920:
  2232  0018B4  0100               	movlb	0	; () banked
  2233  0018B6  6FA4               	movwf	_vfpfcnvrt$928& (0+255),b
  2234  0018B8  6BA5               	clrf	(_vfpfcnvrt$928+1)& (0+255),b
  2235  0018BA                     
  2236                           ; BSR set to: 0
  2237  0018BA  51A4               	movf	_vfpfcnvrt$928& (0+255),w,b
  2238  0018BC  11A5               	iorwf	(_vfpfcnvrt$928+1)& (0+255),w,b
  2239  0018BE  B4D8               	btfsc	status,2,c
  2240  0018C0  EF64  F00C         	goto	u5931
  2241  0018C4  EF66  F00C         	goto	u5930
  2242  0018C8                     u5931:
  2243  0018C8  EF80  F00C         	goto	l4723
  2244  0018CC                     u5930:
  2245  0018CC                     
  2246                           ; BSR set to: 0
  2247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2248  0018CC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2249  0018D0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2250  0018D4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2251  0018D8  0E04               	movlw	4
  2252  0018DA  26DE               	addwf	postinc2,f,c
  2253  0018DC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2254  0018E0  0E00               	movlw	0
  2255  0018E2  22DD               	addwfc	postdec2,f,c
  2256  0018E4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2257  0018E8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2258  0018EC  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  2259  0018F0  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  2260  0018F4  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  2261  0018F8  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2264  0018FC  EF98  F00C         	goto	l1103
  2265  001900                     l4723:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2269  001900  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2270  001904  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2271  001908  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2272  00190C  0E04               	movlw	4
  2273  00190E  26DE               	addwf	postinc2,f,c
  2274  001910  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2275  001914  0E00               	movlw	0
  2276  001916  22DD               	addwfc	postdec2,f,c
  2277  001918  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2278  00191C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2279  001920  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  2280  001924  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  2281  001928  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  2282  00192C  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  2283  001930                     l1103:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2287  001930  0E02               	movlw	2
  2288  001932  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2289  001936  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2290  00193A  26DE               	addwf	postinc2,f,c
  2291  00193C  0E00               	movlw	0
  2292  00193E  22DD               	addwfc	postdec2,f,c
  2293  001940  EFF9  F00B         	goto	l4709
  2294  001944                     l4729:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2297  001944  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2298  001948  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2299  00194C  CFDE FFF6          	movff	postinc2,tblptrl
  2300  001950  CFDD FFF7          	movff	postdec2,tblptrh
  2301  001954                     	if	0	;tblptru may be non-zero
  2302  001954                     	endif
  2303  001954                     	if	0	;tblptru may be non-zero
  2304  001954                     	endif
  2305  001954  0008               	tblrd		*
  2306  001956  50F5               	movf	tablat,w,c
  2307  001958  0A25               	xorlw	37
  2308  00195A  A4D8               	btfss	status,2,c
  2309  00195C  EFB2  F00C         	goto	u5941
  2310  001960  EFB4  F00C         	goto	u5940
  2311  001964                     u5941:
  2312  001964  EFCB  F00C         	goto	l4739
  2313  001968                     u5940:
  2314  001968                     
  2315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2316  001968  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2317  00196C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2318  001970  2ADE               	incf	postinc2,f,c
  2319  001972  0E00               	movlw	0
  2320  001974  22DD               	addwfc	postdec2,f,c
  2321  001976                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2323  001976  0E00               	movlw	0
  2324  001978  6E02               	movwf	(fputc@c+1)^0,c
  2325  00197A  0E25               	movlw	37
  2326  00197C  6E01               	movwf	fputc@c^0,c
  2327  00197E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2328  001982  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2329  001986  EC42  F01F         	call	_fputc	;wreg free
  2330  00198A                     l4735:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2333  00198A  0E00               	movlw	0
  2334  00198C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2335  00198E  0E01               	movlw	1
  2336  001990  6E40               	movwf	?_vfpfcnvrt^0,c
  2337  001992  EFF3  F00C         	goto	l1095
  2338  001996                     l4739:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2341  001996  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342  00199A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343  00199E  2ADE               	incf	postinc2,f,c
  2344  0019A0  0E00               	movlw	0
  2345  0019A2  22DD               	addwfc	postdec2,f,c
  2346  0019A4                     
  2347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2348  0019A4  0E00               	movlw	0
  2349  0019A6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2350  0019A8  0E00               	movlw	0
  2351  0019AA  6E40               	movwf	?_vfpfcnvrt^0,c
  2352  0019AC  EFF3  F00C         	goto	l1095
  2353  0019B0                     l4745:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2356  0019B0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2357  0019B4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2358  0019B8  CFDE FFF6          	movff	postinc2,tblptrl
  2359  0019BC  CFDD FFF7          	movff	postdec2,tblptrh
  2360  0019C0                     	if	0	;tblptru may be non-zero
  2361  0019C0                     	endif
  2362  0019C0                     	if	0	;tblptru may be non-zero
  2363  0019C0                     	endif
  2364  0019C0  0008               	tblrd		*
  2365  0019C2  50F5               	movf	tablat,w,c
  2366  0019C4  6E01               	movwf	fputc@c^0,c
  2367  0019C6  6A02               	clrf	(fputc@c+1)^0,c
  2368  0019C8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2369  0019CC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2370  0019D0  EC42  F01F         	call	_fputc	;wreg free
  2371  0019D4                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2373  0019D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2374  0019D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2375  0019DC  2ADE               	incf	postinc2,f,c
  2376  0019DE  0E00               	movlw	0
  2377  0019E0  22DD               	addwfc	postdec2,f,c
  2378  0019E2  EFC5  F00C         	goto	l4735
  2379  0019E6                     l1095:
  2380  0019E6  0012               	return		;funcret
  2381  0019E8                     __end_of_vfpfcnvrt:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _strncmp *****************
  2385 ;; Defined at:
  2386 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2389 ;;		 -> vfpfcnvrt@ct(3), 
  2390 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2391 ;;		 -> STR_16(3), 
  2392 ;;  n               2    4[COMRAM] unsigned int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2395 ;;		 -> STR_16(3), 
  2396 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2397 ;;		 -> vfpfcnvrt@ct(3), 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  2    0[COMRAM] int 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         6       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2410 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:       11 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    1
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_vfpfcnvrt
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text4
  2422  003DAE                     __ptext4:
  2423                           	callstack 0
  2424  003DAE                     _strncmp:
  2425                           	callstack 26
  2426  003DAE  C001  F008         	movff	strncmp@_l,strncmp@l
  2427  003DB2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2428  003DB6  C003  F00A         	movff	strncmp@_r,strncmp@r
  2429  003DBA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2430  003DBE  0605               	decf	strncmp@n^0,f,c
  2431  003DC0  A0D8               	btfss	status,0,c
  2432  003DC2  0606               	decf	(strncmp@n+1)^0,f,c
  2433  003DC4  2805               	incf	strncmp@n^0,w,c
  2434  003DC6  E106               	bnz	u5721
  2435  003DC8  2806               	incf	(strncmp@n+1)^0,w,c
  2436  003DCA  A4D8               	btfss	status,2,c
  2437  003DCC  EFEA  F01E         	goto	u5721
  2438  003DD0  EFEC  F01E         	goto	u5720
  2439  003DD4                     u5721:
  2440  003DD4  EFF9  F01E         	goto	l4569
  2441  003DD8                     u5720:
  2442  003DD8  0E00               	movlw	0
  2443  003DDA  6E02               	movwf	(?_strncmp+1)^0,c
  2444  003DDC  0E00               	movlw	0
  2445  003DDE  6E01               	movwf	?_strncmp^0,c
  2446  003DE0  EF41  F01F         	goto	l1231
  2447  003DE4                     l4567:
  2448  003DE4  4A08               	infsnz	strncmp@l^0,f,c
  2449  003DE6  2A09               	incf	(strncmp@l+1)^0,f,c
  2450  003DE8  4A0A               	infsnz	strncmp@r^0,f,c
  2451  003DEA  2A0B               	incf	(strncmp@r+1)^0,f,c
  2452  003DEC  0605               	decf	strncmp@n^0,f,c
  2453  003DEE  A0D8               	btfss	status,0,c
  2454  003DF0  0606               	decf	(strncmp@n+1)^0,f,c
  2455  003DF2                     l4569:
  2456  003DF2  C008  FFD9         	movff	strncmp@l,fsr2l
  2457  003DF6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2458  003DFA  50DF               	movf	indf2,w,c
  2459  003DFC  B4D8               	btfsc	status,2,c
  2460  003DFE  EF03  F01F         	goto	u5731
  2461  003E02  EF05  F01F         	goto	u5730
  2462  003E06                     u5731:
  2463  003E06  EF30  F01F         	goto	l4577
  2464  003E0A                     u5730:
  2465  003E0A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2466  003E0E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2467  003E12                     	if	0	;tblptru may be non-zero
  2468  003E12                     	endif
  2469  003E12                     	if	0	;tblptru may be non-zero
  2470  003E12                     	endif
  2471  003E12  0008               	tblrd		*
  2472  003E14  50F5               	movf	tablat,w,c
  2473  003E16  0900               	iorlw	0
  2474  003E18  B4D8               	btfsc	status,2,c
  2475  003E1A  EF11  F01F         	goto	u5741
  2476  003E1E  EF13  F01F         	goto	u5740
  2477  003E22                     u5741:
  2478  003E22  EF30  F01F         	goto	l4577
  2479  003E26                     u5740:
  2480  003E26  5005               	movf	strncmp@n^0,w,c
  2481  003E28  1006               	iorwf	(strncmp@n+1)^0,w,c
  2482  003E2A  B4D8               	btfsc	status,2,c
  2483  003E2C  EF1A  F01F         	goto	u5751
  2484  003E30  EF1C  F01F         	goto	u5750
  2485  003E34                     u5751:
  2486  003E34  EF30  F01F         	goto	l4577
  2487  003E38                     u5750:
  2488  003E38  C008  FFD9         	movff	strncmp@l,fsr2l
  2489  003E3C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2490  003E40  50DF               	movf	indf2,w,c
  2491  003E42  6E07               	movwf	??_strncmp^0,c
  2492  003E44  C00A  FFF6         	movff	strncmp@r,tblptrl
  2493  003E48  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2494  003E4C                     	if	0	;tblptru may be non-zero
  2495  003E4C                     	endif
  2496  003E4C                     	if	0	;tblptru may be non-zero
  2497  003E4C                     	endif
  2498  003E4C  0008               	tblrd		*
  2499  003E4E  50F5               	movf	tablat,w,c
  2500  003E50  1807               	xorwf	??_strncmp^0,w,c
  2501  003E52  B4D8               	btfsc	status,2,c
  2502  003E54  EF2E  F01F         	goto	u5761
  2503  003E58  EF30  F01F         	goto	u5760
  2504  003E5C                     u5761:
  2505  003E5C  EFF2  F01E         	goto	l4567
  2506  003E60                     u5760:
  2507  003E60                     l4577:
  2508  003E60  C008  FFD9         	movff	strncmp@l,fsr2l
  2509  003E64  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2510  003E68  50DF               	movf	indf2,w,c
  2511  003E6A  6E07               	movwf	??_strncmp^0,c
  2512  003E6C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2513  003E70  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2514  003E74                     	if	0	;tblptru may be non-zero
  2515  003E74                     	endif
  2516  003E74                     	if	0	;tblptru may be non-zero
  2517  003E74                     	endif
  2518  003E74  0008               	tblrd		*
  2519  003E76  50F5               	movf	tablat,w,c
  2520  003E78  5C07               	subwf	??_strncmp^0,w,c
  2521  003E7A  6E01               	movwf	?_strncmp^0,c
  2522  003E7C  6A02               	clrf	(?_strncmp+1)^0,c
  2523  003E7E  A0D8               	btfss	status,0,c
  2524  003E80  0602               	decf	(?_strncmp+1)^0,f,c
  2525  003E82                     l1231:
  2526  003E82  0012               	return		;funcret
  2527  003E84                     __end_of_strncmp:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _efgtoa *****************
  2531 ;; Defined at:
  2532 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2535 ;;		 -> sprintf@f(6), 
  2536 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2537 ;;  c               1   51[COMRAM] unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  u               4   52[BANK0 ] unsigned char 
  2540 ;;  g               4   44[BANK0 ] unsigned char 
  2541 ;;  l               4   38[BANK0 ] unsigned char 
  2542 ;;  h               4   34[BANK0 ] unsigned char 
  2543 ;;  ou              4    0[BANK0 ] unsigned char 
  2544 ;;  n               2   50[BANK0 ] int 
  2545 ;;  e               2   48[BANK0 ] int 
  2546 ;;  i               2   42[BANK0 ] int 
  2547 ;;  w               2   31[BANK0 ] int 
  2548 ;;  p               2   28[BANK0 ] int 
  2549 ;;  sign            2   26[BANK0 ] int 
  2550 ;;  d               2   24[BANK0 ] int 
  2551 ;;  ne              2   22[BANK0 ] int 
  2552 ;;  m               2   20[BANK0 ] int 
  2553 ;;  pp              2   18[BANK0 ] int 
  2554 ;;  t               2   16[BANK0 ] int 
  2555 ;;  mode            1   33[BANK0 ] unsigned char 
  2556 ;;  nmode           1   30[BANK0 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2   45[COMRAM] int 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2566 ;;      Params:         7       0       0       0       0       0       0       0       0
  2567 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2568 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2569 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2570 ;;Total ram usage:       68 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    5
  2573 ;; This function calls:
  2574 ;;		___awdiv
  2575 ;;		___awmod
  2576 ;;		___fladd
  2577 ;;		___fldiv
  2578 ;;		___fleq
  2579 ;;		___flge
  2580 ;;		___flmul
  2581 ;;		___flneg
  2582 ;;		___flsub
  2583 ;;		___fltol
  2584 ;;		___fpclassifyf
  2585 ;;		_floorf
  2586 ;;		_isupper
  2587 ;;		_pad
  2588 ;;		_strcpy
  2589 ;;		_tolower
  2590 ;; This function is called by:
  2591 ;;		_vfpfcnvrt
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text5
  2596  00084C                     __ptext5:
  2597                           	callstack 0
  2598  00084C                     _efgtoa:
  2599                           	callstack 22
  2600  00084C                     
  2601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2602  00084C  0E00               	movlw	0
  2603  00084E  0100               	movlb	0	; () banked
  2604  000850  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2605  000852  0E00               	movlw	0
  2606  000854  6F7A               	movwf	efgtoa@sign& (0+255),b
  2607  000856                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2610  000856  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2611  00085A  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2612  00085E  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2613  000862  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2614  000866                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2617  000866  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2618  000868  EF3A  F004         	goto	u5130
  2619  00086C  EF38  F004         	goto	u5131
  2620  000870                     u5131:
  2621  000870  EF50  F004         	goto	l4231
  2622  000874                     u5130:
  2623  000874                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2626  000874  0E00               	movlw	0
  2627  000876  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2628  000878  0E01               	movlw	1
  2629  00087A  6F7A               	movwf	efgtoa@sign& (0+255),b
  2630  00087C                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2633  00087C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2634  000880  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2635  000884  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2636  000888  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2637  00088C  EC5F  F023         	call	___flneg	;wreg free
  2638  000890  C001  F08C         	movff	?___flneg,efgtoa@g
  2639  000894  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2640  000898  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2641  00089C  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2642  0008A0                     l4231:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2645  0008A0  0E00               	movlw	0
  2646  0008A2  0100               	movlb	0	; () banked
  2647  0008A4  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2648  0008A6  0E00               	movlw	0
  2649  0008A8  6F92               	movwf	efgtoa@n& (0+255),b
  2650  0008AA                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2653  0008AA  C0DE  F07F         	movff	_width,efgtoa@w
  2654  0008AE  C0DF  F080         	movff	_width+1,efgtoa@w+1
  2655  0008B2                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2658  0008B2  517A               	movf	efgtoa@sign& (0+255),w,b
  2659  0008B4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2660  0008B6  A4D8               	btfss	status,2,c
  2661  0008B8  EF60  F004         	goto	u5141
  2662  0008BC  EF62  F004         	goto	u5140
  2663  0008C0                     u5141:
  2664  0008C0  EF69  F004         	goto	l4239
  2665  0008C4                     u5140:
  2666  0008C4                     
  2667                           ; BSR set to: 0
  2668  0008C4  A5E2               	btfss	_flags& (0+255),2,b
  2669  0008C6  EF67  F004         	goto	u5151
  2670  0008CA  EF69  F004         	goto	u5150
  2671  0008CE                     u5151:
  2672  0008CE  EF83  F004         	goto	l4251
  2673  0008D2                     u5150:
  2674  0008D2                     l4239:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2678  0008D2  517A               	movf	efgtoa@sign& (0+255),w,b
  2679  0008D4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2680  0008D6  A4D8               	btfss	status,2,c
  2681  0008D8  EF70  F004         	goto	u5161
  2682  0008DC  EF72  F004         	goto	u5160
  2683  0008E0                     u5161:
  2684  0008E0  EF78  F004         	goto	l4243
  2685  0008E4                     u5160:
  2686  0008E4                     
  2687                           ; BSR set to: 0
  2688  0008E4  0E00               	movlw	0
  2689  0008E6  6F65               	movwf	(_efgtoa$898+1)& (0+255),b
  2690  0008E8  0E2B               	movlw	43
  2691  0008EA  6F64               	movwf	_efgtoa$898& (0+255),b
  2692  0008EC  EF7C  F004         	goto	l4245
  2693  0008F0                     l4243:
  2694                           
  2695                           ; BSR set to: 0
  2696  0008F0  0E00               	movlw	0
  2697  0008F2  6F65               	movwf	(_efgtoa$898+1)& (0+255),b
  2698  0008F4  0E2D               	movlw	45
  2699  0008F6  6F64               	movwf	_efgtoa$898& (0+255),b
  2700  0008F8                     l4245:
  2701                           
  2702                           ; BSR set to: 0
  2703  0008F8  C064  F100         	movff	_efgtoa$898,_dbuf
  2704  0008FC                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2707  0008FC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2708  0008FE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2709  000900                     
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2712  000900  077F               	decf	efgtoa@w& (0+255),f,b
  2713  000902  A0D8               	btfss	status,0,c
  2714  000904  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2715  000906                     l4251:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2719  000906  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2720  00090A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2721  00090E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2722  000912  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2723  000916  EC58  F01E         	call	___fpclassifyf	;wreg free
  2724  00091A  0401               	decf	?___fpclassifyf^0,w,c
  2725  00091C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2726  00091E  A4D8               	btfss	status,2,c
  2727  000920  EF94  F004         	goto	u5171
  2728  000924  EF96  F004         	goto	u5170
  2729  000928                     u5171:
  2730  000928  EFED  F004         	goto	l4269
  2731  00092C                     u5170:
  2732  00092C  0EBF               	movlw	191
  2733  00092E  6E35               	movwf	??_efgtoa^0,c
  2734  000930  0EFF               	movlw	255
  2735  000932  6E36               	movwf	(??_efgtoa+1)^0,c
  2736  000934  5034               	movf	efgtoa@c^0,w,c
  2737  000936  6E37               	movwf	(??_efgtoa+2)^0,c
  2738  000938  6A38               	clrf	(??_efgtoa+3)^0,c
  2739  00093A  5035               	movf	??_efgtoa^0,w,c
  2740  00093C  2637               	addwf	(??_efgtoa+2)^0,f,c
  2741  00093E  5036               	movf	(??_efgtoa+1)^0,w,c
  2742  000940  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2743  000942  5038               	movf	(??_efgtoa+3)^0,w,c
  2744  000944  E10A               	bnz	u5180
  2745  000946  0E1A               	movlw	26
  2746  000948  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2747  00094A  A0D8               	btfss	status,0,c
  2748  00094C  EFAA  F004         	goto	u5181
  2749  000950  EFAD  F004         	goto	u5180
  2750  000954                     u5181:
  2751  000954  0E01               	movlw	1
  2752  000956  EFAE  F004         	goto	u5190
  2753  00095A                     u5180:
  2754  00095A  0E00               	movlw	0
  2755  00095C                     u5190:
  2756  00095C  0100               	movlb	0	; () banked
  2757  00095E  6F66               	movwf	_efgtoa$899& (0+255),b
  2758  000960  6B67               	clrf	(_efgtoa$899+1)& (0+255),b
  2759  000962                     
  2760                           ; BSR set to: 0
  2761  000962  5166               	movf	_efgtoa$899& (0+255),w,b
  2762  000964  1167               	iorwf	(_efgtoa$899+1)& (0+255),w,b
  2763  000966  B4D8               	btfsc	status,2,c
  2764  000968  EFB8  F004         	goto	u5201
  2765  00096C  EFBA  F004         	goto	u5200
  2766  000970                     u5201:
  2767  000970  EFC8  F004         	goto	l4261
  2768  000974                     u5200:
  2769  000974                     
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2772  000974  0E00               	movlw	low _dbuf
  2773  000976  2592               	addwf	efgtoa@n& (0+255),w,b
  2774  000978  6E01               	movwf	strcpy@dest^0,c
  2775  00097A  0E01               	movlw	high _dbuf
  2776  00097C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2777  00097E  6E02               	movwf	(strcpy@dest+1)^0,c
  2778  000980  0E34               	movlw	low STR_6
  2779  000982  6E03               	movwf	strcpy@src^0,c
  2780  000984  0E08               	movlw	high STR_6
  2781  000986  6E04               	movwf	(strcpy@src+1)^0,c
  2782  000988  ECA9  F021         	call	_strcpy	;wreg free
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2785  00098C  EFD4  F004         	goto	l4263
  2786  000990                     l4261:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2790  000990  0E00               	movlw	low _dbuf
  2791  000992  2592               	addwf	efgtoa@n& (0+255),w,b
  2792  000994  6E01               	movwf	strcpy@dest^0,c
  2793  000996  0E01               	movlw	high _dbuf
  2794  000998  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2795  00099A  6E02               	movwf	(strcpy@dest+1)^0,c
  2796  00099C  0E3C               	movlw	low STR_7
  2797  00099E  6E03               	movwf	strcpy@src^0,c
  2798  0009A0  0E08               	movlw	high STR_7
  2799  0009A2  6E04               	movwf	(strcpy@src+1)^0,c
  2800  0009A4  ECA9  F021         	call	_strcpy	;wreg free
  2801  0009A8                     l4263:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2804  0009A8  0100               	movlb	0	; () banked
  2805  0009AA  0EFD               	movlw	253
  2806  0009AC  277F               	addwf	efgtoa@w& (0+255),f,b
  2807  0009AE  0EFF               	movlw	255
  2808  0009B0  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2809  0009B2                     l4265:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2812  0009B2  C02E  F011         	movff	efgtoa@fp,pad@fp
  2813  0009B6  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2814  0009BA  0E00               	movlw	low _dbuf
  2815  0009BC  6E13               	movwf	pad@buf^0,c
  2816  0009BE  0E01               	movlw	high _dbuf
  2817  0009C0  6E14               	movwf	(pad@buf+1)^0,c
  2818  0009C2  C07F  F015         	movff	efgtoa@w,pad@p
  2819  0009C6  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2820  0009CA  ECA7  F01F         	call	_pad	;wreg free
  2821  0009CE  C011  F02E         	movff	?_pad,?_efgtoa
  2822  0009D2  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2823  0009D6  EFFD  F009         	goto	l991
  2824  0009DA                     l4269:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2827  0009DA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2828  0009DE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2829  0009E2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2830  0009E6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2831  0009EA  EC58  F01E         	call	___fpclassifyf	;wreg free
  2832  0009EE  5001               	movf	?___fpclassifyf^0,w,c
  2833  0009F0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2834  0009F2  A4D8               	btfss	status,2,c
  2835  0009F4  EFFE  F004         	goto	u5211
  2836  0009F8  EF00  F005         	goto	u5210
  2837  0009FC                     u5211:
  2838  0009FC  EF40  F005         	goto	l4287
  2839  000A00                     u5210:
  2840  000A00  0EBF               	movlw	191
  2841  000A02  6E35               	movwf	??_efgtoa^0,c
  2842  000A04  0EFF               	movlw	255
  2843  000A06  6E36               	movwf	(??_efgtoa+1)^0,c
  2844  000A08  5034               	movf	efgtoa@c^0,w,c
  2845  000A0A  6E37               	movwf	(??_efgtoa+2)^0,c
  2846  000A0C  6A38               	clrf	(??_efgtoa+3)^0,c
  2847  000A0E  5035               	movf	??_efgtoa^0,w,c
  2848  000A10  2637               	addwf	(??_efgtoa+2)^0,f,c
  2849  000A12  5036               	movf	(??_efgtoa+1)^0,w,c
  2850  000A14  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2851  000A16  5038               	movf	(??_efgtoa+3)^0,w,c
  2852  000A18  E10A               	bnz	u5220
  2853  000A1A  0E1A               	movlw	26
  2854  000A1C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2855  000A1E  A0D8               	btfss	status,0,c
  2856  000A20  EF14  F005         	goto	u5221
  2857  000A24  EF17  F005         	goto	u5220
  2858  000A28                     u5221:
  2859  000A28  0E01               	movlw	1
  2860  000A2A  EF18  F005         	goto	u5230
  2861  000A2E                     u5220:
  2862  000A2E  0E00               	movlw	0
  2863  000A30                     u5230:
  2864  000A30  0100               	movlb	0	; () banked
  2865  000A32  6F68               	movwf	_efgtoa$903& (0+255),b
  2866  000A34  6B69               	clrf	(_efgtoa$903+1)& (0+255),b
  2867  000A36                     
  2868                           ; BSR set to: 0
  2869  000A36  5168               	movf	_efgtoa$903& (0+255),w,b
  2870  000A38  1169               	iorwf	(_efgtoa$903+1)& (0+255),w,b
  2871  000A3A  B4D8               	btfsc	status,2,c
  2872  000A3C  EF22  F005         	goto	u5241
  2873  000A40  EF24  F005         	goto	u5240
  2874  000A44                     u5241:
  2875  000A44  EF32  F005         	goto	l4279
  2876  000A48                     u5240:
  2877  000A48                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2880  000A48  0E00               	movlw	low _dbuf
  2881  000A4A  2592               	addwf	efgtoa@n& (0+255),w,b
  2882  000A4C  6E01               	movwf	strcpy@dest^0,c
  2883  000A4E  0E01               	movlw	high _dbuf
  2884  000A50  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2885  000A52  6E02               	movwf	(strcpy@dest+1)^0,c
  2886  000A54  0E38               	movlw	low STR_10
  2887  000A56  6E03               	movwf	strcpy@src^0,c
  2888  000A58  0E08               	movlw	high STR_10
  2889  000A5A  6E04               	movwf	(strcpy@src+1)^0,c
  2890  000A5C  ECA9  F021         	call	_strcpy	;wreg free
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2893  000A60  EFD4  F004         	goto	l4263
  2894  000A64                     l4279:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2898  000A64  0E00               	movlw	low _dbuf
  2899  000A66  2592               	addwf	efgtoa@n& (0+255),w,b
  2900  000A68  6E01               	movwf	strcpy@dest^0,c
  2901  000A6A  0E01               	movlw	high _dbuf
  2902  000A6C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2903  000A6E  6E02               	movwf	(strcpy@dest+1)^0,c
  2904  000A70  0E40               	movlw	low STR_11
  2905  000A72  6E03               	movwf	strcpy@src^0,c
  2906  000A74  0E08               	movlw	high STR_11
  2907  000A76  6E04               	movwf	(strcpy@src+1)^0,c
  2908  000A78  ECA9  F021         	call	_strcpy	;wreg free
  2909  000A7C  EFD4  F004         	goto	l4263
  2910  000A80                     l4287:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2913  000A80  0E00               	movlw	0
  2914  000A82  0100               	movlb	0	; () banked
  2915  000A84  6F94               	movwf	efgtoa@u& (0+255),b
  2916  000A86  0E00               	movlw	0
  2917  000A88  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2918  000A8A  0E80               	movlw	128
  2919  000A8C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2920  000A8E  0E3F               	movlw	63
  2921  000A90  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2924  000A92  0E00               	movlw	0
  2925  000A94  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2926  000A96  0E00               	movlw	0
  2927  000A98  6F90               	movwf	efgtoa@e& (0+255),b
  2928  000A9A                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2931  000A9A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2932  000A9E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2933  000AA2  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2934  000AA6  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2935  000AAA  0E00               	movlw	0
  2936  000AAC  6E05               	movwf	___fleq@ff2^0,c
  2937  000AAE  0E00               	movlw	0
  2938  000AB0  6E06               	movwf	(___fleq@ff2+1)^0,c
  2939  000AB2  0E00               	movlw	0
  2940  000AB4  6E07               	movwf	(___fleq@ff2+2)^0,c
  2941  000AB6  0E00               	movlw	0
  2942  000AB8  6E08               	movwf	(___fleq@ff2+3)^0,c
  2943  000ABA  ECC4  F020         	call	___fleq	;wreg free
  2944  000ABE  B0D8               	btfsc	status,0,c
  2945  000AC0  EF64  F005         	goto	u5251
  2946  000AC4  EF66  F005         	goto	u5250
  2947  000AC8                     u5251:
  2948  000AC8  EFE9  F005         	goto	l4305
  2949  000ACC                     u5250:
  2950  000ACC  EF85  F005         	goto	l4297
  2951  000AD0                     l4293:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2954  000AD0  C094  F001         	movff	efgtoa@u,___flmul@b
  2955  000AD4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2956  000AD8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2957  000ADC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2958  000AE0  0E00               	movlw	0
  2959  000AE2  6E05               	movwf	___flmul@a^0,c
  2960  000AE4  0E00               	movlw	0
  2961  000AE6  6E06               	movwf	(___flmul@a+1)^0,c
  2962  000AE8  0E20               	movlw	32
  2963  000AEA  6E07               	movwf	(___flmul@a+2)^0,c
  2964  000AEC  0E41               	movlw	65
  2965  000AEE  6E08               	movwf	(___flmul@a+3)^0,c
  2966  000AF0  EC54  F00F         	call	___flmul	;wreg free
  2967  000AF4  C001  F094         	movff	?___flmul,efgtoa@u
  2968  000AF8  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2969  000AFC  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2970  000B00  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2971  000B04                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2973  000B04  0100               	movlb	0	; () banked
  2974  000B06  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2975  000B08  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2976  000B0A                     l4297:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2979  000B0A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2980  000B0E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2981  000B12  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2982  000B16  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2983  000B1A  0E00               	movlw	0
  2984  000B1C  6E05               	movwf	___flmul@a^0,c
  2985  000B1E  0E00               	movlw	0
  2986  000B20  6E06               	movwf	(___flmul@a+1)^0,c
  2987  000B22  0E20               	movlw	32
  2988  000B24  6E07               	movwf	(___flmul@a+2)^0,c
  2989  000B26  0E41               	movlw	65
  2990  000B28  6E08               	movwf	(___flmul@a+3)^0,c
  2991  000B2A  C094  F001         	movff	efgtoa@u,___flmul@b
  2992  000B2E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2993  000B32  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2994  000B36  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2995  000B3A  EC54  F00F         	call	___flmul	;wreg free
  2996  000B3E  C001  F01E         	movff	?___flmul,___flge@ff2
  2997  000B42  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2998  000B46  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2999  000B4A  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3000  000B4E  ECD6  F01D         	call	___flge	;wreg free
  3001  000B52  B0D8               	btfsc	status,0,c
  3002  000B54  EFAE  F005         	goto	u5261
  3003  000B58  EFB0  F005         	goto	u5260
  3004  000B5C                     u5261:
  3005  000B5C  EF68  F005         	goto	l4293
  3006  000B60                     u5260:
  3007  000B60  EFD0  F005         	goto	l4303
  3008  000B64                     l4299:
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  3011  000B64  C094  F001         	movff	efgtoa@u,___fldiv@b
  3012  000B68  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3013  000B6C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3014  000B70  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3015  000B74  0E00               	movlw	0
  3016  000B76  6E05               	movwf	___fldiv@a^0,c
  3017  000B78  0E00               	movlw	0
  3018  000B7A  6E06               	movwf	(___fldiv@a+1)^0,c
  3019  000B7C  0E20               	movlw	32
  3020  000B7E  6E07               	movwf	(___fldiv@a+2)^0,c
  3021  000B80  0E41               	movlw	65
  3022  000B82  6E08               	movwf	(___fldiv@a+3)^0,c
  3023  000B84  EC69  F011         	call	___fldiv	;wreg free
  3024  000B88  C001  F094         	movff	?___fldiv,efgtoa@u
  3025  000B8C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3026  000B90  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3027  000B94  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3028  000B98                     
  3029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  3030  000B98  0100               	movlb	0	; () banked
  3031  000B9A  0790               	decf	efgtoa@e& (0+255),f,b
  3032  000B9C  A0D8               	btfss	status,0,c
  3033  000B9E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3034  000BA0                     l4303:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  3037  000BA0  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  3038  000BA4  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3039  000BA8  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3040  000BAC  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3041  000BB0  C094  F01E         	movff	efgtoa@u,___flge@ff2
  3042  000BB4  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3043  000BB8  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3044  000BBC  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3045  000BC0  ECD6  F01D         	call	___flge	;wreg free
  3046  000BC4  A0D8               	btfss	status,0,c
  3047  000BC6  EFE7  F005         	goto	u5271
  3048  000BCA  EFE9  F005         	goto	u5270
  3049  000BCE                     u5271:
  3050  000BCE  EFB2  F005         	goto	l4299
  3051  000BD2                     u5270:
  3052  000BD2                     l4305:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  3055  000BD2  C034  F007         	movff	efgtoa@c,tolower@c
  3056  000BD6  6A08               	clrf	(tolower@c+1)^0,c
  3057  000BD8  EC4A  F021         	call	_tolower	;wreg free
  3058  000BDC  5007               	movf	?_tolower^0,w,c
  3059  000BDE  0100               	movlb	0	; () banked
  3060  000BE0  6F81               	movwf	efgtoa@mode& (0+255),b
  3061  000BE2                     
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  3064  000BE2  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3065  000BE6                     
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  3068  000BE6  0E67               	movlw	103
  3069  000BE8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3070  000BEA  A4D8               	btfss	status,2,c
  3071  000BEC  EFFA  F005         	goto	u5281
  3072  000BF0  EFFC  F005         	goto	u5280
  3073  000BF4                     u5281:
  3074  000BF4  EF22  F006         	goto	l4319
  3075  000BF8                     u5280:
  3076  000BF8                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  3079  000BF8  51E0               	movf	_prec& (0+255),w,b
  3080  000BFA  11E1               	iorwf	(_prec+1)& (0+255),w,b
  3081  000BFC  A4D8               	btfss	status,2,c
  3082  000BFE  EF03  F006         	goto	u5291
  3083  000C02  EF05  F006         	goto	u5290
  3084  000C06                     u5291:
  3085  000C06  EF09  F006         	goto	l4315
  3086  000C0A                     u5290:
  3087  000C0A                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3090  000C0A  0E00               	movlw	0
  3091  000C0C  6FE1               	movwf	(_prec+1)& (0+255),b
  3092  000C0E  0E01               	movlw	1
  3093  000C10  6FE0               	movwf	_prec& (0+255),b
  3094  000C12                     l4315:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  3098  000C12  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  3099  000C14  EF16  F006         	goto	u5300
  3100  000C18  51E1               	movf	(_prec+1)& (0+255),w,b
  3101  000C1A  E106               	bnz	u5301
  3102  000C1C  05E0               	decf	_prec& (0+255),w,b
  3103  000C1E  B0D8               	btfsc	status,0,c
  3104  000C20  EF14  F006         	goto	u5301
  3105  000C24  EF16  F006         	goto	u5300
  3106  000C28                     u5301:
  3107  000C28  EF1C  F006         	goto	l1009
  3108  000C2C                     u5300:
  3109  000C2C                     l4317:
  3110                           
  3111                           ; BSR set to: 0
  3112  000C2C  0E00               	movlw	0
  3113  000C2E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3114  000C30  0E06               	movlw	6
  3115  000C32  6F7C               	movwf	efgtoa@p& (0+255),b
  3116  000C34  EF2B  F006         	goto	l4325
  3117  000C38                     l1009:
  3118                           
  3119                           ; BSR set to: 0
  3120  000C38  C0E0  F07C         	movff	_prec,efgtoa@p
  3121  000C3C  C0E1  F07D         	movff	_prec+1,efgtoa@p+1
  3122  000C40  EF2B  F006         	goto	l4325
  3123  000C44                     l4319:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3127  000C44  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  3128  000C46  EF27  F006         	goto	u5311
  3129  000C4A  EF29  F006         	goto	u5310
  3130  000C4E                     u5311:
  3131  000C4E  EF16  F006         	goto	l4317
  3132  000C52                     u5310:
  3133  000C52  EF1C  F006         	goto	l1009
  3134  000C56                     l4325:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3138  000C56  0E67               	movlw	103
  3139  000C58  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3140  000C5A  A4D8               	btfss	status,2,c
  3141  000C5C  EF32  F006         	goto	u5321
  3142  000C60  EF34  F006         	goto	u5320
  3143  000C64                     u5321:
  3144  000C64  EF63  F006         	goto	l4335
  3145  000C68                     u5320:
  3146  000C68                     
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3149  000C68  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3150  000C6A  EF42  F006         	goto	u5330
  3151  000C6E  0EFC               	movlw	252
  3152  000C70  5D90               	subwf	efgtoa@e& (0+255),w,b
  3153  000C72  0EFF               	movlw	255
  3154  000C74  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3155  000C76  A0D8               	btfss	status,0,c
  3156  000C78  EF40  F006         	goto	u5331
  3157  000C7C  EF42  F006         	goto	u5330
  3158  000C80                     u5331:
  3159  000C80  EF61  F006         	goto	l4333
  3160  000C84                     u5330:
  3161  000C84                     
  3162                           ; BSR set to: 0
  3163  000C84  0EFF               	movlw	255
  3164  000C86  6E35               	movwf	??_efgtoa^0,c
  3165  000C88  0EFF               	movlw	255
  3166  000C8A  6E36               	movwf	(??_efgtoa+1)^0,c
  3167  000C8C  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  3168  000C90  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3169  000C94  5035               	movf	??_efgtoa^0,w,c
  3170  000C96  2637               	addwf	(??_efgtoa+2)^0,f,c
  3171  000C98  5036               	movf	(??_efgtoa+1)^0,w,c
  3172  000C9A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3173  000C9C  5190               	movf	efgtoa@e& (0+255),w,b
  3174  000C9E  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3175  000CA0  5038               	movf	(??_efgtoa+3)^0,w,c
  3176  000CA2  0A80               	xorlw	128
  3177  000CA4  6E39               	movwf	(??_efgtoa+4)^0,c
  3178  000CA6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3179  000CA8  0A80               	xorlw	128
  3180  000CAA  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3181  000CAC  A0D8               	btfss	status,0,c
  3182  000CAE  EF5B  F006         	goto	u5341
  3183  000CB2  EF5D  F006         	goto	u5340
  3184  000CB6                     u5341:
  3185  000CB6  EF61  F006         	goto	l4333
  3186  000CBA                     u5340:
  3187  000CBA                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3190  000CBA  0E66               	movlw	102
  3191  000CBC  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3194  000CBE  EF63  F006         	goto	l4335
  3195  000CC2                     l4333:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3199  000CC2  0E65               	movlw	101
  3200  000CC4  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3201  000CC6                     l4335:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3205  000CC6  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3206  000CCA  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3207  000CCE                     
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3210  000CCE  0E67               	movlw	103
  3211  000CD0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3212  000CD2  A4D8               	btfss	status,2,c
  3213  000CD4  EF6E  F006         	goto	u5351
  3214  000CD8  EF70  F006         	goto	u5350
  3215  000CDC                     u5351:
  3216  000CDC  EF80  F006         	goto	l4343
  3217  000CE0                     u5350:
  3218  000CE0                     
  3219                           ; BSR set to: 0
  3220  000CE0  0E66               	movlw	102
  3221  000CE2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3222  000CE4  A4D8               	btfss	status,2,c
  3223  000CE6  EF77  F006         	goto	u5361
  3224  000CEA  EF79  F006         	goto	u5360
  3225  000CEE                     u5361:
  3226  000CEE  EF82  F006         	goto	l4345
  3227  000CF2                     u5360:
  3228  000CF2                     
  3229                           ; BSR set to: 0
  3230  000CF2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3231  000CF4  EF80  F006         	goto	u5370
  3232  000CF8  EF7E  F006         	goto	u5371
  3233  000CFC                     u5371:
  3234  000CFC  EF82  F006         	goto	l4345
  3235  000D00                     u5370:
  3236  000D00                     l4343:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3240  000D00  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3241  000D02  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3242  000D04                     l4345:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3246  000D04  0E66               	movlw	102
  3247  000D06  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3248  000D08  A4D8               	btfss	status,2,c
  3249  000D0A  EF89  F006         	goto	u5381
  3250  000D0E  EF8B  F006         	goto	u5380
  3251  000D12                     u5381:
  3252  000D12  EFAB  F006         	goto	l4355
  3253  000D16                     u5380:
  3254  000D16                     
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3257  000D16  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3258  000D18  EF92  F006         	goto	u5390
  3259  000D1C  EF90  F006         	goto	u5391
  3260  000D20                     u5391:
  3261  000D20  EF9E  F006         	goto	l4351
  3262  000D24                     u5390:
  3263  000D24                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3266  000D24  0E00               	movlw	0
  3267  000D26  6F94               	movwf	efgtoa@u& (0+255),b
  3268  000D28  0E00               	movlw	0
  3269  000D2A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3270  000D2C  0E80               	movlw	128
  3271  000D2E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3272  000D30  0E3F               	movlw	63
  3273  000D32  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3276  000D34  0E00               	movlw	0
  3277  000D36  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3278  000D38  0E00               	movlw	0
  3279  000D3A  6F90               	movwf	efgtoa@e& (0+255),b
  3280  000D3C                     l4351:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3284  000D3C  0E67               	movlw	103
  3285  000D3E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3286  000D40  B4D8               	btfsc	status,2,c
  3287  000D42  EFA5  F006         	goto	u5401
  3288  000D46  EFA7  F006         	goto	u5400
  3289  000D4A                     u5401:
  3290  000D4A  EFAB  F006         	goto	l4355
  3291  000D4E                     u5400:
  3292  000D4E                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3295  000D4E  5190               	movf	efgtoa@e& (0+255),w,b
  3296  000D50  2774               	addwf	efgtoa@m& (0+255),f,b
  3297  000D52  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3298  000D54  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3299  000D56                     l4355:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3303  000D56  0E00               	movlw	0
  3304  000D58  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3305  000D5A  0E00               	movlw	0
  3306  000D5C  6F8A               	movwf	efgtoa@i& (0+255),b
  3307  000D5E                     
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3310  000D5E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3311  000D62  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3312  000D66  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3313  000D6A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3314  000D6E                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3317  000D6E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3318  000D72  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3319  000D76  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3320  000D7A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3323  000D7E  EF3C  F007         	goto	l4369
  3324  000D82                     l4361:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3328  000D82  C082  F001         	movff	efgtoa@h,___fldiv@b
  3329  000D86  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3330  000D8A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3331  000D8E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3332  000D92  C094  F005         	movff	efgtoa@u,___fldiv@a
  3333  000D96  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3334  000D9A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3335  000D9E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3336  000DA2  EC69  F011         	call	___fldiv	;wreg free
  3337  000DA6  C001  F01A         	movff	?___fldiv,floorf@x
  3338  000DAA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3339  000DAE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3340  000DB2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3341  000DB6  EC47  F019         	call	_floorf	;wreg free
  3342  000DBA  C01A  F086         	movff	?_floorf,efgtoa@l
  3343  000DBE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3344  000DC2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3345  000DC6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3348  000DCA  C086  F001         	movff	efgtoa@l,___fltol@f1
  3349  000DCE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3350  000DD2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3351  000DD6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3352  000DDA  EC53  F01D         	call	___fltol	;wreg free
  3353  000DDE  C001  F078         	movff	?___fltol,efgtoa@d
  3354  000DE2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3355  000DE6                     
  3356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3357  000DE6  C082  F01A         	movff	efgtoa@h,___flsub@b
  3358  000DEA  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3359  000DEE  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3360  000DF2  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3361  000DF6  C094  F005         	movff	efgtoa@u,___flmul@a
  3362  000DFA  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3363  000DFE  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3364  000E02  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3365  000E06  C086  F001         	movff	efgtoa@l,___flmul@b
  3366  000E0A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3367  000E0E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3368  000E12  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3369  000E16  EC54  F00F         	call	___flmul	;wreg free
  3370  000E1A  C001  F01E         	movff	?___flmul,___flsub@a
  3371  000E1E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3372  000E22  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3373  000E26  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3374  000E2A  ECBE  F022         	call	___flsub	;wreg free
  3375  000E2E  C01A  F082         	movff	?___flsub,efgtoa@h
  3376  000E32  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3377  000E36  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3378  000E3A  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3379  000E3E                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3381  000E3E  C094  F001         	movff	efgtoa@u,___fldiv@b
  3382  000E42  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3383  000E46  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3384  000E4A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3385  000E4E  0E00               	movlw	0
  3386  000E50  6E05               	movwf	___fldiv@a^0,c
  3387  000E52  0E00               	movlw	0
  3388  000E54  6E06               	movwf	(___fldiv@a+1)^0,c
  3389  000E56  0E20               	movlw	32
  3390  000E58  6E07               	movwf	(___fldiv@a+2)^0,c
  3391  000E5A  0E41               	movlw	65
  3392  000E5C  6E08               	movwf	(___fldiv@a+3)^0,c
  3393  000E5E  EC69  F011         	call	___fldiv	;wreg free
  3394  000E62  C001  F094         	movff	?___fldiv,efgtoa@u
  3395  000E66  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3396  000E6A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3397  000E6E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3398  000E72                     
  3399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3400  000E72  0100               	movlb	0	; () banked
  3401  000E74  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3402  000E76  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3403  000E78                     l4369:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3407  000E78  5174               	movf	efgtoa@m& (0+255),w,b
  3408  000E7A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3409  000E7C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3410  000E7E  0A80               	xorlw	128
  3411  000E80  6E35               	movwf	??_efgtoa^0,c
  3412  000E82  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3413  000E84  0A80               	xorlw	128
  3414  000E86  5835               	subwfb	??_efgtoa^0,w,c
  3415  000E88  A0D8               	btfss	status,0,c
  3416  000E8A  EF49  F007         	goto	u5411
  3417  000E8E  EF4B  F007         	goto	u5410
  3418  000E92                     u5411:
  3419  000E92  EFC1  F006         	goto	l4361
  3420  000E96                     u5410:
  3421  000E96                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3424  000E96  C094  F001         	movff	efgtoa@u,___flmul@b
  3425  000E9A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3426  000E9E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3427  000EA2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3428  000EA6  0E00               	movlw	0
  3429  000EA8  6E05               	movwf	___flmul@a^0,c
  3430  000EAA  0E00               	movlw	0
  3431  000EAC  6E06               	movwf	(___flmul@a+1)^0,c
  3432  000EAE  0EA0               	movlw	160
  3433  000EB0  6E07               	movwf	(___flmul@a+2)^0,c
  3434  000EB2  0E40               	movlw	64
  3435  000EB4  6E08               	movwf	(___flmul@a+3)^0,c
  3436  000EB6  EC54  F00F         	call	___flmul	;wreg free
  3437  000EBA  C001  F086         	movff	?___flmul,efgtoa@l
  3438  000EBE  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3439  000EC2  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3440  000EC6  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3441  000ECA                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3443  000ECA  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3444  000ECE  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3445  000ED2  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3446  000ED6  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3447  000EDA  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3448  000EDE  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3449  000EE2  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3450  000EE6  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3451  000EEA  ECD6  F01D         	call	___flge	;wreg free
  3452  000EEE  B0D8               	btfsc	status,0,c
  3453  000EF0  EF7C  F007         	goto	u5421
  3454  000EF4  EF7E  F007         	goto	u5420
  3455  000EF8                     u5421:
  3456  000EF8  EF89  F007         	goto	l4377
  3457  000EFC                     u5420:
  3458  000EFC                     
  3459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3460  000EFC  0E00               	movlw	0
  3461  000EFE  0100               	movlb	0	; () banked
  3462  000F00  6F86               	movwf	efgtoa@l& (0+255),b
  3463  000F02  0E00               	movlw	0
  3464  000F04  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3465  000F06  0E00               	movlw	0
  3466  000F08  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3467  000F0A  0E00               	movlw	0
  3468  000F0C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3471  000F0E  EFB2  F007         	goto	l4383
  3472  000F12                     l4377:
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3475  000F12  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3476  000F16  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3477  000F1A  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3478  000F1E  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3479  000F22  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3480  000F26  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3481  000F2A  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3482  000F2E  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3483  000F32  ECC4  F020         	call	___fleq	;wreg free
  3484  000F36  A0D8               	btfss	status,0,c
  3485  000F38  EFA0  F007         	goto	u5431
  3486  000F3C  EFA2  F007         	goto	u5430
  3487  000F40                     u5431:
  3488  000F40  EFB2  F007         	goto	l4383
  3489  000F44                     u5430:
  3490  000F44  0100               	movlb	0	; () banked
  3491  000F46  B178               	btfsc	efgtoa@d& (0+255),0,b
  3492  000F48  EFA8  F007         	goto	u5441
  3493  000F4C  EFAA  F007         	goto	u5440
  3494  000F50                     u5441:
  3495  000F50  EFB2  F007         	goto	l4383
  3496  000F54                     u5440:
  3497  000F54                     
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3500  000F54  0E00               	movlw	0
  3501  000F56  6F86               	movwf	efgtoa@l& (0+255),b
  3502  000F58  0E00               	movlw	0
  3503  000F5A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3504  000F5C  0E00               	movlw	0
  3505  000F5E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3506  000F60  0E00               	movlw	0
  3507  000F62  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3508  000F64                     l4383:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3511  000F64  C08C  F001         	movff	efgtoa@g,___fladd@b
  3512  000F68  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3513  000F6C  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3514  000F70  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3515  000F74  C086  F005         	movff	efgtoa@l,___fladd@a
  3516  000F78  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3517  000F7C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3518  000F80  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3519  000F84  ECF4  F00C         	call	___fladd	;wreg free
  3520  000F88  C001  F082         	movff	?___fladd,efgtoa@h
  3521  000F8C  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3522  000F90  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3523  000F94  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3524  000F98                     
  3525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3526  000F98  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3527  000F9C  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3528  000FA0  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3529  000FA4  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3530  000FA8                     
  3531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3532  000FA8  0E65               	movlw	101
  3533  000FAA  0100               	movlb	0	; () banked
  3534  000FAC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3535  000FAE  B4D8               	btfsc	status,2,c
  3536  000FB0  EFDC  F007         	goto	u5451
  3537  000FB4  EFDE  F007         	goto	u5450
  3538  000FB8                     u5451:
  3539  000FB8  EFE4  F007         	goto	l4391
  3540  000FBC                     u5450:
  3541  000FBC                     
  3542                           ; BSR set to: 0
  3543  000FBC  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3544  000FC0  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3545  000FC4  EFE8  F007         	goto	l1035
  3546  000FC8                     l4391:
  3547                           
  3548                           ; BSR set to: 0
  3549  000FC8  0E00               	movlw	0
  3550  000FCA  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3551  000FCC  0E00               	movlw	0
  3552  000FCE  6F76               	movwf	efgtoa@ne& (0+255),b
  3553  000FD0                     l1035:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3557  000FD0  0E00               	movlw	0
  3558  000FD2  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3559  000FD4  0E00               	movlw	0
  3560  000FD6  6F72               	movwf	efgtoa@pp& (0+255),b
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3563  000FD8  0E00               	movlw	0
  3564  000FDA  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3565  000FDC  0E00               	movlw	0
  3566  000FDE  6F70               	movwf	efgtoa@t& (0+255),b
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3569  000FE0  0E00               	movlw	0
  3570  000FE2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3571  000FE4  0E00               	movlw	0
  3572  000FE6  6F8A               	movwf	efgtoa@i& (0+255),b
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3575  000FE8  EFE3  F008         	goto	l4441
  3576  000FEC                     l4393:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3580  000FEC  C082  F001         	movff	efgtoa@h,___fldiv@b
  3581  000FF0  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3582  000FF4  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3583  000FF8  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3584  000FFC  C094  F005         	movff	efgtoa@u,___fldiv@a
  3585  001000  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3586  001004  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3587  001008  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3588  00100C  EC69  F011         	call	___fldiv	;wreg free
  3589  001010  C001  F01A         	movff	?___fldiv,floorf@x
  3590  001014  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3591  001018  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3592  00101C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3593  001020  EC47  F019         	call	_floorf	;wreg free
  3594  001024  C01A  F086         	movff	?_floorf,efgtoa@l
  3595  001028  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3596  00102C  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3597  001030  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3600  001034  C086  F001         	movff	efgtoa@l,___fltol@f1
  3601  001038  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3602  00103C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3603  001040  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3604  001044  EC53  F01D         	call	___fltol	;wreg free
  3605  001048  C001  F078         	movff	?___fltol,efgtoa@d
  3606  00104C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3607  001050                     
  3608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3609  001050  0100               	movlb	0	; () banked
  3610  001052  B9E2               	btfsc	_flags& (0+255),4,b
  3611  001054  EF2E  F008         	goto	u5461
  3612  001058  EF30  F008         	goto	u5460
  3613  00105C                     u5461:
  3614  00105C  EF4D  F008         	goto	l4405
  3615  001060                     u5460:
  3616  001060                     
  3617                           ; BSR set to: 0
  3618  001060  5178               	movf	efgtoa@d& (0+255),w,b
  3619  001062  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3620  001064  A4D8               	btfss	status,2,c
  3621  001066  EF37  F008         	goto	u5471
  3622  00106A  EF39  F008         	goto	u5470
  3623  00106E                     u5471:
  3624  00106E  EF4D  F008         	goto	l4405
  3625  001072                     u5470:
  3626  001072                     
  3627                           ; BSR set to: 0
  3628  001072  0E67               	movlw	103
  3629  001074  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3630  001076  A4D8               	btfss	status,2,c
  3631  001078  EF40  F008         	goto	u5481
  3632  00107C  EF42  F008         	goto	u5480
  3633  001080                     u5481:
  3634  001080  EF4D  F008         	goto	l4405
  3635  001084                     u5480:
  3636  001084                     
  3637                           ; BSR set to: 0
  3638  001084  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3639  001086  EF49  F008         	goto	u5490
  3640  00108A  EF47  F008         	goto	u5491
  3641  00108E                     u5491:
  3642  00108E  EF4D  F008         	goto	l4405
  3643  001092                     u5490:
  3644  001092                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3647  001092  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3648  001094  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3651  001096  EF97  F008         	goto	l4433
  3652  00109A                     l4405:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3656  00109A  5172               	movf	efgtoa@pp& (0+255),w,b
  3657  00109C  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3658  00109E  A4D8               	btfss	status,2,c
  3659  0010A0  EF54  F008         	goto	u5501
  3660  0010A4  EF56  F008         	goto	u5500
  3661  0010A8                     u5501:
  3662  0010A8  EF80  F008         	goto	l4425
  3663  0010AC                     u5500:
  3664  0010AC                     
  3665                           ; BSR set to: 0
  3666  0010AC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3667  0010AE  EF5D  F008         	goto	u5510
  3668  0010B2  EF5B  F008         	goto	u5511
  3669  0010B6                     u5511:
  3670  0010B6  EF80  F008         	goto	l4425
  3671  0010BA                     u5510:
  3672  0010BA                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3675  0010BA  0E00               	movlw	low _dbuf
  3676  0010BC  2592               	addwf	efgtoa@n& (0+255),w,b
  3677  0010BE  6ED9               	movwf	fsr2l,c
  3678  0010C0  0E01               	movlw	high _dbuf
  3679  0010C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3680  0010C4  6EDA               	movwf	fsr2h,c
  3681  0010C6  0E2E               	movlw	46
  3682  0010C8  6EDF               	movwf	indf2,c
  3683  0010CA                     
  3684                           ; BSR set to: 0
  3685  0010CA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3686  0010CC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3687  0010CE                     
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3690  0010CE  077F               	decf	efgtoa@w& (0+255),f,b
  3691  0010D0  A0D8               	btfss	status,0,c
  3692  0010D2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3693  0010D4                     
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3696  0010D4  0E00               	movlw	0
  3697  0010D6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3698  0010D8  0E01               	movlw	1
  3699  0010DA  6F72               	movwf	efgtoa@pp& (0+255),b
  3700  0010DC  EF80  F008         	goto	l4425
  3701  0010E0                     l4417:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3705  0010E0  0E00               	movlw	low _dbuf
  3706  0010E2  2592               	addwf	efgtoa@n& (0+255),w,b
  3707  0010E4  6ED9               	movwf	fsr2l,c
  3708  0010E6  0E01               	movlw	high _dbuf
  3709  0010E8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3710  0010EA  6EDA               	movwf	fsr2h,c
  3711  0010EC  0E30               	movlw	48
  3712  0010EE  6EDF               	movwf	indf2,c
  3713  0010F0                     
  3714                           ; BSR set to: 0
  3715  0010F0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3716  0010F2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3717  0010F4                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3720  0010F4  077F               	decf	efgtoa@w& (0+255),f,b
  3721  0010F6  A0D8               	btfss	status,0,c
  3722  0010F8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3723  0010FA                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3726  0010FA  0770               	decf	efgtoa@t& (0+255),f,b
  3727  0010FC  A0D8               	btfss	status,0,c
  3728  0010FE  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3729  001100                     l4425:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3733  001100  5170               	movf	efgtoa@t& (0+255),w,b
  3734  001102  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3735  001104  A4D8               	btfss	status,2,c
  3736  001106  EF87  F008         	goto	u5521
  3737  00110A  EF89  F008         	goto	u5520
  3738  00110E                     u5521:
  3739  00110E  EF70  F008         	goto	l4417
  3740  001112                     u5520:
  3741  001112                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3744  001112  0E00               	movlw	low _dbuf
  3745  001114  2592               	addwf	efgtoa@n& (0+255),w,b
  3746  001116  6ED9               	movwf	fsr2l,c
  3747  001118  0E01               	movlw	high _dbuf
  3748  00111A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3749  00111C  6EDA               	movwf	fsr2h,c
  3750  00111E  5178               	movf	efgtoa@d& (0+255),w,b
  3751  001120  0F30               	addlw	48
  3752  001122  6EDF               	movwf	indf2,c
  3753  001124                     
  3754                           ; BSR set to: 0
  3755  001124  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3756  001126  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3757  001128                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3760  001128  077F               	decf	efgtoa@w& (0+255),f,b
  3761  00112A  A0D8               	btfss	status,0,c
  3762  00112C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3763  00112E                     l4433:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3767  00112E  C082  F01A         	movff	efgtoa@h,___flsub@b
  3768  001132  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3769  001136  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3770  00113A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3771  00113E  C094  F005         	movff	efgtoa@u,___flmul@a
  3772  001142  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3773  001146  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3774  00114A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3775  00114E  C086  F001         	movff	efgtoa@l,___flmul@b
  3776  001152  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3777  001156  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3778  00115A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3779  00115E  EC54  F00F         	call	___flmul	;wreg free
  3780  001162  C001  F01E         	movff	?___flmul,___flsub@a
  3781  001166  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3782  00116A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3783  00116E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3784  001172  ECBE  F022         	call	___flsub	;wreg free
  3785  001176  C01A  F082         	movff	?___flsub,efgtoa@h
  3786  00117A  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3787  00117E  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3788  001182  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3789  001186                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3791  001186  C094  F001         	movff	efgtoa@u,___fldiv@b
  3792  00118A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3793  00118E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3794  001192  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3795  001196  0E00               	movlw	0
  3796  001198  6E05               	movwf	___fldiv@a^0,c
  3797  00119A  0E00               	movlw	0
  3798  00119C  6E06               	movwf	(___fldiv@a+1)^0,c
  3799  00119E  0E20               	movlw	32
  3800  0011A0  6E07               	movwf	(___fldiv@a+2)^0,c
  3801  0011A2  0E41               	movlw	65
  3802  0011A4  6E08               	movwf	(___fldiv@a+3)^0,c
  3803  0011A6  EC69  F011         	call	___fldiv	;wreg free
  3804  0011AA  C001  F094         	movff	?___fldiv,efgtoa@u
  3805  0011AE  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3806  0011B2  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3807  0011B6  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3808  0011BA                     
  3809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3810  0011BA  0100               	movlb	0	; () banked
  3811  0011BC  0776               	decf	efgtoa@ne& (0+255),f,b
  3812  0011BE  A0D8               	btfss	status,0,c
  3813  0011C0  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3814  0011C2                     
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3817  0011C2  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3818  0011C4  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3819  0011C6                     l4441:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3823  0011C6  5174               	movf	efgtoa@m& (0+255),w,b
  3824  0011C8  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3825  0011CA  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3826  0011CC  0A80               	xorlw	128
  3827  0011CE  6E35               	movwf	??_efgtoa^0,c
  3828  0011D0  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3829  0011D2  0A80               	xorlw	128
  3830  0011D4  5835               	subwfb	??_efgtoa^0,w,c
  3831  0011D6  B0D8               	btfsc	status,0,c
  3832  0011D8  EFF0  F008         	goto	u5531
  3833  0011DC  EFF2  F008         	goto	u5530
  3834  0011E0                     u5531:
  3835  0011E0  EF00  F009         	goto	l4445
  3836  0011E4                     u5530:
  3837  0011E4                     
  3838                           ; BSR set to: 0
  3839  0011E4  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3840  0011E6  EFFE  F008         	goto	u5541
  3841  0011EA  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3842  0011EC  E109               	bnz	u5540
  3843  0011EE  0E4B               	movlw	75
  3844  0011F0  5D92               	subwf	efgtoa@n& (0+255),w,b
  3845  0011F2  A0D8               	btfss	status,0,c
  3846  0011F4  EFFE  F008         	goto	u5541
  3847  0011F8  EF00  F009         	goto	u5540
  3848  0011FC                     u5541:
  3849  0011FC  EFF6  F007         	goto	l4393
  3850  001200                     u5540:
  3851  001200                     l4445:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3855  001200  5172               	movf	efgtoa@pp& (0+255),w,b
  3856  001202  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3857  001204  A4D8               	btfss	status,2,c
  3858  001206  EF07  F009         	goto	u5551
  3859  00120A  EF09  F009         	goto	u5550
  3860  00120E                     u5551:
  3861  00120E  EF1A  F009         	goto	l4453
  3862  001212                     u5550:
  3863  001212                     
  3864                           ; BSR set to: 0
  3865  001212  A9E2               	btfss	_flags& (0+255),4,b
  3866  001214  EF0E  F009         	goto	u5561
  3867  001218  EF10  F009         	goto	u5560
  3868  00121C                     u5561:
  3869  00121C  EF1A  F009         	goto	l4453
  3870  001220                     u5560:
  3871  001220                     
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3874  001220  0E00               	movlw	low _dbuf
  3875  001222  2592               	addwf	efgtoa@n& (0+255),w,b
  3876  001224  6ED9               	movwf	fsr2l,c
  3877  001226  0E01               	movlw	high _dbuf
  3878  001228  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3879  00122A  6EDA               	movwf	fsr2h,c
  3880  00122C  0E2E               	movlw	46
  3881  00122E  6EDF               	movwf	indf2,c
  3882  001230                     
  3883                           ; BSR set to: 0
  3884  001230  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3885  001232  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3886  001234                     l4453:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3890  001234  0E00               	movlw	low _dbuf
  3891  001236  2592               	addwf	efgtoa@n& (0+255),w,b
  3892  001238  6ED9               	movwf	fsr2l,c
  3893  00123A  0E01               	movlw	high _dbuf
  3894  00123C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3895  00123E  6EDA               	movwf	fsr2h,c
  3896  001240  0E00               	movlw	0
  3897  001242  6EDF               	movwf	indf2,c
  3898  001244                     
  3899                           ; BSR set to: 0
  3900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3901  001244  0E65               	movlw	101
  3902  001246  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3903  001248  A4D8               	btfss	status,2,c
  3904  00124A  EF29  F009         	goto	u5571
  3905  00124E  EF2B  F009         	goto	u5570
  3906  001252                     u5571:
  3907  001252  EFD9  F004         	goto	l4265
  3908  001256                     u5570:
  3909  001256                     
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3912  001256  0E00               	movlw	0
  3913  001258  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3914  00125A  0E4F               	movlw	79
  3915  00125C  6F8A               	movwf	efgtoa@i& (0+255),b
  3916  00125E                     
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3919  00125E  0E00               	movlw	low _dbuf
  3920  001260  258A               	addwf	efgtoa@i& (0+255),w,b
  3921  001262  6ED9               	movwf	fsr2l,c
  3922  001264  0E01               	movlw	high _dbuf
  3923  001266  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3924  001268  6EDA               	movwf	fsr2h,c
  3925  00126A  0E00               	movlw	0
  3926  00126C  6EDF               	movwf	indf2,c
  3927  00126E                     
  3928                           ; BSR set to: 0
  3929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3930  00126E  0E00               	movlw	0
  3931  001270  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3932  001272  0E00               	movlw	0
  3933  001274  6F7A               	movwf	efgtoa@sign& (0+255),b
  3934  001276                     
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3937  001276  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3938  001278  EF42  F009         	goto	u5580
  3939  00127C  EF40  F009         	goto	u5581
  3940  001280                     u5581:
  3941  001280  EF4A  F009         	goto	l4469
  3942  001284                     u5580:
  3943  001284                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3946  001284  0E00               	movlw	0
  3947  001286  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3948  001288  0E01               	movlw	1
  3949  00128A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3950  00128C                     
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3953  00128C  6D90               	negf	efgtoa@e& (0+255),b
  3954  00128E  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3955  001290  B0D8               	btfsc	status,0,c
  3956  001292  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3957  001294                     l4469:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3961  001294  0E00               	movlw	0
  3962  001296  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3963  001298  0E02               	movlw	2
  3964  00129A  6F7C               	movwf	efgtoa@p& (0+255),b
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3967  00129C  EF7B  F009         	goto	l4481
  3968  0012A0                     l4471:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3972  0012A0  078A               	decf	efgtoa@i& (0+255),f,b
  3973  0012A2  A0D8               	btfss	status,0,c
  3974  0012A4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3975  0012A6                     
  3976                           ; BSR set to: 0
  3977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3978  0012A6  0E00               	movlw	low _dbuf
  3979  0012A8  258A               	addwf	efgtoa@i& (0+255),w,b
  3980  0012AA  6ED9               	movwf	fsr2l,c
  3981  0012AC  0E01               	movlw	high _dbuf
  3982  0012AE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3983  0012B0  6EDA               	movwf	fsr2h,c
  3984  0012B2  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3985  0012B6  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3986  0012BA  0E00               	movlw	0
  3987  0012BC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3988  0012BE  0E0A               	movlw	10
  3989  0012C0  6E03               	movwf	___awmod@divisor^0,c
  3990  0012C2  EC6C  F020         	call	___awmod	;wreg free
  3991  0012C6  5001               	movf	?___awmod^0,w,c
  3992  0012C8  0F30               	addlw	48
  3993  0012CA  6EDF               	movwf	indf2,c
  3994  0012CC                     
  3995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3996  0012CC  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3997  0012D0  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3998  0012D4  0E00               	movlw	0
  3999  0012D6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4000  0012D8  0E0A               	movlw	10
  4001  0012DA  6E03               	movwf	___awdiv@divisor^0,c
  4002  0012DC  EC0A  F020         	call	___awdiv	;wreg free
  4003  0012E0  C001  F090         	movff	?___awdiv,efgtoa@e
  4004  0012E4  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4005  0012E8                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  4007  0012E8  0100               	movlb	0	; () banked
  4008  0012EA  077C               	decf	efgtoa@p& (0+255),f,b
  4009  0012EC  A0D8               	btfss	status,0,c
  4010  0012EE  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4011  0012F0                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  4014  0012F0  077F               	decf	efgtoa@w& (0+255),f,b
  4015  0012F2  A0D8               	btfss	status,0,c
  4016  0012F4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4017  0012F6                     l4481:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4021  0012F6  5190               	movf	efgtoa@e& (0+255),w,b
  4022  0012F8  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4023  0012FA  A4D8               	btfss	status,2,c
  4024  0012FC  EF82  F009         	goto	u5591
  4025  001300  EF84  F009         	goto	u5590
  4026  001304                     u5591:
  4027  001304  EF50  F009         	goto	l4471
  4028  001308                     u5590:
  4029  001308                     
  4030                           ; BSR set to: 0
  4031  001308  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4032  00130A  EF91  F009         	goto	u5600
  4033  00130E  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4034  001310  E106               	bnz	u5601
  4035  001312  057C               	decf	efgtoa@p& (0+255),w,b
  4036  001314  B0D8               	btfsc	status,0,c
  4037  001316  EF8F  F009         	goto	u5601
  4038  00131A  EF91  F009         	goto	u5600
  4039  00131E                     u5601:
  4040  00131E  EF50  F009         	goto	l4471
  4041  001322                     u5600:
  4042  001322                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4045  001322  078A               	decf	efgtoa@i& (0+255),f,b
  4046  001324  A0D8               	btfss	status,0,c
  4047  001326  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4048  001328                     
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  4051  001328  517A               	movf	efgtoa@sign& (0+255),w,b
  4052  00132A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4053  00132C  A4D8               	btfss	status,2,c
  4054  00132E  EF9B  F009         	goto	u5611
  4055  001332  EF9D  F009         	goto	u5610
  4056  001336                     u5611:
  4057  001336  EFA3  F009         	goto	l4491
  4058  00133A                     u5610:
  4059  00133A                     
  4060                           ; BSR set to: 0
  4061  00133A  0E00               	movlw	0
  4062  00133C  6F6B               	movwf	(_efgtoa$907+1)& (0+255),b
  4063  00133E  0E2B               	movlw	43
  4064  001340  6F6A               	movwf	_efgtoa$907& (0+255),b
  4065  001342  EFA7  F009         	goto	l4493
  4066  001346                     l4491:
  4067                           
  4068                           ; BSR set to: 0
  4069  001346  0E00               	movlw	0
  4070  001348  6F6B               	movwf	(_efgtoa$907+1)& (0+255),b
  4071  00134A  0E2D               	movlw	45
  4072  00134C  6F6A               	movwf	_efgtoa$907& (0+255),b
  4073  00134E                     l4493:
  4074                           
  4075                           ; BSR set to: 0
  4076  00134E  0E00               	movlw	low _dbuf
  4077  001350  258A               	addwf	efgtoa@i& (0+255),w,b
  4078  001352  6ED9               	movwf	fsr2l,c
  4079  001354  0E01               	movlw	high _dbuf
  4080  001356  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4081  001358  6EDA               	movwf	fsr2h,c
  4082  00135A  C06A  FFDF         	movff	_efgtoa$907,indf2
  4083  00135E                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4086  00135E  077F               	decf	efgtoa@w& (0+255),f,b
  4087  001360  A0D8               	btfss	status,0,c
  4088  001362  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4089  001364                     
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4092  001364  078A               	decf	efgtoa@i& (0+255),f,b
  4093  001366  A0D8               	btfss	status,0,c
  4094  001368  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4095  00136A                     
  4096                           ; BSR set to: 0
  4097  00136A  0EBF               	movlw	191
  4098  00136C  6E35               	movwf	??_efgtoa^0,c
  4099  00136E  0EFF               	movlw	255
  4100  001370  6E36               	movwf	(??_efgtoa+1)^0,c
  4101  001372  5034               	movf	efgtoa@c^0,w,c
  4102  001374  6E37               	movwf	(??_efgtoa+2)^0,c
  4103  001376  6A38               	clrf	(??_efgtoa+3)^0,c
  4104  001378  5035               	movf	??_efgtoa^0,w,c
  4105  00137A  2637               	addwf	(??_efgtoa+2)^0,f,c
  4106  00137C  5036               	movf	(??_efgtoa+1)^0,w,c
  4107  00137E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4108  001380  5038               	movf	(??_efgtoa+3)^0,w,c
  4109  001382  E10A               	bnz	u5620
  4110  001384  0E1A               	movlw	26
  4111  001386  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4112  001388  A0D8               	btfss	status,0,c
  4113  00138A  EFC9  F009         	goto	u5621
  4114  00138E  EFCC  F009         	goto	u5620
  4115  001392                     u5621:
  4116  001392  0E01               	movlw	1
  4117  001394  EFCD  F009         	goto	u5630
  4118  001398                     u5620:
  4119  001398  0E00               	movlw	0
  4120  00139A                     u5630:
  4121  00139A  6F6E               	movwf	_efgtoa$909& (0+255),b
  4122  00139C  6B6F               	clrf	(_efgtoa$909+1)& (0+255),b
  4123  00139E                     
  4124                           ; BSR set to: 0
  4125  00139E  516E               	movf	_efgtoa$909& (0+255),w,b
  4126  0013A0  116F               	iorwf	(_efgtoa$909+1)& (0+255),w,b
  4127  0013A2  A4D8               	btfss	status,2,c
  4128  0013A4  EFD6  F009         	goto	u5641
  4129  0013A8  EFD8  F009         	goto	u5640
  4130  0013AC                     u5641:
  4131  0013AC  EFDE  F009         	goto	l4507
  4132  0013B0                     u5640:
  4133  0013B0                     
  4134                           ; BSR set to: 0
  4135  0013B0  0E00               	movlw	0
  4136  0013B2  6F6D               	movwf	(_efgtoa$908+1)& (0+255),b
  4137  0013B4  0E65               	movlw	101
  4138  0013B6  6F6C               	movwf	_efgtoa$908& (0+255),b
  4139  0013B8  EFE2  F009         	goto	l4509
  4140  0013BC                     l4507:
  4141                           
  4142                           ; BSR set to: 0
  4143  0013BC  0E00               	movlw	0
  4144  0013BE  6F6D               	movwf	(_efgtoa$908+1)& (0+255),b
  4145  0013C0  0E45               	movlw	69
  4146  0013C2  6F6C               	movwf	_efgtoa$908& (0+255),b
  4147  0013C4                     l4509:
  4148                           
  4149                           ; BSR set to: 0
  4150  0013C4  0E00               	movlw	low _dbuf
  4151  0013C6  258A               	addwf	efgtoa@i& (0+255),w,b
  4152  0013C8  6ED9               	movwf	fsr2l,c
  4153  0013CA  0E01               	movlw	high _dbuf
  4154  0013CC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4155  0013CE  6EDA               	movwf	fsr2h,c
  4156  0013D0  C06C  FFDF         	movff	_efgtoa$908,indf2
  4157  0013D4                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4160  0013D4  077F               	decf	efgtoa@w& (0+255),f,b
  4161  0013D6  A0D8               	btfss	status,0,c
  4162  0013D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4163  0013DA                     
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4166  0013DA  0E00               	movlw	low _dbuf
  4167  0013DC  2592               	addwf	efgtoa@n& (0+255),w,b
  4168  0013DE  6E01               	movwf	strcpy@dest^0,c
  4169  0013E0  0E01               	movlw	high _dbuf
  4170  0013E2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4171  0013E4  6E02               	movwf	(strcpy@dest+1)^0,c
  4172  0013E6  0E00               	movlw	low _dbuf
  4173  0013E8  258A               	addwf	efgtoa@i& (0+255),w,b
  4174  0013EA  6E03               	movwf	strcpy@src^0,c
  4175  0013EC  0E01               	movlw	high _dbuf
  4176  0013EE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4177  0013F0  6E04               	movwf	(strcpy@src+1)^0,c
  4178  0013F2  ECA9  F021         	call	_strcpy	;wreg free
  4179  0013F6  EFD9  F004         	goto	l4265
  4180  0013FA                     l991:
  4181  0013FA  0012               	return		;funcret
  4182  0013FC                     __end_of_efgtoa:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _tolower *****************
  4186 ;; Defined at:
  4187 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  c               2    6[COMRAM] int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    6[COMRAM] int 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         2       0       0       0       0       0       0       0       0
  4202 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4203 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4204 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4205 ;;Total ram usage:        8 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    2
  4208 ;; This function calls:
  4209 ;;		_isupper
  4210 ;; This function is called by:
  4211 ;;		_efgtoa
  4212 ;;		_vfpfcnvrt
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text6
  4217  004294                     __ptext6:
  4218                           	callstack 0
  4219  004294                     _tolower:
  4220                           	callstack 25
  4221  004294  0EBF               	movlw	191
  4222  004296  6E09               	movwf	??_tolower^0,c
  4223  004298  0EFF               	movlw	255
  4224  00429A  6E0A               	movwf	(??_tolower+1)^0,c
  4225  00429C  C007  F00B         	movff	tolower@c,??_tolower+2
  4226  0042A0  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4227  0042A4  5009               	movf	??_tolower^0,w,c
  4228  0042A6  260B               	addwf	(??_tolower+2)^0,f,c
  4229  0042A8  500A               	movf	(??_tolower+1)^0,w,c
  4230  0042AA  220C               	addwfc	(??_tolower+3)^0,f,c
  4231  0042AC  500C               	movf	(??_tolower+3)^0,w,c
  4232  0042AE  E10A               	bnz	u4790
  4233  0042B0  0E1A               	movlw	26
  4234  0042B2  5C0B               	subwf	(??_tolower+2)^0,w,c
  4235  0042B4  A0D8               	btfss	status,0,c
  4236  0042B6  EF5F  F021         	goto	u4791
  4237  0042BA  EF62  F021         	goto	u4790
  4238  0042BE                     u4791:
  4239  0042BE  0E01               	movlw	1
  4240  0042C0  EF63  F021         	goto	u4800
  4241  0042C4                     u4790:
  4242  0042C4  0E00               	movlw	0
  4243  0042C6                     u4800:
  4244  0042C6  6E0D               	movwf	_tolower$1059^0,c
  4245  0042C8  6A0E               	clrf	(_tolower$1059+1)^0,c
  4246  0042CA  500D               	movf	_tolower$1059^0,w,c
  4247  0042CC  100E               	iorwf	(_tolower$1059+1)^0,w,c
  4248  0042CE  B4D8               	btfsc	status,2,c
  4249  0042D0  EF6C  F021         	goto	u4811
  4250  0042D4  EF6E  F021         	goto	u4810
  4251  0042D8                     u4811:
  4252  0042D8  EF75  F021         	goto	l1241
  4253  0042DC                     u4810:
  4254  0042DC  0E20               	movlw	32
  4255  0042DE  1007               	iorwf	tolower@c^0,w,c
  4256  0042E0  6E07               	movwf	?_tolower^0,c
  4257  0042E2  5008               	movf	(tolower@c+1)^0,w,c
  4258  0042E4  6E08               	movwf	(?_tolower+1)^0,c
  4259  0042E6  EF79  F021         	goto	l1246
  4260  0042EA                     l1241:
  4261  0042EA  C007  F007         	movff	tolower@c,?_tolower
  4262  0042EE  C008  F008         	movff	tolower@c+1,?_tolower+1
  4263  0042F2                     l1246:
  4264  0042F2  0012               	return		;funcret
  4265  0042F4                     __end_of_tolower:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _isupper *****************
  4269 ;; Defined at:
  4270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  c               2    0[COMRAM] int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2    0[COMRAM] int 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        6 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_efgtoa
  4295 ;;		_vfpfcnvrt
  4296 ;;		_tolower
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text7
  4301  004686                     __ptext7:
  4302                           	callstack 0
  4303  004686                     _isupper:
  4304                           	callstack 25
  4305  004686  0EBF               	movlw	191
  4306  004688  6E03               	movwf	??_isupper^0,c
  4307  00468A  0EFF               	movlw	255
  4308  00468C  6E04               	movwf	(??_isupper+1)^0,c
  4309  00468E  C001  F005         	movff	isupper@c,??_isupper+2
  4310  004692  C002  F006         	movff	isupper@c+1,??_isupper+3
  4311  004696  5003               	movf	??_isupper^0,w,c
  4312  004698  2605               	addwf	(??_isupper+2)^0,f,c
  4313  00469A  5004               	movf	(??_isupper+1)^0,w,c
  4314  00469C  2206               	addwfc	(??_isupper+3)^0,f,c
  4315  00469E  5006               	movf	(??_isupper+3)^0,w,c
  4316  0046A0  E10A               	bnz	u3800
  4317  0046A2  0E1A               	movlw	26
  4318  0046A4  5C05               	subwf	(??_isupper+2)^0,w,c
  4319  0046A6  A0D8               	btfss	status,0,c
  4320  0046A8  EF58  F023         	goto	u3801
  4321  0046AC  EF5B  F023         	goto	u3800
  4322  0046B0                     u3801:
  4323  0046B0  0E01               	movlw	1
  4324  0046B2  EF5C  F023         	goto	u3810
  4325  0046B6                     u3800:
  4326  0046B6  0E00               	movlw	0
  4327  0046B8                     u3810:
  4328  0046B8  6E01               	movwf	?_isupper^0,c
  4329  0046BA  6A02               	clrf	(?_isupper+1)^0,c
  4330  0046BC  0012               	return		;funcret
  4331  0046BE                     __end_of_isupper:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _strcpy *****************
  4335 ;; Defined at:
  4336 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4339 ;;		 -> dbuf(80), 
  4340 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4341 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4342 ;;		 -> dbuf(80), 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  d               2    8[COMRAM] PTR unsigned char 
  4345 ;;		 -> dbuf(80), 
  4346 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4347 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4348 ;;		 -> dbuf(80), 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    0[COMRAM] PTR unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         4       0       0       0       0       0       0       0       0
  4359 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4360 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4361 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4362 ;;Total ram usage:       10 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_efgtoa
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text8
  4373  004352                     __ptext8:
  4374                           	callstack 0
  4375  004352                     _strcpy:
  4376                           	callstack 25
  4377  004352  C003  F007         	movff	strcpy@src,strcpy@s
  4378  004356  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4379  00435A  C001  F009         	movff	strcpy@dest,strcpy@d
  4380  00435E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4381  004362                     l4087:
  4382  004362  5007               	movf	strcpy@s^0,w,c
  4383  004364  6E05               	movwf	??_strcpy^0,c
  4384  004366  5008               	movf	(strcpy@s+1)^0,w,c
  4385  004368  6E06               	movwf	(??_strcpy+1)^0,c
  4386  00436A  4A07               	infsnz	strcpy@s^0,f,c
  4387  00436C  2A08               	incf	(strcpy@s+1)^0,f,c
  4388  00436E  C005  FFF6         	movff	??_strcpy,tblptrl
  4389  004372  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4390  004376  6AF8               	clrf	tblptru,c
  4391  004378  C009  FFD9         	movff	strcpy@d,fsr2l
  4392  00437C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4393  004380  4A09               	infsnz	strcpy@d^0,f,c
  4394  004382  2A0A               	incf	(strcpy@d+1)^0,f,c
  4395  004384  0E07               	movlw	(high __ramtop+-1)
  4396  004386  64F7               	cpfsgt	tblptrh,c
  4397  004388  D003               	bra	u4777
  4398  00438A  0008               	tblrd		*
  4399  00438C  50F5               	movf	tablat,w,c
  4400  00438E  D005               	bra	u4770
  4401  004390                     u4777:
  4402  004390  CFF6 FFE1          	movff	tblptrl,fsr1l
  4403  004394  CFF7 FFE2          	movff	tblptrh,fsr1h
  4404  004398  50E7               	movf	indf1,w,c
  4405  00439A                     u4770:
  4406  00439A  6EDF               	movwf	indf2,c
  4407  00439C  50DF               	movf	indf2,w,c
  4408  00439E  A4D8               	btfss	status,2,c
  4409  0043A0  EFD4  F021         	goto	u4781
  4410  0043A4  EFD6  F021         	goto	u4780
  4411  0043A8                     u4781:
  4412  0043A8  EFB1  F021         	goto	l4087
  4413  0043AC                     u4780:
  4414  0043AC  0012               	return		;funcret
  4415  0043AE                     __end_of_strcpy:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _floorf *****************
  4419 ;; Defined at:
  4420 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  x               4   25[COMRAM] float 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  u               4   41[COMRAM] struct .
  4425 ;;  m               4   35[COMRAM] unsigned long 
  4426 ;;  e               2   39[COMRAM] int 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  4   25[COMRAM] float 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4436 ;;      Params:         4       0       0       0       0       0       0       0       0
  4437 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4438 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4439 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4440 ;;Total ram usage:       20 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_efgtoa
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text9
  4451  00328E                     __ptext9:
  4452                           	callstack 0
  4453  00328E                     _floorf:
  4454                           	callstack 25
  4455  00328E  C0CC  F02A         	movff	floorf@F524,floorf@u
  4456  003292  C0CD  F02B         	movff	floorf@F524+1,floorf@u+1
  4457  003296  C0CE  F02C         	movff	floorf@F524+2,floorf@u+2
  4458  00329A  C0CF  F02D         	movff	floorf@F524+3,floorf@u+3
  4459  00329E  C01A  F02A         	movff	floorf@x,floorf@u
  4460  0032A2  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4461  0032A6  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4462  0032AA  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4463  0032AE  0E81               	movlw	129
  4464  0032B0  6E1E               	movwf	??_floorf^0,c
  4465  0032B2  0EFF               	movlw	255
  4466  0032B4  6E1F               	movwf	(??_floorf+1)^0,c
  4467  0032B6  C02A  F020         	movff	floorf@u,??_floorf+2
  4468  0032BA  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4469  0032BE  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4470  0032C2  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4471  0032C6  0E18               	movlw	24
  4472  0032C8  EF6B  F019         	goto	u4820
  4473  0032CC                     u4825:
  4474  0032CC  90D8               	bcf	status,0,c
  4475  0032CE  3223               	rrcf	(??_floorf+5)^0,f,c
  4476  0032D0  3222               	rrcf	(??_floorf+4)^0,f,c
  4477  0032D2  3221               	rrcf	(??_floorf+3)^0,f,c
  4478  0032D4  3220               	rrcf	(??_floorf+2)^0,f,c
  4479  0032D6                     u4820:
  4480  0032D6  2EE8               	decfsz	wreg,f,c
  4481  0032D8  EF66  F019         	goto	u4825
  4482  0032DC  5020               	movf	(??_floorf+2)^0,w,c
  4483  0032DE  241E               	addwf	??_floorf^0,w,c
  4484  0032E0  6E28               	movwf	floorf@e^0,c
  4485  0032E2  0E00               	movlw	0
  4486  0032E4  201F               	addwfc	(??_floorf+1)^0,w,c
  4487  0032E6  6E29               	movwf	(floorf@e+1)^0,c
  4488  0032E8  BE29               	btfsc	(floorf@e+1)^0,7,c
  4489  0032EA  EF80  F019         	goto	u4831
  4490  0032EE  5029               	movf	(floorf@e+1)^0,w,c
  4491  0032F0  E109               	bnz	u4830
  4492  0032F2  0E17               	movlw	23
  4493  0032F4  5C28               	subwf	floorf@e^0,w,c
  4494  0032F6  A0D8               	btfss	status,0,c
  4495  0032F8  EF80  F019         	goto	u4831
  4496  0032FC  EF82  F019         	goto	u4830
  4497  003300                     u4831:
  4498  003300  EF8C  F019         	goto	l4105
  4499  003304                     u4830:
  4500  003304                     l4103:
  4501  003304  C01A  F01A         	movff	floorf@x,?_floorf
  4502  003308  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4503  00330C  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4504  003310  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4505  003314  EF4F  F01A         	goto	l1165
  4506  003318                     l4105:
  4507  003318  BE29               	btfsc	(floorf@e+1)^0,7,c
  4508  00331A  EF91  F019         	goto	u4841
  4509  00331E  EF93  F019         	goto	u4840
  4510  003322                     u4841:
  4511  003322  EF03  F01A         	goto	l4115
  4512  003326                     u4840:
  4513  003326  C028  F01E         	movff	floorf@e,??_floorf
  4514  00332A  0EFF               	movlw	255
  4515  00332C  6E1F               	movwf	(??_floorf+1)^0,c
  4516  00332E  0EFF               	movlw	255
  4517  003330  6E20               	movwf	(??_floorf+2)^0,c
  4518  003332  0E7F               	movlw	127
  4519  003334  6E21               	movwf	(??_floorf+3)^0,c
  4520  003336  0E00               	movlw	0
  4521  003338  6E22               	movwf	(??_floorf+4)^0,c
  4522  00333A                     u4855:
  4523  00333A  661E               	tstfsz	??_floorf^0,c
  4524  00333C  EFA2  F019         	goto	u4856
  4525  003340  EFAA  F019         	goto	u4857
  4526  003344                     u4856:
  4527  003344  3422               	rlcf	(??_floorf+4)^0,w,c
  4528  003346  3222               	rrcf	(??_floorf+4)^0,f,c
  4529  003348  3221               	rrcf	(??_floorf+3)^0,f,c
  4530  00334A  3220               	rrcf	(??_floorf+2)^0,f,c
  4531  00334C  321F               	rrcf	(??_floorf+1)^0,f,c
  4532  00334E  2E1E               	decfsz	??_floorf^0,f,c
  4533  003350  EF9D  F019         	goto	u4855
  4534  003354                     u4857:
  4535  003354  C01F  F024         	movff	??_floorf+1,floorf@m
  4536  003358  C020  F025         	movff	??_floorf+2,floorf@m+1
  4537  00335C  C021  F026         	movff	??_floorf+3,floorf@m+2
  4538  003360  C022  F027         	movff	??_floorf+4,floorf@m+3
  4539  003364  5024               	movf	floorf@m^0,w,c
  4540  003366  142A               	andwf	floorf@u^0,w,c
  4541  003368  6E1E               	movwf	??_floorf^0,c
  4542  00336A  5025               	movf	(floorf@m+1)^0,w,c
  4543  00336C  142B               	andwf	(floorf@u+1)^0,w,c
  4544  00336E  6E1F               	movwf	(??_floorf+1)^0,c
  4545  003370  5026               	movf	(floorf@m+2)^0,w,c
  4546  003372  142C               	andwf	(floorf@u+2)^0,w,c
  4547  003374  6E20               	movwf	(??_floorf+2)^0,c
  4548  003376  5027               	movf	(floorf@m+3)^0,w,c
  4549  003378  142D               	andwf	(floorf@u+3)^0,w,c
  4550  00337A  6E21               	movwf	(??_floorf+3)^0,c
  4551  00337C  501E               	movf	??_floorf^0,w,c
  4552  00337E  101F               	iorwf	(??_floorf+1)^0,w,c
  4553  003380  1020               	iorwf	(??_floorf+2)^0,w,c
  4554  003382  1021               	iorwf	(??_floorf+3)^0,w,c
  4555  003384  A4D8               	btfss	status,2,c
  4556  003386  EFC7  F019         	goto	u4861
  4557  00338A  EFC9  F019         	goto	u4860
  4558  00338E                     u4861:
  4559  00338E  EFCB  F019         	goto	l4111
  4560  003392                     u4860:
  4561  003392  EF82  F019         	goto	l4103
  4562  003396                     l4111:
  4563  003396  C02A  F01E         	movff	floorf@u,??_floorf
  4564  00339A  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4565  00339E  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4566  0033A2  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4567  0033A6  0E20               	movlw	32
  4568  0033A8  EFDB  F019         	goto	u4870
  4569  0033AC                     u4875:
  4570  0033AC  90D8               	bcf	status,0,c
  4571  0033AE  3221               	rrcf	(??_floorf+3)^0,f,c
  4572  0033B0  3220               	rrcf	(??_floorf+2)^0,f,c
  4573  0033B2  321F               	rrcf	(??_floorf+1)^0,f,c
  4574  0033B4  321E               	rrcf	??_floorf^0,f,c
  4575  0033B6                     u4870:
  4576  0033B6  2EE8               	decfsz	wreg,f,c
  4577  0033B8  EFD6  F019         	goto	u4875
  4578  0033BC  501E               	movf	??_floorf^0,w,c
  4579  0033BE  101F               	iorwf	(??_floorf+1)^0,w,c
  4580  0033C0  1020               	iorwf	(??_floorf+2)^0,w,c
  4581  0033C2  1021               	iorwf	(??_floorf+3)^0,w,c
  4582  0033C4  B4D8               	btfsc	status,2,c
  4583  0033C6  EFE7  F019         	goto	u4881
  4584  0033CA  EFE9  F019         	goto	u4880
  4585  0033CE                     u4881:
  4586  0033CE  EFF1  F019         	goto	l1168
  4587  0033D2                     u4880:
  4588  0033D2  5024               	movf	floorf@m^0,w,c
  4589  0033D4  262A               	addwf	floorf@u^0,f,c
  4590  0033D6  5025               	movf	(floorf@m+1)^0,w,c
  4591  0033D8  222B               	addwfc	(floorf@u+1)^0,f,c
  4592  0033DA  5026               	movf	(floorf@m+2)^0,w,c
  4593  0033DC  222C               	addwfc	(floorf@u+2)^0,f,c
  4594  0033DE  5027               	movf	(floorf@m+3)^0,w,c
  4595  0033E0  222D               	addwfc	(floorf@u+3)^0,f,c
  4596  0033E2                     l1168:
  4597  0033E2  1C24               	comf	floorf@m^0,w,c
  4598  0033E4  6E1E               	movwf	??_floorf^0,c
  4599  0033E6  1C25               	comf	(floorf@m+1)^0,w,c
  4600  0033E8  6E1F               	movwf	(??_floorf+1)^0,c
  4601  0033EA  1C26               	comf	(floorf@m+2)^0,w,c
  4602  0033EC  6E20               	movwf	(??_floorf+2)^0,c
  4603  0033EE  1C27               	comf	(floorf@m+3)^0,w,c
  4604  0033F0  6E21               	movwf	(??_floorf+3)^0,c
  4605  0033F2  501E               	movf	??_floorf^0,w,c
  4606  0033F4  162A               	andwf	floorf@u^0,f,c
  4607  0033F6  501F               	movf	(??_floorf+1)^0,w,c
  4608  0033F8  162B               	andwf	(floorf@u+1)^0,f,c
  4609  0033FA  5020               	movf	(??_floorf+2)^0,w,c
  4610  0033FC  162C               	andwf	(floorf@u+2)^0,f,c
  4611  0033FE  5021               	movf	(??_floorf+3)^0,w,c
  4612  003400  162D               	andwf	(floorf@u+3)^0,f,c
  4613  003402  EF47  F01A         	goto	l4123
  4614  003406                     l4115:
  4615  003406  C02A  F01E         	movff	floorf@u,??_floorf
  4616  00340A  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4617  00340E  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4618  003412  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4619  003416  0E20               	movlw	32
  4620  003418  EF13  F01A         	goto	u4890
  4621  00341C                     u4895:
  4622  00341C  90D8               	bcf	status,0,c
  4623  00341E  3221               	rrcf	(??_floorf+3)^0,f,c
  4624  003420  3220               	rrcf	(??_floorf+2)^0,f,c
  4625  003422  321F               	rrcf	(??_floorf+1)^0,f,c
  4626  003424  321E               	rrcf	??_floorf^0,f,c
  4627  003426                     u4890:
  4628  003426  2EE8               	decfsz	wreg,f,c
  4629  003428  EF0E  F01A         	goto	u4895
  4630  00342C  501E               	movf	??_floorf^0,w,c
  4631  00342E  101F               	iorwf	(??_floorf+1)^0,w,c
  4632  003430  1020               	iorwf	(??_floorf+2)^0,w,c
  4633  003432  1021               	iorwf	(??_floorf+3)^0,w,c
  4634  003434  A4D8               	btfss	status,2,c
  4635  003436  EF1F  F01A         	goto	u4901
  4636  00343A  EF21  F01A         	goto	u4900
  4637  00343E                     u4901:
  4638  00343E  EF2B  F01A         	goto	l4119
  4639  003442                     u4900:
  4640  003442  0E00               	movlw	0
  4641  003444  6E2A               	movwf	floorf@u^0,c
  4642  003446  0E00               	movlw	0
  4643  003448  6E2B               	movwf	(floorf@u+1)^0,c
  4644  00344A  0E00               	movlw	0
  4645  00344C  6E2C               	movwf	(floorf@u+2)^0,c
  4646  00344E  0E00               	movlw	0
  4647  003450  6E2D               	movwf	(floorf@u+3)^0,c
  4648  003452  EF47  F01A         	goto	l4123
  4649  003456                     l4119:
  4650  003456  90D8               	bcf	status,0,c
  4651  003458  342A               	rlcf	floorf@u^0,w,c
  4652  00345A  6E1E               	movwf	??_floorf^0,c
  4653  00345C  342B               	rlcf	(floorf@u+1)^0,w,c
  4654  00345E  6E1F               	movwf	(??_floorf+1)^0,c
  4655  003460  342C               	rlcf	(floorf@u+2)^0,w,c
  4656  003462  6E20               	movwf	(??_floorf+2)^0,c
  4657  003464  342D               	rlcf	(floorf@u+3)^0,w,c
  4658  003466  6E21               	movwf	(??_floorf+3)^0,c
  4659  003468  501E               	movf	??_floorf^0,w,c
  4660  00346A  101F               	iorwf	(??_floorf+1)^0,w,c
  4661  00346C  1020               	iorwf	(??_floorf+2)^0,w,c
  4662  00346E  1021               	iorwf	(??_floorf+3)^0,w,c
  4663  003470  B4D8               	btfsc	status,2,c
  4664  003472  EF3D  F01A         	goto	u4911
  4665  003476  EF3F  F01A         	goto	u4910
  4666  00347A                     u4911:
  4667  00347A  EF47  F01A         	goto	l4123
  4668  00347E                     u4910:
  4669  00347E  0E00               	movlw	0
  4670  003480  6E2A               	movwf	floorf@u^0,c
  4671  003482  0E00               	movlw	0
  4672  003484  6E2B               	movwf	(floorf@u+1)^0,c
  4673  003486  0E80               	movlw	128
  4674  003488  6E2C               	movwf	(floorf@u+2)^0,c
  4675  00348A  0EBF               	movlw	191
  4676  00348C  6E2D               	movwf	(floorf@u+3)^0,c
  4677  00348E                     l4123:
  4678  00348E  C02A  F01A         	movff	floorf@u,?_floorf
  4679  003492  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4680  003496  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4681  00349A  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4682  00349E                     l1165:
  4683  00349E  0012               	return		;funcret
  4684  0034A0                     __end_of_floorf:
  4685                           	callstack 0
  4686                           
  4687 ;; *************** function ___fpclassifyf *****************
  4688 ;; Defined at:
  4689 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  x               4    0[COMRAM] float 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  u               4   10[COMRAM] struct .
  4694 ;;  e               2    8[COMRAM] int 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  2    0[COMRAM] int 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4704 ;;      Params:         4       0       0       0       0       0       0       0       0
  4705 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4706 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4707 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4708 ;;Total ram usage:       14 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_efgtoa
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text10
  4719  003CB0                     __ptext10:
  4720                           	callstack 0
  4721  003CB0                     ___fpclassifyf:
  4722                           	callstack 25
  4723  003CB0  C0D0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4724  003CB4  C0D1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4725  003CB8  C0D2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4726  003CBC  C0D3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4727  003CC0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4728  003CC4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4729  003CC8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4730  003CCC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4731  003CD0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4732  003CD4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4733  003CD8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4734  003CDC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4735  003CE0  0E18               	movlw	24
  4736  003CE2  EF78  F01E         	goto	u4700
  4737  003CE6                     u4705:
  4738  003CE6  90D8               	bcf	status,0,c
  4739  003CE8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4740  003CEA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4741  003CEC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4742  003CEE  3205               	rrcf	??___fpclassifyf^0,f,c
  4743  003CF0                     u4700:
  4744  003CF0  2EE8               	decfsz	wreg,f,c
  4745  003CF2  EF73  F01E         	goto	u4705
  4746  003CF6  5005               	movf	??___fpclassifyf^0,w,c
  4747  003CF8  6E09               	movwf	___fpclassifyf@e^0,c
  4748  003CFA  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4749  003CFC  5009               	movf	___fpclassifyf@e^0,w,c
  4750  003CFE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4751  003D00  A4D8               	btfss	status,2,c
  4752  003D02  EF85  F01E         	goto	u4711
  4753  003D06  EF87  F01E         	goto	u4710
  4754  003D0A                     u4711:
  4755  003D0A  EFA7  F01E         	goto	l4075
  4756  003D0E                     u4710:
  4757  003D0E  90D8               	bcf	status,0,c
  4758  003D10  340B               	rlcf	___fpclassifyf@u^0,w,c
  4759  003D12  6E05               	movwf	??___fpclassifyf^0,c
  4760  003D14  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4761  003D16  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4762  003D18  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4763  003D1A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4764  003D1C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4765  003D1E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4766  003D20  5005               	movf	??___fpclassifyf^0,w,c
  4767  003D22  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4768  003D24  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4769  003D26  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4770  003D28  A4D8               	btfss	status,2,c
  4771  003D2A  EF99  F01E         	goto	u4721
  4772  003D2E  EF9B  F01E         	goto	u4720
  4773  003D32                     u4721:
  4774  003D32  EFA1  F01E         	goto	l4071
  4775  003D36                     u4720:
  4776  003D36  0E00               	movlw	0
  4777  003D38  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4778  003D3A  0E02               	movlw	2
  4779  003D3C  6E01               	movwf	?___fpclassifyf^0,c
  4780  003D3E  EFD6  F01E         	goto	l1120
  4781  003D42                     l4071:
  4782  003D42  0E00               	movlw	0
  4783  003D44  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4784  003D46  0E03               	movlw	3
  4785  003D48  6E01               	movwf	?___fpclassifyf^0,c
  4786  003D4A  EFD6  F01E         	goto	l1120
  4787  003D4E                     l4075:
  4788  003D4E  2809               	incf	___fpclassifyf@e^0,w,c
  4789  003D50  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4790  003D52  A4D8               	btfss	status,2,c
  4791  003D54  EFAE  F01E         	goto	u4731
  4792  003D58  EFB0  F01E         	goto	u4730
  4793  003D5C                     u4731:
  4794  003D5C  EFD2  F01E         	goto	l4081
  4795  003D60                     u4730:
  4796  003D60  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4797  003D64  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4798  003D68  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4799  003D6C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4800  003D70  0E09               	movlw	9
  4801  003D72                     u4745:
  4802  003D72  90D8               	bcf	status,0,c
  4803  003D74  3605               	rlcf	??___fpclassifyf^0,f,c
  4804  003D76  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4805  003D78  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4806  003D7A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4807  003D7C  2EE8               	decfsz	wreg,f,c
  4808  003D7E  EFB9  F01E         	goto	u4745
  4809  003D82  5005               	movf	??___fpclassifyf^0,w,c
  4810  003D84  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4811  003D86  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4812  003D88  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4813  003D8A  B4D8               	btfsc	status,2,c
  4814  003D8C  EFCA  F01E         	goto	u4751
  4815  003D90  EFCD  F01E         	goto	u4750
  4816  003D94                     u4751:
  4817  003D94  0E01               	movlw	1
  4818  003D96  EFCE  F01E         	goto	u4760
  4819  003D9A                     u4750:
  4820  003D9A  0E00               	movlw	0
  4821  003D9C                     u4760:
  4822  003D9C  6E01               	movwf	?___fpclassifyf^0,c
  4823  003D9E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4824  003DA0  EFD6  F01E         	goto	l1120
  4825  003DA4                     l4081:
  4826  003DA4  0E00               	movlw	0
  4827  003DA6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4828  003DA8  0E04               	movlw	4
  4829  003DAA  6E01               	movwf	?___fpclassifyf^0,c
  4830  003DAC                     l1120:
  4831  003DAC  0012               	return		;funcret
  4832  003DAE                     __end_of___fpclassifyf:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function ___fltol *****************
  4836 ;; Defined at:
  4837 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  f1              4    0[COMRAM] int 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  exp1            1    9[COMRAM] unsigned char 
  4842 ;;  sign1           1    8[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  4    0[COMRAM] long 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4852 ;;      Params:         4       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4855 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:       10 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_efgtoa
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text11
  4867  003AA6                     __ptext11:
  4868                           	callstack 0
  4869  003AA6                     ___fltol:
  4870                           	callstack 25
  4871  003AA6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4872  003AA8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4873  003AAA  6E0A               	movwf	___fltol@exp1^0,c
  4874  003AAC  500A               	movf	___fltol@exp1^0,w,c
  4875  003AAE  A4D8               	btfss	status,2,c
  4876  003AB0  EF5C  F01D         	goto	u4581
  4877  003AB4  EF5E  F01D         	goto	u4580
  4878  003AB8                     u4581:
  4879  003AB8  EF68  F01D         	goto	l3999
  4880  003ABC                     u4580:
  4881  003ABC                     l3995:
  4882  003ABC  0E00               	movlw	0
  4883  003ABE  6E01               	movwf	?___fltol^0,c
  4884  003AC0  0E00               	movlw	0
  4885  003AC2  6E02               	movwf	(?___fltol+1)^0,c
  4886  003AC4  0E00               	movlw	0
  4887  003AC6  6E03               	movwf	(?___fltol+2)^0,c
  4888  003AC8  0E00               	movlw	0
  4889  003ACA  6E04               	movwf	(?___fltol+3)^0,c
  4890  003ACC  EFD5  F01D         	goto	l518
  4891  003AD0                     l3999:
  4892  003AD0  C001  F005         	movff	___fltol@f1,??___fltol
  4893  003AD4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4894  003AD8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4895  003ADC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4896  003AE0  0E20               	movlw	32
  4897  003AE2  EF78  F01D         	goto	u4590
  4898  003AE6                     u4595:
  4899  003AE6  90D8               	bcf	status,0,c
  4900  003AE8  3208               	rrcf	(??___fltol+3)^0,f,c
  4901  003AEA  3207               	rrcf	(??___fltol+2)^0,f,c
  4902  003AEC  3206               	rrcf	(??___fltol+1)^0,f,c
  4903  003AEE  3205               	rrcf	??___fltol^0,f,c
  4904  003AF0                     u4590:
  4905  003AF0  2EE8               	decfsz	wreg,f,c
  4906  003AF2  EF73  F01D         	goto	u4595
  4907  003AF6  5005               	movf	??___fltol^0,w,c
  4908  003AF8  6E09               	movwf	___fltol@sign1^0,c
  4909  003AFA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4910  003AFC  0EFF               	movlw	255
  4911  003AFE  1601               	andwf	___fltol@f1^0,f,c
  4912  003B00  0EFF               	movlw	255
  4913  003B02  1602               	andwf	(___fltol@f1+1)^0,f,c
  4914  003B04  0EFF               	movlw	255
  4915  003B06  1603               	andwf	(___fltol@f1+2)^0,f,c
  4916  003B08  0E00               	movlw	0
  4917  003B0A  1604               	andwf	(___fltol@f1+3)^0,f,c
  4918  003B0C  0E96               	movlw	150
  4919  003B0E  5E0A               	subwf	___fltol@exp1^0,f,c
  4920  003B10  BE0A               	btfsc	___fltol@exp1^0,7,c
  4921  003B12  EF8F  F01D         	goto	u4600
  4922  003B16  EF8D  F01D         	goto	u4601
  4923  003B1A                     u4601:
  4924  003B1A  EFA5  F01D         	goto	l4019
  4925  003B1E                     u4600:
  4926  003B1E  500A               	movf	___fltol@exp1^0,w,c
  4927  003B20  0A80               	xorlw	128
  4928  003B22  0F97               	addlw	151
  4929  003B24  B0D8               	btfsc	status,0,c
  4930  003B26  EF97  F01D         	goto	u4611
  4931  003B2A  EF99  F01D         	goto	u4610
  4932  003B2E                     u4611:
  4933  003B2E  EF9B  F01D         	goto	l4015
  4934  003B32                     u4610:
  4935  003B32  EF5E  F01D         	goto	l3995
  4936  003B36                     l4015:
  4937  003B36  90D8               	bcf	status,0,c
  4938  003B38  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4939  003B3A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4940  003B3C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4941  003B3E  3201               	rrcf	___fltol@f1^0,f,c
  4942  003B40  3E0A               	incfsz	___fltol@exp1^0,f,c
  4943  003B42  EF9B  F01D         	goto	l4015
  4944  003B46  EFBD  F01D         	goto	l4029
  4945  003B4A                     l4019:
  4946  003B4A  0E1F               	movlw	31
  4947  003B4C  640A               	cpfsgt	___fltol@exp1^0,c
  4948  003B4E  EFAB  F01D         	goto	u4621
  4949  003B52  EFAD  F01D         	goto	u4620
  4950  003B56                     u4621:
  4951  003B56  EFB5  F01D         	goto	l4027
  4952  003B5A                     u4620:
  4953  003B5A  EF5E  F01D         	goto	l3995
  4954  003B5E                     l4025:
  4955  003B5E  90D8               	bcf	status,0,c
  4956  003B60  3601               	rlcf	___fltol@f1^0,f,c
  4957  003B62  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4958  003B64  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4959  003B66  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4960  003B68  060A               	decf	___fltol@exp1^0,f,c
  4961  003B6A                     l4027:
  4962  003B6A  500A               	movf	___fltol@exp1^0,w,c
  4963  003B6C  A4D8               	btfss	status,2,c
  4964  003B6E  EFBB  F01D         	goto	u4631
  4965  003B72  EFBD  F01D         	goto	u4630
  4966  003B76                     u4631:
  4967  003B76  EFAF  F01D         	goto	l4025
  4968  003B7A                     u4630:
  4969  003B7A                     l4029:
  4970  003B7A  5009               	movf	___fltol@sign1^0,w,c
  4971  003B7C  B4D8               	btfsc	status,2,c
  4972  003B7E  EFC3  F01D         	goto	u4641
  4973  003B82  EFC5  F01D         	goto	u4640
  4974  003B86                     u4641:
  4975  003B86  EFCD  F01D         	goto	l4033
  4976  003B8A                     u4640:
  4977  003B8A  1E04               	comf	(___fltol@f1+3)^0,f,c
  4978  003B8C  1E03               	comf	(___fltol@f1+2)^0,f,c
  4979  003B8E  1E02               	comf	(___fltol@f1+1)^0,f,c
  4980  003B90  6C01               	negf	___fltol@f1^0,c
  4981  003B92  0E00               	movlw	0
  4982  003B94  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4983  003B96  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4984  003B98  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4985  003B9A                     l4033:
  4986  003B9A  C001  F001         	movff	___fltol@f1,?___fltol
  4987  003B9E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4988  003BA2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4989  003BA6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4990  003BAA                     l518:
  4991  003BAA  0012               	return		;funcret
  4992  003BAC                     __end_of___fltol:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function ___flsub *****************
  4996 ;; Defined at:
  4997 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  b               4   25[COMRAM] long 
  5000 ;;  a               4   29[COMRAM] long 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  4   25[COMRAM] long 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         8       0       0       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5015 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5016 ;;Total ram usage:        8 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    2
  5019 ;; This function calls:
  5020 ;;		___fladd
  5021 ;; This function is called by:
  5022 ;;		_efgtoa
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text12
  5027  00457C                     __ptext12:
  5028                           	callstack 0
  5029  00457C                     ___flsub:
  5030                           	callstack 24
  5031  00457C  0E00               	movlw	0
  5032  00457E  1A1E               	xorwf	___flsub@a^0,f,c
  5033  004580  0E00               	movlw	0
  5034  004582  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5035  004584  0E00               	movlw	0
  5036  004586  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5037  004588  0E80               	movlw	128
  5038  00458A  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5039  00458C  C01A  F001         	movff	___flsub@b,___fladd@b
  5040  004590  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5041  004594  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5042  004598  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5043  00459C  C01E  F005         	movff	___flsub@a,___fladd@a
  5044  0045A0  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5045  0045A4  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5046  0045A8  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5047  0045AC  ECF4  F00C         	call	___fladd	;wreg free
  5048  0045B0  C001  F01A         	movff	?___fladd,?___flsub
  5049  0045B4  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5050  0045B8  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5051  0045BC  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5052  0045C0  0012               	return		;funcret
  5053  0045C2                     __end_of___flsub:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function ___fladd *****************
  5057 ;; Defined at:
  5058 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  b               4    0[COMRAM] long 
  5061 ;;  a               4    4[COMRAM] long 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  grs             1   15[COMRAM] unsigned char 
  5064 ;;  bexp            1   14[COMRAM] unsigned char 
  5065 ;;  aexp            1   13[COMRAM] unsigned char 
  5066 ;;  signs           1   12[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  4    0[COMRAM] unsigned char 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5076 ;;      Params:         8       0       0       0       0       0       0       0       0
  5077 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5079 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:       16 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    1
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		___flsub
  5087 ;;		_efgtoa
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text13
  5092  0019E8                     __ptext13:
  5093                           	callstack 0
  5094  0019E8                     ___fladd:
  5095                           	callstack 24
  5096  0019E8  5004               	movf	(___fladd@b+3)^0,w,c
  5097  0019EA  0B80               	andlw	128
  5098  0019EC  6E0D               	movwf	___fladd@signs^0,c
  5099  0019EE  5004               	movf	(___fladd@b+3)^0,w,c
  5100  0019F0  2404               	addwf	(___fladd@b+3)^0,w,c
  5101  0019F2  6E0F               	movwf	___fladd@bexp^0,c
  5102  0019F4  AE03               	btfss	(___fladd@b+2)^0,7,c
  5103  0019F6  EFFF  F00C         	goto	u3391
  5104  0019FA  EF01  F00D         	goto	u3390
  5105  0019FE                     u3391:
  5106  0019FE  EF02  F00D         	goto	l3289
  5107  001A02                     u3390:
  5108  001A02  800F               	bsf	___fladd@bexp^0,0,c
  5109  001A04                     l3289:
  5110  001A04  500F               	movf	___fladd@bexp^0,w,c
  5111  001A06  B4D8               	btfsc	status,2,c
  5112  001A08  EF08  F00D         	goto	u3401
  5113  001A0C  EF0A  F00D         	goto	u3400
  5114  001A10                     u3401:
  5115  001A10  EF1F  F00D         	goto	l3299
  5116  001A14                     u3400:
  5117  001A14  280F               	incf	___fladd@bexp^0,w,c
  5118  001A16  A4D8               	btfss	status,2,c
  5119  001A18  EF10  F00D         	goto	u3411
  5120  001A1C  EF12  F00D         	goto	u3410
  5121  001A20                     u3411:
  5122  001A20  EF1A  F00D         	goto	l3295
  5123  001A24                     u3410:
  5124  001A24  0E00               	movlw	0
  5125  001A26  6E01               	movwf	___fladd@b^0,c
  5126  001A28  0E00               	movlw	0
  5127  001A2A  6E02               	movwf	(___fladd@b+1)^0,c
  5128  001A2C  0E00               	movlw	0
  5129  001A2E  6E03               	movwf	(___fladd@b+2)^0,c
  5130  001A30  0E00               	movlw	0
  5131  001A32  6E04               	movwf	(___fladd@b+3)^0,c
  5132  001A34                     l3295:
  5133  001A34  8E03               	bsf	(___fladd@b+2)^0,7,c
  5134  001A36  0E00               	movlw	0
  5135  001A38  6E04               	movwf	(___fladd@b+3)^0,c
  5136  001A3A  EF27  F00D         	goto	l3301
  5137  001A3E                     l3299:
  5138  001A3E  0E00               	movlw	0
  5139  001A40  6E01               	movwf	___fladd@b^0,c
  5140  001A42  0E00               	movlw	0
  5141  001A44  6E02               	movwf	(___fladd@b+1)^0,c
  5142  001A46  0E00               	movlw	0
  5143  001A48  6E03               	movwf	(___fladd@b+2)^0,c
  5144  001A4A  0E00               	movlw	0
  5145  001A4C  6E04               	movwf	(___fladd@b+3)^0,c
  5146  001A4E                     l3301:
  5147  001A4E  5008               	movf	(___fladd@a+3)^0,w,c
  5148  001A50  0B80               	andlw	128
  5149  001A52  6E0E               	movwf	___fladd@aexp^0,c
  5150  001A54  500D               	movf	___fladd@signs^0,w,c
  5151  001A56  180E               	xorwf	___fladd@aexp^0,w,c
  5152  001A58  B4D8               	btfsc	status,2,c
  5153  001A5A  EF31  F00D         	goto	u3421
  5154  001A5E  EF33  F00D         	goto	u3420
  5155  001A62                     u3421:
  5156  001A62  EF34  F00D         	goto	l3307
  5157  001A66                     u3420:
  5158  001A66  8C0D               	bsf	___fladd@signs^0,6,c
  5159  001A68                     l3307:
  5160  001A68  5008               	movf	(___fladd@a+3)^0,w,c
  5161  001A6A  2408               	addwf	(___fladd@a+3)^0,w,c
  5162  001A6C  6E0E               	movwf	___fladd@aexp^0,c
  5163  001A6E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5164  001A70  EF3C  F00D         	goto	u3431
  5165  001A74  EF3E  F00D         	goto	u3430
  5166  001A78                     u3431:
  5167  001A78  EF3F  F00D         	goto	l3313
  5168  001A7C                     u3430:
  5169  001A7C  800E               	bsf	___fladd@aexp^0,0,c
  5170  001A7E                     l3313:
  5171  001A7E  500E               	movf	___fladd@aexp^0,w,c
  5172  001A80  B4D8               	btfsc	status,2,c
  5173  001A82  EF45  F00D         	goto	u3441
  5174  001A86  EF47  F00D         	goto	u3440
  5175  001A8A                     u3441:
  5176  001A8A  EF5C  F00D         	goto	l3323
  5177  001A8E                     u3440:
  5178  001A8E  280E               	incf	___fladd@aexp^0,w,c
  5179  001A90  A4D8               	btfss	status,2,c
  5180  001A92  EF4D  F00D         	goto	u3451
  5181  001A96  EF4F  F00D         	goto	u3450
  5182  001A9A                     u3451:
  5183  001A9A  EF57  F00D         	goto	l3319
  5184  001A9E                     u3450:
  5185  001A9E  0E00               	movlw	0
  5186  001AA0  6E05               	movwf	___fladd@a^0,c
  5187  001AA2  0E00               	movlw	0
  5188  001AA4  6E06               	movwf	(___fladd@a+1)^0,c
  5189  001AA6  0E00               	movlw	0
  5190  001AA8  6E07               	movwf	(___fladd@a+2)^0,c
  5191  001AAA  0E00               	movlw	0
  5192  001AAC  6E08               	movwf	(___fladd@a+3)^0,c
  5193  001AAE                     l3319:
  5194  001AAE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5195  001AB0  0E00               	movlw	0
  5196  001AB2  6E08               	movwf	(___fladd@a+3)^0,c
  5197  001AB4  EF64  F00D         	goto	l3325
  5198  001AB8                     l3323:
  5199  001AB8  0E00               	movlw	0
  5200  001ABA  6E05               	movwf	___fladd@a^0,c
  5201  001ABC  0E00               	movlw	0
  5202  001ABE  6E06               	movwf	(___fladd@a+1)^0,c
  5203  001AC0  0E00               	movlw	0
  5204  001AC2  6E07               	movwf	(___fladd@a+2)^0,c
  5205  001AC4  0E00               	movlw	0
  5206  001AC6  6E08               	movwf	(___fladd@a+3)^0,c
  5207  001AC8                     l3325:
  5208  001AC8  500F               	movf	___fladd@bexp^0,w,c
  5209  001ACA  5C0E               	subwf	___fladd@aexp^0,w,c
  5210  001ACC  B0D8               	btfsc	status,0,c
  5211  001ACE  EF6B  F00D         	goto	u3461
  5212  001AD2  EF6D  F00D         	goto	u3460
  5213  001AD6                     u3461:
  5214  001AD6  EF94  F00D         	goto	l3361
  5215  001ADA                     u3460:
  5216  001ADA  AC0D               	btfss	___fladd@signs^0,6,c
  5217  001ADC  EF72  F00D         	goto	u3471
  5218  001AE0  EF74  F00D         	goto	u3470
  5219  001AE4                     u3471:
  5220  001AE4  EF76  F00D         	goto	l3331
  5221  001AE8                     u3470:
  5222  001AE8  0E80               	movlw	128
  5223  001AEA  1A0D               	xorwf	___fladd@signs^0,f,c
  5224  001AEC                     l3331:
  5225  001AEC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5226  001AF0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5227  001AF4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5228  001AF8  C001  F010         	movff	___fladd@b,___fladd@grs
  5229  001AFC  C005  F001         	movff	___fladd@a,___fladd@b
  5230  001B00  C010  F005         	movff	___fladd@grs,___fladd@a
  5231  001B04  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5232  001B08  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5233  001B0C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5234  001B10  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5235  001B14  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5236  001B18  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5237  001B1C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5238  001B20  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5239  001B24  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5240  001B28                     l3361:
  5241  001B28  0E00               	movlw	0
  5242  001B2A  6E10               	movwf	___fladd@grs^0,c
  5243  001B2C  500F               	movf	___fladd@bexp^0,w,c
  5244  001B2E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5245  001B32  6A0A               	clrf	(??___fladd+1)^0,c
  5246  001B34  5E09               	subwf	??___fladd^0,f,c
  5247  001B36  0E00               	movlw	0
  5248  001B38  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5249  001B3A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5250  001B3C  EFA9  F00D         	goto	u3481
  5251  001B40  500A               	movf	(??___fladd+1)^0,w,c
  5252  001B42  E109               	bnz	u3480
  5253  001B44  0E1A               	movlw	26
  5254  001B46  5C09               	subwf	??___fladd^0,w,c
  5255  001B48  A0D8               	btfss	status,0,c
  5256  001B4A  EFA9  F00D         	goto	u3481
  5257  001B4E  EFAB  F00D         	goto	u3480
  5258  001B52                     u3481:
  5259  001B52  EFE2  F00D         	goto	l750
  5260  001B56                     u3480:
  5261  001B56  5001               	movf	___fladd@b^0,w,c
  5262  001B58  1002               	iorwf	(___fladd@b+1)^0,w,c
  5263  001B5A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5264  001B5C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5265  001B5E  A4D8               	btfss	status,2,c
  5266  001B60  EFB4  F00D         	goto	u3491
  5267  001B64  EFB7  F00D         	goto	u3490
  5268  001B68                     u3491:
  5269  001B68  0E01               	movlw	1
  5270  001B6A  EFB8  F00D         	goto	u3500
  5271  001B6E                     u3490:
  5272  001B6E  0E00               	movlw	0
  5273  001B70                     u3500:
  5274  001B70  6E10               	movwf	___fladd@grs^0,c
  5275  001B72  0E00               	movlw	0
  5276  001B74  6E01               	movwf	___fladd@b^0,c
  5277  001B76  0E00               	movlw	0
  5278  001B78  6E02               	movwf	(___fladd@b+1)^0,c
  5279  001B7A  0E00               	movlw	0
  5280  001B7C  6E03               	movwf	(___fladd@b+2)^0,c
  5281  001B7E  0E00               	movlw	0
  5282  001B80  6E04               	movwf	(___fladd@b+3)^0,c
  5283  001B82  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5284  001B86  EFEB  F00D         	goto	l749
  5285  001B8A                     l751:
  5286  001B8A  A010               	btfss	___fladd@grs^0,0,c
  5287  001B8C  EFCA  F00D         	goto	u3511
  5288  001B90  EFCC  F00D         	goto	u3510
  5289  001B94                     u3511:
  5290  001B94  EFD2  F00D         	goto	l3373
  5291  001B98                     u3510:
  5292  001B98  90D8               	bcf	status,0,c
  5293  001B9A  3010               	rrcf	___fladd@grs^0,w,c
  5294  001B9C  0901               	iorlw	1
  5295  001B9E  6E10               	movwf	___fladd@grs^0,c
  5296  001BA0  EFD4  F00D         	goto	l3375
  5297  001BA4                     l3373:
  5298  001BA4  90D8               	bcf	status,0,c
  5299  001BA6  3210               	rrcf	___fladd@grs^0,f,c
  5300  001BA8                     l3375:
  5301  001BA8  A001               	btfss	___fladd@b^0,0,c
  5302  001BAA  EFD9  F00D         	goto	u3521
  5303  001BAE  EFDB  F00D         	goto	u3520
  5304  001BB2                     u3521:
  5305  001BB2  EFDC  F00D         	goto	l3379
  5306  001BB6                     u3520:
  5307  001BB6  8E10               	bsf	___fladd@grs^0,7,c
  5308  001BB8                     l3379:
  5309  001BB8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5310  001BBA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5311  001BBC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5312  001BBE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5313  001BC0  3201               	rrcf	___fladd@b^0,f,c
  5314  001BC2  2A0F               	incf	___fladd@bexp^0,f,c
  5315  001BC4                     l750:
  5316  001BC4  500E               	movf	___fladd@aexp^0,w,c
  5317  001BC6  5C0F               	subwf	___fladd@bexp^0,w,c
  5318  001BC8  A0D8               	btfss	status,0,c
  5319  001BCA  EFE9  F00D         	goto	u3531
  5320  001BCE  EFEB  F00D         	goto	u3530
  5321  001BD2                     u3531:
  5322  001BD2  EFC5  F00D         	goto	l751
  5323  001BD6                     u3530:
  5324  001BD6                     l749:
  5325  001BD6  BC0D               	btfsc	___fladd@signs^0,6,c
  5326  001BD8  EFF0  F00D         	goto	u3541
  5327  001BDC  EFF2  F00D         	goto	u3540
  5328  001BE0                     u3541:
  5329  001BE0  EF32  F00E         	goto	l3407
  5330  001BE4                     u3540:
  5331  001BE4  500F               	movf	___fladd@bexp^0,w,c
  5332  001BE6  A4D8               	btfss	status,2,c
  5333  001BE8  EFF8  F00D         	goto	u3551
  5334  001BEC  EFFA  F00D         	goto	u3550
  5335  001BF0                     u3551:
  5336  001BF0  EF04  F00E         	goto	l3389
  5337  001BF4                     u3550:
  5338  001BF4  0E00               	movlw	0
  5339  001BF6  6E01               	movwf	?___fladd^0,c
  5340  001BF8  0E00               	movlw	0
  5341  001BFA  6E02               	movwf	(?___fladd+1)^0,c
  5342  001BFC  0E00               	movlw	0
  5343  001BFE  6E03               	movwf	(?___fladd+2)^0,c
  5344  001C00  0E00               	movlw	0
  5345  001C02  6E04               	movwf	(?___fladd+3)^0,c
  5346  001C04  EF53  F00F         	goto	l758
  5347  001C08                     l3389:
  5348  001C08  5005               	movf	___fladd@a^0,w,c
  5349  001C0A  2601               	addwf	___fladd@b^0,f,c
  5350  001C0C  5006               	movf	(___fladd@a+1)^0,w,c
  5351  001C0E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5352  001C10  5007               	movf	(___fladd@a+2)^0,w,c
  5353  001C12  2203               	addwfc	(___fladd@b+2)^0,f,c
  5354  001C14  5008               	movf	(___fladd@a+3)^0,w,c
  5355  001C16  2204               	addwfc	(___fladd@b+3)^0,f,c
  5356  001C18  A004               	btfss	(___fladd@b+3)^0,0,c
  5357  001C1A  EF11  F00E         	goto	u3561
  5358  001C1E  EF13  F00E         	goto	u3560
  5359  001C22                     u3561:
  5360  001C22  EFBF  F00E         	goto	l3443
  5361  001C26                     u3560:
  5362  001C26  A010               	btfss	___fladd@grs^0,0,c
  5363  001C28  EF18  F00E         	goto	u3571
  5364  001C2C  EF1A  F00E         	goto	u3570
  5365  001C30                     u3571:
  5366  001C30  EF20  F00E         	goto	l3397
  5367  001C34                     u3570:
  5368  001C34  90D8               	bcf	status,0,c
  5369  001C36  3010               	rrcf	___fladd@grs^0,w,c
  5370  001C38  0901               	iorlw	1
  5371  001C3A  6E10               	movwf	___fladd@grs^0,c
  5372  001C3C  EF22  F00E         	goto	l3399
  5373  001C40                     l3397:
  5374  001C40  90D8               	bcf	status,0,c
  5375  001C42  3210               	rrcf	___fladd@grs^0,f,c
  5376  001C44                     l3399:
  5377  001C44  A001               	btfss	___fladd@b^0,0,c
  5378  001C46  EF27  F00E         	goto	u3581
  5379  001C4A  EF29  F00E         	goto	u3580
  5380  001C4E                     u3581:
  5381  001C4E  EF2A  F00E         	goto	l3403
  5382  001C52                     u3580:
  5383  001C52  8E10               	bsf	___fladd@grs^0,7,c
  5384  001C54                     l3403:
  5385  001C54  3404               	rlcf	(___fladd@b+3)^0,w,c
  5386  001C56  3204               	rrcf	(___fladd@b+3)^0,f,c
  5387  001C58  3203               	rrcf	(___fladd@b+2)^0,f,c
  5388  001C5A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5389  001C5C  3201               	rrcf	___fladd@b^0,f,c
  5390  001C5E  2A0F               	incf	___fladd@bexp^0,f,c
  5391  001C60  EFBF  F00E         	goto	l3443
  5392  001C64                     l3407:
  5393  001C64  5005               	movf	___fladd@a^0,w,c
  5394  001C66  5C01               	subwf	___fladd@b^0,w,c
  5395  001C68  5006               	movf	(___fladd@a+1)^0,w,c
  5396  001C6A  5802               	subwfb	(___fladd@b+1)^0,w,c
  5397  001C6C  5007               	movf	(___fladd@a+2)^0,w,c
  5398  001C6E  5803               	subwfb	(___fladd@b+2)^0,w,c
  5399  001C70  5004               	movf	(___fladd@b+3)^0,w,c
  5400  001C72  0A80               	xorlw	128
  5401  001C74  6E09               	movwf	??___fladd^0,c
  5402  001C76  5008               	movf	(___fladd@a+3)^0,w,c
  5403  001C78  0A80               	xorlw	128
  5404  001C7A  5809               	subwfb	??___fladd^0,w,c
  5405  001C7C  B0D8               	btfsc	status,0,c
  5406  001C7E  EF43  F00E         	goto	u3591
  5407  001C82  EF45  F00E         	goto	u3590
  5408  001C86                     u3591:
  5409  001C86  EF70  F00E         	goto	l3417
  5410  001C8A                     u3590:
  5411  001C8A  5001               	movf	___fladd@b^0,w,c
  5412  001C8C  5C05               	subwf	___fladd@a^0,w,c
  5413  001C8E  6E09               	movwf	??___fladd^0,c
  5414  001C90  5002               	movf	(___fladd@b+1)^0,w,c
  5415  001C92  5806               	subwfb	(___fladd@a+1)^0,w,c
  5416  001C94  6E0A               	movwf	(??___fladd+1)^0,c
  5417  001C96  5003               	movf	(___fladd@b+2)^0,w,c
  5418  001C98  5807               	subwfb	(___fladd@a+2)^0,w,c
  5419  001C9A  6E0B               	movwf	(??___fladd+2)^0,c
  5420  001C9C  5004               	movf	(___fladd@b+3)^0,w,c
  5421  001C9E  5808               	subwfb	(___fladd@a+3)^0,w,c
  5422  001CA0  6E0C               	movwf	(??___fladd+3)^0,c
  5423  001CA2  0EFF               	movlw	255
  5424  001CA4  2409               	addwf	??___fladd^0,w,c
  5425  001CA6  6E01               	movwf	___fladd@b^0,c
  5426  001CA8  0EFF               	movlw	255
  5427  001CAA  200A               	addwfc	(??___fladd+1)^0,w,c
  5428  001CAC  6E02               	movwf	(___fladd@b+1)^0,c
  5429  001CAE  0EFF               	movlw	255
  5430  001CB0  200B               	addwfc	(??___fladd+2)^0,w,c
  5431  001CB2  6E03               	movwf	(___fladd@b+2)^0,c
  5432  001CB4  0EFF               	movlw	255
  5433  001CB6  200C               	addwfc	(??___fladd+3)^0,w,c
  5434  001CB8  6E04               	movwf	(___fladd@b+3)^0,c
  5435  001CBA  0E80               	movlw	128
  5436  001CBC  1A0D               	xorwf	___fladd@signs^0,f,c
  5437  001CBE  6C10               	negf	___fladd@grs^0,c
  5438  001CC0  5010               	movf	___fladd@grs^0,w,c
  5439  001CC2  A4D8               	btfss	status,2,c
  5440  001CC4  EF66  F00E         	goto	u3601
  5441  001CC8  EF68  F00E         	goto	u3600
  5442  001CCC                     u3601:
  5443  001CCC  EF78  F00E         	goto	l766
  5444  001CD0                     u3600:
  5445  001CD0  0E01               	movlw	1
  5446  001CD2  2601               	addwf	___fladd@b^0,f,c
  5447  001CD4  0E00               	movlw	0
  5448  001CD6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5449  001CD8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5450  001CDA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5451  001CDC  EF78  F00E         	goto	l766
  5452  001CE0                     l3417:
  5453  001CE0  5005               	movf	___fladd@a^0,w,c
  5454  001CE2  5E01               	subwf	___fladd@b^0,f,c
  5455  001CE4  5006               	movf	(___fladd@a+1)^0,w,c
  5456  001CE6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5457  001CE8  5007               	movf	(___fladd@a+2)^0,w,c
  5458  001CEA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5459  001CEC  5008               	movf	(___fladd@a+3)^0,w,c
  5460  001CEE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5461  001CF0                     l766:
  5462  001CF0  5001               	movf	___fladd@b^0,w,c
  5463  001CF2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5464  001CF4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5465  001CF6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5466  001CF8  A4D8               	btfss	status,2,c
  5467  001CFA  EF81  F00E         	goto	u3611
  5468  001CFE  EF83  F00E         	goto	u3610
  5469  001D02                     u3611:
  5470  001D02  EFB8  F00E         	goto	l3441
  5471  001D06                     u3610:
  5472  001D06  5010               	movf	___fladd@grs^0,w,c
  5473  001D08  A4D8               	btfss	status,2,c
  5474  001D0A  EF89  F00E         	goto	u3621
  5475  001D0E  EF8B  F00E         	goto	u3620
  5476  001D12                     u3621:
  5477  001D12  EFB8  F00E         	goto	l3441
  5478  001D16                     u3620:
  5479  001D16  0E00               	movlw	0
  5480  001D18  6E01               	movwf	?___fladd^0,c
  5481  001D1A  0E00               	movlw	0
  5482  001D1C  6E02               	movwf	(?___fladd+1)^0,c
  5483  001D1E  0E00               	movlw	0
  5484  001D20  6E03               	movwf	(?___fladd+2)^0,c
  5485  001D22  0E00               	movlw	0
  5486  001D24  6E04               	movwf	(?___fladd+3)^0,c
  5487  001D26  EF53  F00F         	goto	l758
  5488  001D2A                     l3425:
  5489  001D2A  90D8               	bcf	status,0,c
  5490  001D2C  3601               	rlcf	___fladd@b^0,f,c
  5491  001D2E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5492  001D30  3603               	rlcf	(___fladd@b+2)^0,f,c
  5493  001D32  3604               	rlcf	(___fladd@b+3)^0,f,c
  5494  001D34  AE10               	btfss	___fladd@grs^0,7,c
  5495  001D36  EF9F  F00E         	goto	u3631
  5496  001D3A  EFA1  F00E         	goto	u3630
  5497  001D3E                     u3631:
  5498  001D3E  EFA2  F00E         	goto	l3431
  5499  001D42                     u3630:
  5500  001D42  8001               	bsf	___fladd@b^0,0,c
  5501  001D44                     l3431:
  5502  001D44  A010               	btfss	___fladd@grs^0,0,c
  5503  001D46  EFA7  F00E         	goto	u3641
  5504  001D4A  EFA9  F00E         	goto	u3640
  5505  001D4E                     u3641:
  5506  001D4E  EFAD  F00E         	goto	l3435
  5507  001D52                     u3640:
  5508  001D52  80D8               	bsf	status,0,c
  5509  001D54  3610               	rlcf	___fladd@grs^0,f,c
  5510  001D56  EFAF  F00E         	goto	l3437
  5511  001D5A                     l3435:
  5512  001D5A  90D8               	bcf	status,0,c
  5513  001D5C  3610               	rlcf	___fladd@grs^0,f,c
  5514  001D5E                     l3437:
  5515  001D5E  500F               	movf	___fladd@bexp^0,w,c
  5516  001D60  B4D8               	btfsc	status,2,c
  5517  001D62  EFB5  F00E         	goto	u3651
  5518  001D66  EFB7  F00E         	goto	u3650
  5519  001D6A                     u3651:
  5520  001D6A  EFB8  F00E         	goto	l3441
  5521  001D6E                     u3650:
  5522  001D6E  060F               	decf	___fladd@bexp^0,f,c
  5523  001D70                     l3441:
  5524  001D70  AE03               	btfss	(___fladd@b+2)^0,7,c
  5525  001D72  EFBD  F00E         	goto	u3661
  5526  001D76  EFBF  F00E         	goto	u3660
  5527  001D7A                     u3661:
  5528  001D7A  EF95  F00E         	goto	l3425
  5529  001D7E                     u3660:
  5530  001D7E                     l3443:
  5531  001D7E  0E00               	movlw	0
  5532  001D80  6E0E               	movwf	___fladd@aexp^0,c
  5533  001D82  AE10               	btfss	___fladd@grs^0,7,c
  5534  001D84  EFC6  F00E         	goto	u3671
  5535  001D88  EFC8  F00E         	goto	u3670
  5536  001D8C                     u3671:
  5537  001D8C  EFE0  F00E         	goto	l775
  5538  001D90                     u3670:
  5539  001D90  C010  F009         	movff	___fladd@grs,??___fladd
  5540  001D94  0E7F               	movlw	127
  5541  001D96  1609               	andwf	??___fladd^0,f,c
  5542  001D98  B4D8               	btfsc	status,2,c
  5543  001D9A  EFD1  F00E         	goto	u3681
  5544  001D9E  EFD3  F00E         	goto	u3680
  5545  001DA2                     u3681:
  5546  001DA2  EFD7  F00E         	goto	l776
  5547  001DA6                     u3680:
  5548  001DA6                     l3449:
  5549  001DA6  0E01               	movlw	1
  5550  001DA8  6E0E               	movwf	___fladd@aexp^0,c
  5551  001DAA  EFE0  F00E         	goto	l775
  5552  001DAE                     l776:
  5553  001DAE  A001               	btfss	___fladd@b^0,0,c
  5554  001DB0  EFDC  F00E         	goto	u3691
  5555  001DB4  EFDE  F00E         	goto	u3690
  5556  001DB8                     u3691:
  5557  001DB8  EFE0  F00E         	goto	l775
  5558  001DBC                     u3690:
  5559  001DBC  EFD3  F00E         	goto	l3449
  5560  001DC0                     l775:
  5561  001DC0  500E               	movf	___fladd@aexp^0,w,c
  5562  001DC2  B4D8               	btfsc	status,2,c
  5563  001DC4  EFE6  F00E         	goto	u3701
  5564  001DC8  EFE8  F00E         	goto	u3700
  5565  001DCC                     u3701:
  5566  001DCC  EF13  F00F         	goto	l3461
  5567  001DD0                     u3700:
  5568  001DD0  0E01               	movlw	1
  5569  001DD2  2601               	addwf	___fladd@b^0,f,c
  5570  001DD4  0E00               	movlw	0
  5571  001DD6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5572  001DD8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5573  001DDA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5574  001DDC  A004               	btfss	(___fladd@b+3)^0,0,c
  5575  001DDE  EFF3  F00E         	goto	u3711
  5576  001DE2  EFF5  F00E         	goto	u3710
  5577  001DE6                     u3711:
  5578  001DE6  EF13  F00F         	goto	l3461
  5579  001DEA                     u3710:
  5580  001DEA  C001  F009         	movff	___fladd@b,??___fladd
  5581  001DEE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5582  001DF2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5583  001DF6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5584  001DFA  340C               	rlcf	(??___fladd+3)^0,w,c
  5585  001DFC  320C               	rrcf	(??___fladd+3)^0,f,c
  5586  001DFE  320B               	rrcf	(??___fladd+2)^0,f,c
  5587  001E00  320A               	rrcf	(??___fladd+1)^0,f,c
  5588  001E02  3209               	rrcf	??___fladd^0,f,c
  5589  001E04  C009  F001         	movff	??___fladd,___fladd@b
  5590  001E08  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5591  001E0C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5592  001E10  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5593  001E14  280F               	incf	___fladd@bexp^0,w,c
  5594  001E16  B4D8               	btfsc	status,2,c
  5595  001E18  EF10  F00F         	goto	u3721
  5596  001E1C  EF12  F00F         	goto	u3720
  5597  001E20                     u3721:
  5598  001E20  EF13  F00F         	goto	l3461
  5599  001E24                     u3720:
  5600  001E24  2A0F               	incf	___fladd@bexp^0,f,c
  5601  001E26                     l3461:
  5602  001E26  280F               	incf	___fladd@bexp^0,w,c
  5603  001E28  B4D8               	btfsc	status,2,c
  5604  001E2A  EF19  F00F         	goto	u3731
  5605  001E2E  EF1B  F00F         	goto	u3730
  5606  001E32                     u3731:
  5607  001E32  EF23  F00F         	goto	l3465
  5608  001E36                     u3730:
  5609  001E36  500F               	movf	___fladd@bexp^0,w,c
  5610  001E38  A4D8               	btfss	status,2,c
  5611  001E3A  EF21  F00F         	goto	u3741
  5612  001E3E  EF23  F00F         	goto	u3740
  5613  001E42                     u3741:
  5614  001E42  EF35  F00F         	goto	l3469
  5615  001E46                     u3740:
  5616  001E46                     l3465:
  5617  001E46  0E00               	movlw	0
  5618  001E48  6E01               	movwf	___fladd@b^0,c
  5619  001E4A  0E00               	movlw	0
  5620  001E4C  6E02               	movwf	(___fladd@b+1)^0,c
  5621  001E4E  0E00               	movlw	0
  5622  001E50  6E03               	movwf	(___fladd@b+2)^0,c
  5623  001E52  0E00               	movlw	0
  5624  001E54  6E04               	movwf	(___fladd@b+3)^0,c
  5625  001E56  500F               	movf	___fladd@bexp^0,w,c
  5626  001E58  A4D8               	btfss	status,2,c
  5627  001E5A  EF31  F00F         	goto	u3751
  5628  001E5E  EF33  F00F         	goto	u3750
  5629  001E62                     u3751:
  5630  001E62  EF35  F00F         	goto	l3469
  5631  001E66                     u3750:
  5632  001E66  0E00               	movlw	0
  5633  001E68  6E0D               	movwf	___fladd@signs^0,c
  5634  001E6A                     l3469:
  5635  001E6A  A00F               	btfss	___fladd@bexp^0,0,c
  5636  001E6C  EF3A  F00F         	goto	u3761
  5637  001E70  EF3C  F00F         	goto	u3760
  5638  001E74                     u3761:
  5639  001E74  EF3F  F00F         	goto	l3473
  5640  001E78                     u3760:
  5641  001E78  8E03               	bsf	(___fladd@b+2)^0,7,c
  5642  001E7A  EF40  F00F         	goto	l3475
  5643  001E7E                     l3473:
  5644  001E7E  9E03               	bcf	(___fladd@b+2)^0,7,c
  5645  001E80                     l3475:
  5646  001E80  90D8               	bcf	status,0,c
  5647  001E82  300F               	rrcf	___fladd@bexp^0,w,c
  5648  001E84  6E04               	movwf	(___fladd@b+3)^0,c
  5649  001E86  AE0D               	btfss	___fladd@signs^0,7,c
  5650  001E88  EF48  F00F         	goto	u3771
  5651  001E8C  EF4A  F00F         	goto	u3770
  5652  001E90                     u3771:
  5653  001E90  EF4B  F00F         	goto	l3481
  5654  001E94                     u3770:
  5655  001E94  8E04               	bsf	(___fladd@b+3)^0,7,c
  5656  001E96                     l3481:
  5657  001E96  C001  F001         	movff	___fladd@b,?___fladd
  5658  001E9A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5659  001E9E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5660  001EA2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5661  001EA6                     l758:
  5662  001EA6  0012               	return		;funcret
  5663  001EA8                     __end_of___fladd:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function ___flneg *****************
  5667 ;; Defined at:
  5668 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  f1              4    0[COMRAM] unsigned char 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  4    0[COMRAM] unsigned char 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5682 ;;      Params:         4       0       0       0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5685 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5686 ;;Total ram usage:        4 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_efgtoa
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text14
  5697  0046BE                     __ptext14:
  5698                           	callstack 0
  5699  0046BE                     ___flneg:
  5700                           	callstack 25
  5701  0046BE  5001               	movf	___flneg@f1^0,w,c
  5702  0046C0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5703  0046C2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5704  0046C4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5705  0046C6  B4D8               	btfsc	status,2,c
  5706  0046C8  EF68  F023         	goto	u4571
  5707  0046CC  EF6A  F023         	goto	u4570
  5708  0046D0                     u4571:
  5709  0046D0  EF72  F023         	goto	l3989
  5710  0046D4                     u4570:
  5711  0046D4  0E00               	movlw	0
  5712  0046D6  1A01               	xorwf	___flneg@f1^0,f,c
  5713  0046D8  0E00               	movlw	0
  5714  0046DA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5715  0046DC  0E00               	movlw	0
  5716  0046DE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5717  0046E0  0E80               	movlw	128
  5718  0046E2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5719  0046E4                     l3989:
  5720  0046E4  C001  F001         	movff	___flneg@f1,?___flneg
  5721  0046E8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5722  0046EC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5723  0046F0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5724  0046F4  0012               	return		;funcret
  5725  0046F6                     __end_of___flneg:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function ___flmul *****************
  5729 ;; Defined at:
  5730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  b               4    0[COMRAM] unsigned char 
  5733 ;;  a               4    4[COMRAM] unsigned char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  prod            4   19[COMRAM] struct .
  5736 ;;  grs             4   13[COMRAM] unsigned long 
  5737 ;;  temp            2   23[COMRAM] struct .
  5738 ;;  bexp            1   18[COMRAM] unsigned char 
  5739 ;;  aexp            1   17[COMRAM] unsigned char 
  5740 ;;  sign            1   12[COMRAM] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  4    0[COMRAM] unsigned char 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, prodl, prodh
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         8       0       0       0       0       0       0       0       0
  5751 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5752 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5753 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:       25 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_efgtoa
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text15
  5765  001EA8                     __ptext15:
  5766                           	callstack 0
  5767  001EA8                     ___flmul:
  5768                           	callstack 25
  5769  001EA8  5004               	movf	(___flmul@b+3)^0,w,c
  5770  001EAA  0B80               	andlw	128
  5771  001EAC  6E0D               	movwf	___flmul@sign^0,c
  5772  001EAE  5004               	movf	(___flmul@b+3)^0,w,c
  5773  001EB0  2404               	addwf	(___flmul@b+3)^0,w,c
  5774  001EB2  6E13               	movwf	___flmul@bexp^0,c
  5775  001EB4  AE03               	btfss	(___flmul@b+2)^0,7,c
  5776  001EB6  EF5F  F00F         	goto	u4181
  5777  001EBA  EF61  F00F         	goto	u4180
  5778  001EBE                     u4181:
  5779  001EBE  EF62  F00F         	goto	l3737
  5780  001EC2                     u4180:
  5781  001EC2  8013               	bsf	___flmul@bexp^0,0,c
  5782  001EC4                     l3737:
  5783  001EC4  5013               	movf	___flmul@bexp^0,w,c
  5784  001EC6  B4D8               	btfsc	status,2,c
  5785  001EC8  EF68  F00F         	goto	u4191
  5786  001ECC  EF6A  F00F         	goto	u4190
  5787  001ED0                     u4191:
  5788  001ED0  EF7D  F00F         	goto	l3745
  5789  001ED4                     u4190:
  5790  001ED4  2813               	incf	___flmul@bexp^0,w,c
  5791  001ED6  A4D8               	btfss	status,2,c
  5792  001ED8  EF70  F00F         	goto	u4201
  5793  001EDC  EF72  F00F         	goto	u4200
  5794  001EE0                     u4201:
  5795  001EE0  EF7A  F00F         	goto	l3743
  5796  001EE4                     u4200:
  5797  001EE4  0E00               	movlw	0
  5798  001EE6  6E01               	movwf	___flmul@b^0,c
  5799  001EE8  0E00               	movlw	0
  5800  001EEA  6E02               	movwf	(___flmul@b+1)^0,c
  5801  001EEC  0E00               	movlw	0
  5802  001EEE  6E03               	movwf	(___flmul@b+2)^0,c
  5803  001EF0  0E00               	movlw	0
  5804  001EF2  6E04               	movwf	(___flmul@b+3)^0,c
  5805  001EF4                     l3743:
  5806  001EF4  8E03               	bsf	(___flmul@b+2)^0,7,c
  5807  001EF6  EF85  F00F         	goto	l3747
  5808  001EFA                     l3745:
  5809  001EFA  0E00               	movlw	0
  5810  001EFC  6E01               	movwf	___flmul@b^0,c
  5811  001EFE  0E00               	movlw	0
  5812  001F00  6E02               	movwf	(___flmul@b+1)^0,c
  5813  001F02  0E00               	movlw	0
  5814  001F04  6E03               	movwf	(___flmul@b+2)^0,c
  5815  001F06  0E00               	movlw	0
  5816  001F08  6E04               	movwf	(___flmul@b+3)^0,c
  5817  001F0A                     l3747:
  5818  001F0A  5008               	movf	(___flmul@a+3)^0,w,c
  5819  001F0C  0B80               	andlw	128
  5820  001F0E  1A0D               	xorwf	___flmul@sign^0,f,c
  5821  001F10  5008               	movf	(___flmul@a+3)^0,w,c
  5822  001F12  2408               	addwf	(___flmul@a+3)^0,w,c
  5823  001F14  6E12               	movwf	___flmul@aexp^0,c
  5824  001F16  AE07               	btfss	(___flmul@a+2)^0,7,c
  5825  001F18  EF90  F00F         	goto	u4211
  5826  001F1C  EF92  F00F         	goto	u4210
  5827  001F20                     u4211:
  5828  001F20  EF93  F00F         	goto	l3755
  5829  001F24                     u4210:
  5830  001F24  8012               	bsf	___flmul@aexp^0,0,c
  5831  001F26                     l3755:
  5832  001F26  5012               	movf	___flmul@aexp^0,w,c
  5833  001F28  B4D8               	btfsc	status,2,c
  5834  001F2A  EF99  F00F         	goto	u4221
  5835  001F2E  EF9B  F00F         	goto	u4220
  5836  001F32                     u4221:
  5837  001F32  EFAE  F00F         	goto	l3763
  5838  001F36                     u4220:
  5839  001F36  2812               	incf	___flmul@aexp^0,w,c
  5840  001F38  A4D8               	btfss	status,2,c
  5841  001F3A  EFA1  F00F         	goto	u4231
  5842  001F3E  EFA3  F00F         	goto	u4230
  5843  001F42                     u4231:
  5844  001F42  EFAB  F00F         	goto	l3761
  5845  001F46                     u4230:
  5846  001F46  0E00               	movlw	0
  5847  001F48  6E05               	movwf	___flmul@a^0,c
  5848  001F4A  0E00               	movlw	0
  5849  001F4C  6E06               	movwf	(___flmul@a+1)^0,c
  5850  001F4E  0E00               	movlw	0
  5851  001F50  6E07               	movwf	(___flmul@a+2)^0,c
  5852  001F52  0E00               	movlw	0
  5853  001F54  6E08               	movwf	(___flmul@a+3)^0,c
  5854  001F56                     l3761:
  5855  001F56  8E07               	bsf	(___flmul@a+2)^0,7,c
  5856  001F58  EFB6  F00F         	goto	l835
  5857  001F5C                     l3763:
  5858  001F5C  0E00               	movlw	0
  5859  001F5E  6E05               	movwf	___flmul@a^0,c
  5860  001F60  0E00               	movlw	0
  5861  001F62  6E06               	movwf	(___flmul@a+1)^0,c
  5862  001F64  0E00               	movlw	0
  5863  001F66  6E07               	movwf	(___flmul@a+2)^0,c
  5864  001F68  0E00               	movlw	0
  5865  001F6A  6E08               	movwf	(___flmul@a+3)^0,c
  5866  001F6C                     l835:
  5867  001F6C  5012               	movf	___flmul@aexp^0,w,c
  5868  001F6E  B4D8               	btfsc	status,2,c
  5869  001F70  EFBC  F00F         	goto	u4241
  5870  001F74  EFBE  F00F         	goto	u4240
  5871  001F78                     u4241:
  5872  001F78  EFC6  F00F         	goto	l3767
  5873  001F7C                     u4240:
  5874  001F7C  5013               	movf	___flmul@bexp^0,w,c
  5875  001F7E  A4D8               	btfss	status,2,c
  5876  001F80  EFC4  F00F         	goto	u4251
  5877  001F84  EFC6  F00F         	goto	u4250
  5878  001F88                     u4251:
  5879  001F88  EFD0  F00F         	goto	l3771
  5880  001F8C                     u4250:
  5881  001F8C                     l3767:
  5882  001F8C  0E00               	movlw	0
  5883  001F8E  6E01               	movwf	?___flmul^0,c
  5884  001F90  0E00               	movlw	0
  5885  001F92  6E02               	movwf	(?___flmul+1)^0,c
  5886  001F94  0E00               	movlw	0
  5887  001F96  6E03               	movwf	(?___flmul+2)^0,c
  5888  001F98  0E00               	movlw	0
  5889  001F9A  6E04               	movwf	(?___flmul+3)^0,c
  5890  001F9C  EF68  F011         	goto	l839
  5891  001FA0                     l3771:
  5892  001FA0  5007               	movf	(___flmul@a+2)^0,w,c
  5893  001FA2  0201               	mulwf	___flmul@b^0,c
  5894  001FA4  CFF3 F018          	movff	prodl,___flmul@temp
  5895  001FA8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5896  001FAC  5018               	movf	___flmul@temp^0,w,c
  5897  001FAE  6E0E               	movwf	___flmul@grs^0,c
  5898  001FB0  6A0F               	clrf	(___flmul@grs+1)^0,c
  5899  001FB2  6A10               	clrf	(___flmul@grs+2)^0,c
  5900  001FB4  6A11               	clrf	(___flmul@grs+3)^0,c
  5901  001FB6  5019               	movf	(___flmul@temp+1)^0,w,c
  5902  001FB8  6E14               	movwf	___flmul@prod^0,c
  5903  001FBA  6A15               	clrf	(___flmul@prod+1)^0,c
  5904  001FBC  6A16               	clrf	(___flmul@prod+2)^0,c
  5905  001FBE  6A17               	clrf	(___flmul@prod+3)^0,c
  5906  001FC0  5006               	movf	(___flmul@a+1)^0,w,c
  5907  001FC2  0202               	mulwf	(___flmul@b+1)^0,c
  5908  001FC4  CFF3 F018          	movff	prodl,___flmul@temp
  5909  001FC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5910  001FCC  5018               	movf	___flmul@temp^0,w,c
  5911  001FCE  260E               	addwf	___flmul@grs^0,f,c
  5912  001FD0  0E00               	movlw	0
  5913  001FD2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5914  001FD4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5915  001FD6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5916  001FD8  5019               	movf	(___flmul@temp+1)^0,w,c
  5917  001FDA  2614               	addwf	___flmul@prod^0,f,c
  5918  001FDC  0E00               	movlw	0
  5919  001FDE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5920  001FE0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5921  001FE2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5922  001FE4  5005               	movf	___flmul@a^0,w,c
  5923  001FE6  0203               	mulwf	(___flmul@b+2)^0,c
  5924  001FE8  CFF3 F018          	movff	prodl,___flmul@temp
  5925  001FEC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5926  001FF0  5018               	movf	___flmul@temp^0,w,c
  5927  001FF2  260E               	addwf	___flmul@grs^0,f,c
  5928  001FF4  0E00               	movlw	0
  5929  001FF6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5930  001FF8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5931  001FFA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5932  001FFC  5019               	movf	(___flmul@temp+1)^0,w,c
  5933  001FFE  2614               	addwf	___flmul@prod^0,f,c
  5934  002000  0E00               	movlw	0
  5935  002002  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5936  002004  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5937  002006  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5938  002008  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5939  00200C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5940  002010  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5941  002014  6A0E               	clrf	___flmul@grs^0,c
  5942  002016  5005               	movf	___flmul@a^0,w,c
  5943  002018  0202               	mulwf	(___flmul@b+1)^0,c
  5944  00201A  CFF3 F018          	movff	prodl,___flmul@temp
  5945  00201E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5946  002022  5018               	movf	___flmul@temp^0,w,c
  5947  002024  260E               	addwf	___flmul@grs^0,f,c
  5948  002026  5019               	movf	(___flmul@temp+1)^0,w,c
  5949  002028  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5950  00202A  0E00               	movlw	0
  5951  00202C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5952  00202E  0E00               	movlw	0
  5953  002030  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5954  002032  5006               	movf	(___flmul@a+1)^0,w,c
  5955  002034  0201               	mulwf	___flmul@b^0,c
  5956  002036  CFF3 F018          	movff	prodl,___flmul@temp
  5957  00203A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5958  00203E  5018               	movf	___flmul@temp^0,w,c
  5959  002040  260E               	addwf	___flmul@grs^0,f,c
  5960  002042  5019               	movf	(___flmul@temp+1)^0,w,c
  5961  002044  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5962  002046  0E00               	movlw	0
  5963  002048  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5964  00204A  0E00               	movlw	0
  5965  00204C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5966  00204E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5967  002052  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5968  002056  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5969  00205A  6A0E               	clrf	___flmul@grs^0,c
  5970  00205C  5005               	movf	___flmul@a^0,w,c
  5971  00205E  0201               	mulwf	___flmul@b^0,c
  5972  002060  CFF3 F018          	movff	prodl,___flmul@temp
  5973  002064  CFF4 F019          	movff	prodh,___flmul@temp+1
  5974  002068  5018               	movf	___flmul@temp^0,w,c
  5975  00206A  260E               	addwf	___flmul@grs^0,f,c
  5976  00206C  5019               	movf	(___flmul@temp+1)^0,w,c
  5977  00206E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5978  002070  0E00               	movlw	0
  5979  002072  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5980  002074  0E00               	movlw	0
  5981  002076  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5982  002078  5007               	movf	(___flmul@a+2)^0,w,c
  5983  00207A  0202               	mulwf	(___flmul@b+1)^0,c
  5984  00207C  CFF3 F018          	movff	prodl,___flmul@temp
  5985  002080  CFF4 F019          	movff	prodh,___flmul@temp+1
  5986  002084  5018               	movf	___flmul@temp^0,w,c
  5987  002086  2614               	addwf	___flmul@prod^0,f,c
  5988  002088  5019               	movf	(___flmul@temp+1)^0,w,c
  5989  00208A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5990  00208C  0E00               	movlw	0
  5991  00208E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5992  002090  0E00               	movlw	0
  5993  002092  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5994  002094  5006               	movf	(___flmul@a+1)^0,w,c
  5995  002096  0203               	mulwf	(___flmul@b+2)^0,c
  5996  002098  CFF3 F018          	movff	prodl,___flmul@temp
  5997  00209C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5998  0020A0  5018               	movf	___flmul@temp^0,w,c
  5999  0020A2  2614               	addwf	___flmul@prod^0,f,c
  6000  0020A4  5019               	movf	(___flmul@temp+1)^0,w,c
  6001  0020A6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6002  0020A8  0E00               	movlw	0
  6003  0020AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6004  0020AC  0E00               	movlw	0
  6005  0020AE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6006  0020B0  5007               	movf	(___flmul@a+2)^0,w,c
  6007  0020B2  0203               	mulwf	(___flmul@b+2)^0,c
  6008  0020B4  CFF3 F018          	movff	prodl,___flmul@temp
  6009  0020B8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6010  0020BC  5018               	movf	___flmul@temp^0,w,c
  6011  0020BE  6E09               	movwf	??___flmul^0,c
  6012  0020C0  5019               	movf	(___flmul@temp+1)^0,w,c
  6013  0020C2  6E0A               	movwf	(??___flmul+1)^0,c
  6014  0020C4  6A0B               	clrf	(??___flmul+2)^0,c
  6015  0020C6  6A0C               	clrf	(??___flmul+3)^0,c
  6016  0020C8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6017  0020CC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6018  0020D0  C009  F00A         	movff	??___flmul,??___flmul+1
  6019  0020D4  6A09               	clrf	??___flmul^0,c
  6020  0020D6  5009               	movf	??___flmul^0,w,c
  6021  0020D8  2614               	addwf	___flmul@prod^0,f,c
  6022  0020DA  500A               	movf	(??___flmul+1)^0,w,c
  6023  0020DC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6024  0020DE  500B               	movf	(??___flmul+2)^0,w,c
  6025  0020E0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6026  0020E2  500C               	movf	(??___flmul+3)^0,w,c
  6027  0020E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6028  0020E6  C00E  F009         	movff	___flmul@grs,??___flmul
  6029  0020EA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6030  0020EE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6031  0020F2  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6032  0020F6  0E19               	movlw	25
  6033  0020F8  EF83  F010         	goto	u4260
  6034  0020FC                     u4265:
  6035  0020FC  90D8               	bcf	status,0,c
  6036  0020FE  320C               	rrcf	(??___flmul+3)^0,f,c
  6037  002100  320B               	rrcf	(??___flmul+2)^0,f,c
  6038  002102  320A               	rrcf	(??___flmul+1)^0,f,c
  6039  002104  3209               	rrcf	??___flmul^0,f,c
  6040  002106                     u4260:
  6041  002106  2EE8               	decfsz	wreg,f,c
  6042  002108  EF7E  F010         	goto	u4265
  6043  00210C  5009               	movf	??___flmul^0,w,c
  6044  00210E  2614               	addwf	___flmul@prod^0,f,c
  6045  002110  500A               	movf	(??___flmul+1)^0,w,c
  6046  002112  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6047  002114  500B               	movf	(??___flmul+2)^0,w,c
  6048  002116  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6049  002118  500C               	movf	(??___flmul+3)^0,w,c
  6050  00211A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6051  00211C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6052  002120  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6053  002124  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6054  002128  6A0E               	clrf	___flmul@grs^0,c
  6055  00212A  5012               	movf	___flmul@aexp^0,w,c
  6056  00212C  C013  F009         	movff	___flmul@bexp,??___flmul
  6057  002130  6A0A               	clrf	(??___flmul+1)^0,c
  6058  002132  2609               	addwf	??___flmul^0,f,c
  6059  002134  0E00               	movlw	0
  6060  002136  220A               	addwfc	(??___flmul+1)^0,f,c
  6061  002138  0E82               	movlw	130
  6062  00213A  2409               	addwf	??___flmul^0,w,c
  6063  00213C  6E18               	movwf	___flmul@temp^0,c
  6064  00213E  0EFF               	movlw	255
  6065  002140  200A               	addwfc	(??___flmul+1)^0,w,c
  6066  002142  6E19               	movwf	(___flmul@temp+1)^0,c
  6067  002144  EFB9  F010         	goto	l3819
  6068  002148                     l3813:
  6069  002148  90D8               	bcf	status,0,c
  6070  00214A  3614               	rlcf	___flmul@prod^0,f,c
  6071  00214C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6072  00214E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6073  002150  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6074  002152  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6075  002154  EFAE  F010         	goto	u4271
  6076  002158  EFB0  F010         	goto	u4270
  6077  00215C                     u4271:
  6078  00215C  EFB1  F010         	goto	l842
  6079  002160                     u4270:
  6080  002160  8014               	bsf	___flmul@prod^0,0,c
  6081  002162                     l842:
  6082  002162  90D8               	bcf	status,0,c
  6083  002164  360E               	rlcf	___flmul@grs^0,f,c
  6084  002166  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6085  002168  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6086  00216A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6087  00216C  0618               	decf	___flmul@temp^0,f,c
  6088  00216E  A0D8               	btfss	status,0,c
  6089  002170  0619               	decf	(___flmul@temp+1)^0,f,c
  6090  002172                     l3819:
  6091  002172  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6092  002174  EFBE  F010         	goto	u4281
  6093  002178  EFC0  F010         	goto	u4280
  6094  00217C                     u4281:
  6095  00217C  EFA4  F010         	goto	l3813
  6096  002180                     u4280:
  6097  002180  0E00               	movlw	0
  6098  002182  6E12               	movwf	___flmul@aexp^0,c
  6099  002184  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6100  002186  EFC7  F010         	goto	u4291
  6101  00218A  EFC9  F010         	goto	u4290
  6102  00218E                     u4291:
  6103  00218E  EFED  F010         	goto	l844
  6104  002192                     u4290:
  6105  002192  0EFF               	movlw	255
  6106  002194  140E               	andwf	___flmul@grs^0,w,c
  6107  002196  6E09               	movwf	??___flmul^0,c
  6108  002198  0EFF               	movlw	255
  6109  00219A  140F               	andwf	(___flmul@grs+1)^0,w,c
  6110  00219C  6E0A               	movwf	(??___flmul+1)^0,c
  6111  00219E  0EFF               	movlw	255
  6112  0021A0  1410               	andwf	(___flmul@grs+2)^0,w,c
  6113  0021A2  6E0B               	movwf	(??___flmul+2)^0,c
  6114  0021A4  0E7F               	movlw	127
  6115  0021A6  1411               	andwf	(___flmul@grs+3)^0,w,c
  6116  0021A8  6E0C               	movwf	(??___flmul+3)^0,c
  6117  0021AA  5009               	movf	??___flmul^0,w,c
  6118  0021AC  100A               	iorwf	(??___flmul+1)^0,w,c
  6119  0021AE  100B               	iorwf	(??___flmul+2)^0,w,c
  6120  0021B0  100C               	iorwf	(??___flmul+3)^0,w,c
  6121  0021B2  B4D8               	btfsc	status,2,c
  6122  0021B4  EFDE  F010         	goto	u4301
  6123  0021B8  EFE0  F010         	goto	u4300
  6124  0021BC                     u4301:
  6125  0021BC  EFE4  F010         	goto	l845
  6126  0021C0                     u4300:
  6127  0021C0                     l3827:
  6128  0021C0  0E01               	movlw	1
  6129  0021C2  6E12               	movwf	___flmul@aexp^0,c
  6130  0021C4  EFED  F010         	goto	l844
  6131  0021C8                     l845:
  6132  0021C8  A014               	btfss	___flmul@prod^0,0,c
  6133  0021CA  EFE9  F010         	goto	u4311
  6134  0021CE  EFEB  F010         	goto	u4310
  6135  0021D2                     u4311:
  6136  0021D2  EFED  F010         	goto	l844
  6137  0021D6                     u4310:
  6138  0021D6  EFE0  F010         	goto	l3827
  6139  0021DA                     l844:
  6140  0021DA  5012               	movf	___flmul@aexp^0,w,c
  6141  0021DC  B4D8               	btfsc	status,2,c
  6142  0021DE  EFF3  F010         	goto	u4321
  6143  0021E2  EFF5  F010         	goto	u4320
  6144  0021E6                     u4321:
  6145  0021E6  EF19  F011         	goto	l3839
  6146  0021EA                     u4320:
  6147  0021EA  0E01               	movlw	1
  6148  0021EC  2614               	addwf	___flmul@prod^0,f,c
  6149  0021EE  0E00               	movlw	0
  6150  0021F0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6151  0021F2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6152  0021F4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6153  0021F6  A017               	btfss	(___flmul@prod+3)^0,0,c
  6154  0021F8  EF00  F011         	goto	u4331
  6155  0021FC  EF02  F011         	goto	u4330
  6156  002200                     u4331:
  6157  002200  EF19  F011         	goto	l3839
  6158  002204                     u4330:
  6159  002204  C014  F009         	movff	___flmul@prod,??___flmul
  6160  002208  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6161  00220C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6162  002210  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6163  002214  340C               	rlcf	(??___flmul+3)^0,w,c
  6164  002216  320C               	rrcf	(??___flmul+3)^0,f,c
  6165  002218  320B               	rrcf	(??___flmul+2)^0,f,c
  6166  00221A  320A               	rrcf	(??___flmul+1)^0,f,c
  6167  00221C  3209               	rrcf	??___flmul^0,f,c
  6168  00221E  C009  F014         	movff	??___flmul,___flmul@prod
  6169  002222  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6170  002226  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6171  00222A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6172  00222E  4A18               	infsnz	___flmul@temp^0,f,c
  6173  002230  2A19               	incf	(___flmul@temp+1)^0,f,c
  6174  002232                     l3839:
  6175  002232  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6176  002234  EF24  F011         	goto	u4341
  6177  002238  5019               	movf	(___flmul@temp+1)^0,w,c
  6178  00223A  E108               	bnz	u4340
  6179  00223C  2818               	incf	___flmul@temp^0,w,c
  6180  00223E  A0D8               	btfss	status,0,c
  6181  002240  EF24  F011         	goto	u4341
  6182  002244  EF26  F011         	goto	u4340
  6183  002248                     u4341:
  6184  002248  EF30  F011         	goto	l3843
  6185  00224C                     u4340:
  6186  00224C  0E00               	movlw	0
  6187  00224E  6E14               	movwf	___flmul@prod^0,c
  6188  002250  0E00               	movlw	0
  6189  002252  6E15               	movwf	(___flmul@prod+1)^0,c
  6190  002254  0E80               	movlw	128
  6191  002256  6E16               	movwf	(___flmul@prod+2)^0,c
  6192  002258  0E7F               	movlw	127
  6193  00225A  6E17               	movwf	(___flmul@prod+3)^0,c
  6194  00225C  EF5E  F011         	goto	l3855
  6195  002260                     l3843:
  6196  002260  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6197  002262  EF3D  F011         	goto	u4350
  6198  002266  5019               	movf	(___flmul@temp+1)^0,w,c
  6199  002268  E106               	bnz	u4351
  6200  00226A  0418               	decf	___flmul@temp^0,w,c
  6201  00226C  B0D8               	btfsc	status,0,c
  6202  00226E  EF3B  F011         	goto	u4351
  6203  002272  EF3D  F011         	goto	u4350
  6204  002276                     u4351:
  6205  002276  EF49  F011         	goto	l852
  6206  00227A                     u4350:
  6207  00227A  0E00               	movlw	0
  6208  00227C  6E14               	movwf	___flmul@prod^0,c
  6209  00227E  0E00               	movlw	0
  6210  002280  6E15               	movwf	(___flmul@prod+1)^0,c
  6211  002282  0E00               	movlw	0
  6212  002284  6E16               	movwf	(___flmul@prod+2)^0,c
  6213  002286  0E00               	movlw	0
  6214  002288  6E17               	movwf	(___flmul@prod+3)^0,c
  6215  00228A  0E00               	movlw	0
  6216  00228C  6E0D               	movwf	___flmul@sign^0,c
  6217  00228E  EF5E  F011         	goto	l3855
  6218  002292                     l852:
  6219  002292  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6220  002296  0EFF               	movlw	255
  6221  002298  1614               	andwf	___flmul@prod^0,f,c
  6222  00229A  0EFF               	movlw	255
  6223  00229C  1615               	andwf	(___flmul@prod+1)^0,f,c
  6224  00229E  0E7F               	movlw	127
  6225  0022A0  1616               	andwf	(___flmul@prod+2)^0,f,c
  6226  0022A2  0E00               	movlw	0
  6227  0022A4  1617               	andwf	(___flmul@prod+3)^0,f,c
  6228  0022A6  A013               	btfss	___flmul@bexp^0,0,c
  6229  0022A8  EF58  F011         	goto	u4361
  6230  0022AC  EF5A  F011         	goto	u4360
  6231  0022B0                     u4361:
  6232  0022B0  EF5B  F011         	goto	l3853
  6233  0022B4                     u4360:
  6234  0022B4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6235  0022B6                     l3853:
  6236  0022B6  90D8               	bcf	status,0,c
  6237  0022B8  3013               	rrcf	___flmul@bexp^0,w,c
  6238  0022BA  6E17               	movwf	(___flmul@prod+3)^0,c
  6239  0022BC                     l3855:
  6240  0022BC  500D               	movf	___flmul@sign^0,w,c
  6241  0022BE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6242  0022C0  C014  F001         	movff	___flmul@prod,?___flmul
  6243  0022C4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6244  0022C8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6245  0022CC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6246  0022D0                     l839:
  6247  0022D0  0012               	return		;funcret
  6248  0022D2                     __end_of___flmul:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function ___flge *****************
  6252 ;; Defined at:
  6253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  ff1             4   25[COMRAM] unsigned char 
  6256 ;;  ff2             4   29[COMRAM] unsigned char 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;		None               void
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6268 ;;      Params:         8       0       0       0       0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6270 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6271 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6272 ;;Total ram usage:       12 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_efgtoa
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text16
  6283  003BAC                     __ptext16:
  6284                           	callstack 0
  6285  003BAC                     ___flge:
  6286                           	callstack 25
  6287  003BAC  0E00               	movlw	0
  6288  003BAE  141A               	andwf	___flge@ff1^0,w,c
  6289  003BB0  6E22               	movwf	??___flge^0,c
  6290  003BB2  0E00               	movlw	0
  6291  003BB4  141B               	andwf	(___flge@ff1+1)^0,w,c
  6292  003BB6  6E23               	movwf	(??___flge+1)^0,c
  6293  003BB8  0E80               	movlw	128
  6294  003BBA  141C               	andwf	(___flge@ff1+2)^0,w,c
  6295  003BBC  6E24               	movwf	(??___flge+2)^0,c
  6296  003BBE  0E7F               	movlw	127
  6297  003BC0  141D               	andwf	(___flge@ff1+3)^0,w,c
  6298  003BC2  6E25               	movwf	(??___flge+3)^0,c
  6299  003BC4  5022               	movf	??___flge^0,w,c
  6300  003BC6  1023               	iorwf	(??___flge+1)^0,w,c
  6301  003BC8  1024               	iorwf	(??___flge+2)^0,w,c
  6302  003BCA  1025               	iorwf	(??___flge+3)^0,w,c
  6303  003BCC  A4D8               	btfss	status,2,c
  6304  003BCE  EFEB  F01D         	goto	u4521
  6305  003BD2  EFED  F01D         	goto	u4520
  6306  003BD6                     u4521:
  6307  003BD6  EFF5  F01D         	goto	l3967
  6308  003BDA                     u4520:
  6309  003BDA  0E00               	movlw	0
  6310  003BDC  6E1A               	movwf	___flge@ff1^0,c
  6311  003BDE  0E00               	movlw	0
  6312  003BE0  6E1B               	movwf	(___flge@ff1+1)^0,c
  6313  003BE2  0E00               	movlw	0
  6314  003BE4  6E1C               	movwf	(___flge@ff1+2)^0,c
  6315  003BE6  0E00               	movlw	0
  6316  003BE8  6E1D               	movwf	(___flge@ff1+3)^0,c
  6317  003BEA                     l3967:
  6318  003BEA  0E00               	movlw	0
  6319  003BEC  141E               	andwf	___flge@ff2^0,w,c
  6320  003BEE  6E22               	movwf	??___flge^0,c
  6321  003BF0  0E00               	movlw	0
  6322  003BF2  141F               	andwf	(___flge@ff2+1)^0,w,c
  6323  003BF4  6E23               	movwf	(??___flge+1)^0,c
  6324  003BF6  0E80               	movlw	128
  6325  003BF8  1420               	andwf	(___flge@ff2+2)^0,w,c
  6326  003BFA  6E24               	movwf	(??___flge+2)^0,c
  6327  003BFC  0E7F               	movlw	127
  6328  003BFE  1421               	andwf	(___flge@ff2+3)^0,w,c
  6329  003C00  6E25               	movwf	(??___flge+3)^0,c
  6330  003C02  5022               	movf	??___flge^0,w,c
  6331  003C04  1023               	iorwf	(??___flge+1)^0,w,c
  6332  003C06  1024               	iorwf	(??___flge+2)^0,w,c
  6333  003C08  1025               	iorwf	(??___flge+3)^0,w,c
  6334  003C0A  A4D8               	btfss	status,2,c
  6335  003C0C  EF0A  F01E         	goto	u4531
  6336  003C10  EF0C  F01E         	goto	u4530
  6337  003C14                     u4531:
  6338  003C14  EF14  F01E         	goto	l3971
  6339  003C18                     u4530:
  6340  003C18  0E00               	movlw	0
  6341  003C1A  6E1E               	movwf	___flge@ff2^0,c
  6342  003C1C  0E00               	movlw	0
  6343  003C1E  6E1F               	movwf	(___flge@ff2+1)^0,c
  6344  003C20  0E00               	movlw	0
  6345  003C22  6E20               	movwf	(___flge@ff2+2)^0,c
  6346  003C24  0E00               	movlw	0
  6347  003C26  6E21               	movwf	(___flge@ff2+3)^0,c
  6348  003C28                     l3971:
  6349  003C28  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6350  003C2A  EF19  F01E         	goto	u4541
  6351  003C2E  EF1B  F01E         	goto	u4540
  6352  003C32                     u4541:
  6353  003C32  EF24  F01E         	goto	l3975
  6354  003C36                     u4540:
  6355  003C36  6C1A               	negf	___flge@ff1^0,c
  6356  003C38  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6357  003C3A  B0D8               	btfsc	status,0,c
  6358  003C3C  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6359  003C3E  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6360  003C40  B0D8               	btfsc	status,0,c
  6361  003C42  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6362  003C44  0E80               	movlw	128
  6363  003C46  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6364  003C48                     l3975:
  6365  003C48  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6366  003C4A  EF29  F01E         	goto	u4551
  6367  003C4E  EF2B  F01E         	goto	u4550
  6368  003C52                     u4551:
  6369  003C52  EF34  F01E         	goto	l486
  6370  003C56                     u4550:
  6371  003C56  6C1E               	negf	___flge@ff2^0,c
  6372  003C58  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6373  003C5A  B0D8               	btfsc	status,0,c
  6374  003C5C  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6375  003C5E  1E20               	comf	(___flge@ff2+2)^0,f,c
  6376  003C60  B0D8               	btfsc	status,0,c
  6377  003C62  2A20               	incf	(___flge@ff2+2)^0,f,c
  6378  003C64  0E80               	movlw	128
  6379  003C66  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6380  003C68                     l486:
  6381  003C68  0E00               	movlw	0
  6382  003C6A  1A1A               	xorwf	___flge@ff1^0,f,c
  6383  003C6C  0E00               	movlw	0
  6384  003C6E  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6385  003C70  0E00               	movlw	0
  6386  003C72  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6387  003C74  0E80               	movlw	128
  6388  003C76  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6389  003C78  0E00               	movlw	0
  6390  003C7A  1A1E               	xorwf	___flge@ff2^0,f,c
  6391  003C7C  0E00               	movlw	0
  6392  003C7E  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6393  003C80  0E00               	movlw	0
  6394  003C82  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6395  003C84  0E80               	movlw	128
  6396  003C86  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6397  003C88  501E               	movf	___flge@ff2^0,w,c
  6398  003C8A  5C1A               	subwf	___flge@ff1^0,w,c
  6399  003C8C  501F               	movf	(___flge@ff2+1)^0,w,c
  6400  003C8E  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6401  003C90  5020               	movf	(___flge@ff2+2)^0,w,c
  6402  003C92  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6403  003C94  5021               	movf	(___flge@ff2+3)^0,w,c
  6404  003C96  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6405  003C98  B0D8               	btfsc	status,0,c
  6406  003C9A  EF51  F01E         	goto	u4561
  6407  003C9E  EF53  F01E         	goto	u4560
  6408  003CA2                     u4561:
  6409  003CA2  EF56  F01E         	goto	l3981
  6410  003CA6                     u4560:
  6411  003CA6  90D8               	bcf	status,0,c
  6412  003CA8  EF57  F01E         	goto	l491
  6413  003CAC                     l3981:
  6414  003CAC  80D8               	bsf	status,0,c
  6415  003CAE                     l491:
  6416  003CAE  0012               	return		;funcret
  6417  003CB0                     __end_of___flge:
  6418                           	callstack 0
  6419                           
  6420 ;; *************** function ___fleq *****************
  6421 ;; Defined at:
  6422 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  ff1             4    0[COMRAM] unsigned char 
  6425 ;;  ff2             4    4[COMRAM] unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6437 ;;      Params:         8       0       0       0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6439 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6440 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6441 ;;Total ram usage:       12 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_efgtoa
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text17
  6452  004188                     __ptext17:
  6453                           	callstack 0
  6454  004188                     ___fleq:
  6455                           	callstack 25
  6456  004188  0E00               	movlw	0
  6457  00418A  1401               	andwf	___fleq@ff1^0,w,c
  6458  00418C  6E09               	movwf	??___fleq^0,c
  6459  00418E  0E00               	movlw	0
  6460  004190  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6461  004192  6E0A               	movwf	(??___fleq+1)^0,c
  6462  004194  0E80               	movlw	128
  6463  004196  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6464  004198  6E0B               	movwf	(??___fleq+2)^0,c
  6465  00419A  0E7F               	movlw	127
  6466  00419C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6467  00419E  6E0C               	movwf	(??___fleq+3)^0,c
  6468  0041A0  5009               	movf	??___fleq^0,w,c
  6469  0041A2  100A               	iorwf	(??___fleq+1)^0,w,c
  6470  0041A4  100B               	iorwf	(??___fleq+2)^0,w,c
  6471  0041A6  100C               	iorwf	(??___fleq+3)^0,w,c
  6472  0041A8  A4D8               	btfss	status,2,c
  6473  0041AA  EFD9  F020         	goto	u4491
  6474  0041AE  EFDB  F020         	goto	u4490
  6475  0041B2                     u4491:
  6476  0041B2  EFE3  F020         	goto	l3951
  6477  0041B6                     u4490:
  6478  0041B6  0E00               	movlw	0
  6479  0041B8  6E01               	movwf	___fleq@ff1^0,c
  6480  0041BA  0E00               	movlw	0
  6481  0041BC  6E02               	movwf	(___fleq@ff1+1)^0,c
  6482  0041BE  0E00               	movlw	0
  6483  0041C0  6E03               	movwf	(___fleq@ff1+2)^0,c
  6484  0041C2  0E00               	movlw	0
  6485  0041C4  6E04               	movwf	(___fleq@ff1+3)^0,c
  6486  0041C6                     l3951:
  6487  0041C6  0E00               	movlw	0
  6488  0041C8  1405               	andwf	___fleq@ff2^0,w,c
  6489  0041CA  6E09               	movwf	??___fleq^0,c
  6490  0041CC  0E00               	movlw	0
  6491  0041CE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6492  0041D0  6E0A               	movwf	(??___fleq+1)^0,c
  6493  0041D2  0E80               	movlw	128
  6494  0041D4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6495  0041D6  6E0B               	movwf	(??___fleq+2)^0,c
  6496  0041D8  0E7F               	movlw	127
  6497  0041DA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6498  0041DC  6E0C               	movwf	(??___fleq+3)^0,c
  6499  0041DE  5009               	movf	??___fleq^0,w,c
  6500  0041E0  100A               	iorwf	(??___fleq+1)^0,w,c
  6501  0041E2  100B               	iorwf	(??___fleq+2)^0,w,c
  6502  0041E4  100C               	iorwf	(??___fleq+3)^0,w,c
  6503  0041E6  A4D8               	btfss	status,2,c
  6504  0041E8  EFF8  F020         	goto	u4501
  6505  0041EC  EFFA  F020         	goto	u4500
  6506  0041F0                     u4501:
  6507  0041F0  EF02  F021         	goto	l3955
  6508  0041F4                     u4500:
  6509  0041F4  0E00               	movlw	0
  6510  0041F6  6E05               	movwf	___fleq@ff2^0,c
  6511  0041F8  0E00               	movlw	0
  6512  0041FA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6513  0041FC  0E00               	movlw	0
  6514  0041FE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6515  004200  0E00               	movlw	0
  6516  004202  6E08               	movwf	(___fleq@ff2+3)^0,c
  6517  004204                     l3955:
  6518  004204  5005               	movf	___fleq@ff2^0,w,c
  6519  004206  1801               	xorwf	___fleq@ff1^0,w,c
  6520  004208  E10F               	bnz	u4510
  6521  00420A  5006               	movf	(___fleq@ff2+1)^0,w,c
  6522  00420C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6523  00420E  E10C               	bnz	u4510
  6524  004210  5007               	movf	(___fleq@ff2+2)^0,w,c
  6525  004212  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6526  004214  E109               	bnz	u4510
  6527  004216  5008               	movf	(___fleq@ff2+3)^0,w,c
  6528  004218  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6529  00421A  B4D8               	btfsc	status,2,c
  6530  00421C  EF12  F021         	goto	u4511
  6531  004220  EF14  F021         	goto	u4510
  6532  004224                     u4511:
  6533  004224  EF17  F021         	goto	l3959
  6534  004228                     u4510:
  6535  004228  90D8               	bcf	status,0,c
  6536  00422A  EF18  F021         	goto	l480
  6537  00422E                     l3959:
  6538  00422E  80D8               	bsf	status,0,c
  6539  004230                     l480:
  6540  004230  0012               	return		;funcret
  6541  004232                     __end_of___fleq:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function ___fldiv *****************
  6545 ;; Defined at:
  6546 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  b               4    0[COMRAM] unsigned char 
  6549 ;;  a               4    4[COMRAM] unsigned char 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  grs             4   19[COMRAM] unsigned long 
  6552 ;;  rem             4   12[COMRAM] unsigned long 
  6553 ;;  new_exp         2   17[COMRAM] short 
  6554 ;;  aexp            1   24[COMRAM] unsigned char 
  6555 ;;  bexp            1   23[COMRAM] unsigned char 
  6556 ;;  sign            1   16[COMRAM] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  4    0[COMRAM] unsigned char 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6566 ;;      Params:         8       0       0       0       0       0       0       0       0
  6567 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6568 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6569 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6570 ;;Total ram usage:       25 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    1
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_efgtoa
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text18
  6581  0022D2                     __ptext18:
  6582                           	callstack 0
  6583  0022D2                     ___fldiv:
  6584                           	callstack 25
  6585  0022D2  5004               	movf	(___fldiv@b+3)^0,w,c
  6586  0022D4  0B80               	andlw	128
  6587  0022D6  6E11               	movwf	___fldiv@sign^0,c
  6588  0022D8  5004               	movf	(___fldiv@b+3)^0,w,c
  6589  0022DA  2404               	addwf	(___fldiv@b+3)^0,w,c
  6590  0022DC  6E18               	movwf	___fldiv@bexp^0,c
  6591  0022DE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6592  0022E0  EF74  F011         	goto	u3951
  6593  0022E4  EF76  F011         	goto	u3950
  6594  0022E8                     u3951:
  6595  0022E8  EF77  F011         	goto	l3599
  6596  0022EC                     u3950:
  6597  0022EC  8018               	bsf	___fldiv@bexp^0,0,c
  6598  0022EE                     l3599:
  6599  0022EE  5018               	movf	___fldiv@bexp^0,w,c
  6600  0022F0  B4D8               	btfsc	status,2,c
  6601  0022F2  EF7D  F011         	goto	u3961
  6602  0022F6  EF7F  F011         	goto	u3960
  6603  0022FA                     u3961:
  6604  0022FA  EF94  F011         	goto	l3609
  6605  0022FE                     u3960:
  6606  0022FE  2818               	incf	___fldiv@bexp^0,w,c
  6607  002300  A4D8               	btfss	status,2,c
  6608  002302  EF85  F011         	goto	u3971
  6609  002306  EF87  F011         	goto	u3970
  6610  00230A                     u3971:
  6611  00230A  EF8F  F011         	goto	l3605
  6612  00230E                     u3970:
  6613  00230E  0E00               	movlw	0
  6614  002310  6E01               	movwf	___fldiv@b^0,c
  6615  002312  0E00               	movlw	0
  6616  002314  6E02               	movwf	(___fldiv@b+1)^0,c
  6617  002316  0E00               	movlw	0
  6618  002318  6E03               	movwf	(___fldiv@b+2)^0,c
  6619  00231A  0E00               	movlw	0
  6620  00231C  6E04               	movwf	(___fldiv@b+3)^0,c
  6621  00231E                     l3605:
  6622  00231E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6623  002320  0E00               	movlw	0
  6624  002322  6E04               	movwf	(___fldiv@b+3)^0,c
  6625  002324  EF9C  F011         	goto	l3611
  6626  002328                     l3609:
  6627  002328  0E00               	movlw	0
  6628  00232A  6E01               	movwf	___fldiv@b^0,c
  6629  00232C  0E00               	movlw	0
  6630  00232E  6E02               	movwf	(___fldiv@b+1)^0,c
  6631  002330  0E00               	movlw	0
  6632  002332  6E03               	movwf	(___fldiv@b+2)^0,c
  6633  002334  0E00               	movlw	0
  6634  002336  6E04               	movwf	(___fldiv@b+3)^0,c
  6635  002338                     l3611:
  6636  002338  5008               	movf	(___fldiv@a+3)^0,w,c
  6637  00233A  0B80               	andlw	128
  6638  00233C  1A11               	xorwf	___fldiv@sign^0,f,c
  6639  00233E  5008               	movf	(___fldiv@a+3)^0,w,c
  6640  002340  2408               	addwf	(___fldiv@a+3)^0,w,c
  6641  002342  6E19               	movwf	___fldiv@aexp^0,c
  6642  002344  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6643  002346  EFA7  F011         	goto	u3981
  6644  00234A  EFA9  F011         	goto	u3980
  6645  00234E                     u3981:
  6646  00234E  EFAA  F011         	goto	l3619
  6647  002352                     u3980:
  6648  002352  8019               	bsf	___fldiv@aexp^0,0,c
  6649  002354                     l3619:
  6650  002354  5019               	movf	___fldiv@aexp^0,w,c
  6651  002356  B4D8               	btfsc	status,2,c
  6652  002358  EFB0  F011         	goto	u3991
  6653  00235C  EFB2  F011         	goto	u3990
  6654  002360                     u3991:
  6655  002360  EFC7  F011         	goto	l3629
  6656  002364                     u3990:
  6657  002364  2819               	incf	___fldiv@aexp^0,w,c
  6658  002366  A4D8               	btfss	status,2,c
  6659  002368  EFB8  F011         	goto	u4001
  6660  00236C  EFBA  F011         	goto	u4000
  6661  002370                     u4001:
  6662  002370  EFC2  F011         	goto	l3625
  6663  002374                     u4000:
  6664  002374  0E00               	movlw	0
  6665  002376  6E05               	movwf	___fldiv@a^0,c
  6666  002378  0E00               	movlw	0
  6667  00237A  6E06               	movwf	(___fldiv@a+1)^0,c
  6668  00237C  0E00               	movlw	0
  6669  00237E  6E07               	movwf	(___fldiv@a+2)^0,c
  6670  002380  0E00               	movlw	0
  6671  002382  6E08               	movwf	(___fldiv@a+3)^0,c
  6672  002384                     l3625:
  6673  002384  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6674  002386  0E00               	movlw	0
  6675  002388  6E08               	movwf	(___fldiv@a+3)^0,c
  6676  00238A  EFCF  F011         	goto	l3631
  6677  00238E                     l3629:
  6678  00238E  0E00               	movlw	0
  6679  002390  6E05               	movwf	___fldiv@a^0,c
  6680  002392  0E00               	movlw	0
  6681  002394  6E06               	movwf	(___fldiv@a+1)^0,c
  6682  002396  0E00               	movlw	0
  6683  002398  6E07               	movwf	(___fldiv@a+2)^0,c
  6684  00239A  0E00               	movlw	0
  6685  00239C  6E08               	movwf	(___fldiv@a+3)^0,c
  6686  00239E                     l3631:
  6687  00239E  5005               	movf	___fldiv@a^0,w,c
  6688  0023A0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6689  0023A2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6690  0023A4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6691  0023A6  A4D8               	btfss	status,2,c
  6692  0023A8  EFD8  F011         	goto	u4011
  6693  0023AC  EFDA  F011         	goto	u4010
  6694  0023B0                     u4011:
  6695  0023B0  EFF2  F011         	goto	l3643
  6696  0023B4                     u4010:
  6697  0023B4  0E00               	movlw	0
  6698  0023B6  6E01               	movwf	___fldiv@b^0,c
  6699  0023B8  0E00               	movlw	0
  6700  0023BA  6E02               	movwf	(___fldiv@b+1)^0,c
  6701  0023BC  0E00               	movlw	0
  6702  0023BE  6E03               	movwf	(___fldiv@b+2)^0,c
  6703  0023C0  0E00               	movlw	0
  6704  0023C2  6E04               	movwf	(___fldiv@b+3)^0,c
  6705  0023C4  0E80               	movlw	128
  6706  0023C6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6707  0023C8  0E7F               	movlw	127
  6708  0023CA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6709  0023CC                     l3637:
  6710  0023CC  5011               	movf	___fldiv@sign^0,w,c
  6711  0023CE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6712  0023D0  C001  F001         	movff	___fldiv@b,?___fldiv
  6713  0023D4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6714  0023D8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6715  0023DC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6716  0023E0  EF35  F013         	goto	l803
  6717  0023E4                     l3643:
  6718  0023E4  5018               	movf	___fldiv@bexp^0,w,c
  6719  0023E6  A4D8               	btfss	status,2,c
  6720  0023E8  EFF8  F011         	goto	u4021
  6721  0023EC  EFFA  F011         	goto	u4020
  6722  0023F0                     u4021:
  6723  0023F0  EF04  F012         	goto	l3651
  6724  0023F4                     u4020:
  6725  0023F4  0E00               	movlw	0
  6726  0023F6  6E01               	movwf	?___fldiv^0,c
  6727  0023F8  0E00               	movlw	0
  6728  0023FA  6E02               	movwf	(?___fldiv+1)^0,c
  6729  0023FC  0E00               	movlw	0
  6730  0023FE  6E03               	movwf	(?___fldiv+2)^0,c
  6731  002400  0E00               	movlw	0
  6732  002402  6E04               	movwf	(?___fldiv+3)^0,c
  6733  002404  EF35  F013         	goto	l803
  6734  002408                     l3651:
  6735  002408  5019               	movf	___fldiv@aexp^0,w,c
  6736  00240A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6737  00240E  6A0A               	clrf	(??___fldiv+1)^0,c
  6738  002410  5E09               	subwf	??___fldiv^0,f,c
  6739  002412  0E00               	movlw	0
  6740  002414  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6741  002416  0E7F               	movlw	127
  6742  002418  2409               	addwf	??___fldiv^0,w,c
  6743  00241A  6E12               	movwf	___fldiv@new_exp^0,c
  6744  00241C  0E00               	movlw	0
  6745  00241E  200A               	addwfc	(??___fldiv+1)^0,w,c
  6746  002420  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6747  002422  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6748  002426  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6749  00242A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6750  00242E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6751  002432  0E00               	movlw	0
  6752  002434  6E01               	movwf	___fldiv@b^0,c
  6753  002436  0E00               	movlw	0
  6754  002438  6E02               	movwf	(___fldiv@b+1)^0,c
  6755  00243A  0E00               	movlw	0
  6756  00243C  6E03               	movwf	(___fldiv@b+2)^0,c
  6757  00243E  0E00               	movlw	0
  6758  002440  6E04               	movwf	(___fldiv@b+3)^0,c
  6759  002442  0E00               	movlw	0
  6760  002444  6E14               	movwf	___fldiv@grs^0,c
  6761  002446  0E00               	movlw	0
  6762  002448  6E15               	movwf	(___fldiv@grs+1)^0,c
  6763  00244A  0E00               	movlw	0
  6764  00244C  6E16               	movwf	(___fldiv@grs+2)^0,c
  6765  00244E  0E00               	movlw	0
  6766  002450  6E17               	movwf	(___fldiv@grs+3)^0,c
  6767  002452  0E00               	movlw	0
  6768  002454  6E19               	movwf	___fldiv@aexp^0,c
  6769  002456  EF65  F012         	goto	l805
  6770  00245A                     l3661:
  6771  00245A  5019               	movf	___fldiv@aexp^0,w,c
  6772  00245C  B4D8               	btfsc	status,2,c
  6773  00245E  EF33  F012         	goto	u4031
  6774  002462  EF35  F012         	goto	u4030
  6775  002466                     u4031:
  6776  002466  EF4C  F012         	goto	l3669
  6777  00246A                     u4030:
  6778  00246A  90D8               	bcf	status,0,c
  6779  00246C  360D               	rlcf	___fldiv@rem^0,f,c
  6780  00246E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6781  002470  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6782  002472  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6783  002474  90D8               	bcf	status,0,c
  6784  002476  3601               	rlcf	___fldiv@b^0,f,c
  6785  002478  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6786  00247A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6787  00247C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6788  00247E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6789  002480  EF44  F012         	goto	u4041
  6790  002484  EF46  F012         	goto	u4040
  6791  002488                     u4041:
  6792  002488  EF47  F012         	goto	l808
  6793  00248C                     u4040:
  6794  00248C  8001               	bsf	___fldiv@b^0,0,c
  6795  00248E                     l808:
  6796  00248E  90D8               	bcf	status,0,c
  6797  002490  3614               	rlcf	___fldiv@grs^0,f,c
  6798  002492  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6799  002494  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6800  002496  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6801  002498                     l3669:
  6802  002498  5005               	movf	___fldiv@a^0,w,c
  6803  00249A  5C0D               	subwf	___fldiv@rem^0,w,c
  6804  00249C  5006               	movf	(___fldiv@a+1)^0,w,c
  6805  00249E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6806  0024A0  5007               	movf	(___fldiv@a+2)^0,w,c
  6807  0024A2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6808  0024A4  5008               	movf	(___fldiv@a+3)^0,w,c
  6809  0024A6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6810  0024A8  A0D8               	btfss	status,0,c
  6811  0024AA  EF59  F012         	goto	u4051
  6812  0024AE  EF5B  F012         	goto	u4050
  6813  0024B2                     u4051:
  6814  0024B2  EF64  F012         	goto	l3675
  6815  0024B6                     u4050:
  6816  0024B6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6817  0024B8  5005               	movf	___fldiv@a^0,w,c
  6818  0024BA  5E0D               	subwf	___fldiv@rem^0,f,c
  6819  0024BC  5006               	movf	(___fldiv@a+1)^0,w,c
  6820  0024BE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6821  0024C0  5007               	movf	(___fldiv@a+2)^0,w,c
  6822  0024C2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6823  0024C4  5008               	movf	(___fldiv@a+3)^0,w,c
  6824  0024C6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6825  0024C8                     l3675:
  6826  0024C8  2A19               	incf	___fldiv@aexp^0,f,c
  6827  0024CA                     l805:
  6828  0024CA  0E19               	movlw	25
  6829  0024CC  6419               	cpfsgt	___fldiv@aexp^0,c
  6830  0024CE  EF6B  F012         	goto	u4061
  6831  0024D2  EF6D  F012         	goto	u4060
  6832  0024D6                     u4061:
  6833  0024D6  EF2D  F012         	goto	l3661
  6834  0024DA                     u4060:
  6835  0024DA  500D               	movf	___fldiv@rem^0,w,c
  6836  0024DC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6837  0024DE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6838  0024E0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6839  0024E2  B4D8               	btfsc	status,2,c
  6840  0024E4  EF76  F012         	goto	u4071
  6841  0024E8  EF78  F012         	goto	u4070
  6842  0024EC                     u4071:
  6843  0024EC  EF90  F012         	goto	l3687
  6844  0024F0                     u4070:
  6845  0024F0  8014               	bsf	___fldiv@grs^0,0,c
  6846  0024F2  EF90  F012         	goto	l3687
  6847  0024F6                     l3681:
  6848  0024F6  90D8               	bcf	status,0,c
  6849  0024F8  3601               	rlcf	___fldiv@b^0,f,c
  6850  0024FA  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6851  0024FC  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6852  0024FE  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6853  002500  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6854  002502  EF85  F012         	goto	u4081
  6855  002506  EF87  F012         	goto	u4080
  6856  00250A                     u4081:
  6857  00250A  EF88  F012         	goto	l814
  6858  00250E                     u4080:
  6859  00250E  8001               	bsf	___fldiv@b^0,0,c
  6860  002510                     l814:
  6861  002510  90D8               	bcf	status,0,c
  6862  002512  3614               	rlcf	___fldiv@grs^0,f,c
  6863  002514  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6864  002516  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6865  002518  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6866  00251A  0612               	decf	___fldiv@new_exp^0,f,c
  6867  00251C  A0D8               	btfss	status,0,c
  6868  00251E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6869  002520                     l3687:
  6870  002520  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6871  002522  EF95  F012         	goto	u4091
  6872  002526  EF97  F012         	goto	u4090
  6873  00252A                     u4091:
  6874  00252A  EF7B  F012         	goto	l3681
  6875  00252E                     u4090:
  6876  00252E  0E00               	movlw	0
  6877  002530  6E19               	movwf	___fldiv@aexp^0,c
  6878  002532  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6879  002534  EF9E  F012         	goto	u4101
  6880  002538  EFA0  F012         	goto	u4100
  6881  00253C                     u4101:
  6882  00253C  EFC4  F012         	goto	l816
  6883  002540                     u4100:
  6884  002540  0EFF               	movlw	255
  6885  002542  1414               	andwf	___fldiv@grs^0,w,c
  6886  002544  6E09               	movwf	??___fldiv^0,c
  6887  002546  0EFF               	movlw	255
  6888  002548  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6889  00254A  6E0A               	movwf	(??___fldiv+1)^0,c
  6890  00254C  0EFF               	movlw	255
  6891  00254E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6892  002550  6E0B               	movwf	(??___fldiv+2)^0,c
  6893  002552  0E7F               	movlw	127
  6894  002554  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6895  002556  6E0C               	movwf	(??___fldiv+3)^0,c
  6896  002558  5009               	movf	??___fldiv^0,w,c
  6897  00255A  100A               	iorwf	(??___fldiv+1)^0,w,c
  6898  00255C  100B               	iorwf	(??___fldiv+2)^0,w,c
  6899  00255E  100C               	iorwf	(??___fldiv+3)^0,w,c
  6900  002560  B4D8               	btfsc	status,2,c
  6901  002562  EFB5  F012         	goto	u4111
  6902  002566  EFB7  F012         	goto	u4110
  6903  00256A                     u4111:
  6904  00256A  EFBB  F012         	goto	l817
  6905  00256E                     u4110:
  6906  00256E                     l3695:
  6907  00256E  0E01               	movlw	1
  6908  002570  6E19               	movwf	___fldiv@aexp^0,c
  6909  002572  EFC4  F012         	goto	l816
  6910  002576                     l817:
  6911  002576  A001               	btfss	___fldiv@b^0,0,c
  6912  002578  EFC0  F012         	goto	u4121
  6913  00257C  EFC2  F012         	goto	u4120
  6914  002580                     u4121:
  6915  002580  EFC4  F012         	goto	l816
  6916  002584                     u4120:
  6917  002584  EFB7  F012         	goto	l3695
  6918  002588                     l816:
  6919  002588  5019               	movf	___fldiv@aexp^0,w,c
  6920  00258A  B4D8               	btfsc	status,2,c
  6921  00258C  EFCA  F012         	goto	u4131
  6922  002590  EFCC  F012         	goto	u4130
  6923  002594                     u4131:
  6924  002594  EFF0  F012         	goto	l3707
  6925  002598                     u4130:
  6926  002598  0E01               	movlw	1
  6927  00259A  2601               	addwf	___fldiv@b^0,f,c
  6928  00259C  0E00               	movlw	0
  6929  00259E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6930  0025A0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6931  0025A2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6932  0025A4  A004               	btfss	(___fldiv@b+3)^0,0,c
  6933  0025A6  EFD7  F012         	goto	u4141
  6934  0025AA  EFD9  F012         	goto	u4140
  6935  0025AE                     u4141:
  6936  0025AE  EFF0  F012         	goto	l3707
  6937  0025B2                     u4140:
  6938  0025B2  C001  F009         	movff	___fldiv@b,??___fldiv
  6939  0025B6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6940  0025BA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6941  0025BE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6942  0025C2  340C               	rlcf	(??___fldiv+3)^0,w,c
  6943  0025C4  320C               	rrcf	(??___fldiv+3)^0,f,c
  6944  0025C6  320B               	rrcf	(??___fldiv+2)^0,f,c
  6945  0025C8  320A               	rrcf	(??___fldiv+1)^0,f,c
  6946  0025CA  3209               	rrcf	??___fldiv^0,f,c
  6947  0025CC  C009  F001         	movff	??___fldiv,___fldiv@b
  6948  0025D0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6949  0025D4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6950  0025D8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6951  0025DC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6952  0025DE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6953  0025E0                     l3707:
  6954  0025E0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6955  0025E2  EFFB  F012         	goto	u4151
  6956  0025E6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6957  0025E8  E108               	bnz	u4150
  6958  0025EA  2812               	incf	___fldiv@new_exp^0,w,c
  6959  0025EC  A0D8               	btfss	status,0,c
  6960  0025EE  EFFB  F012         	goto	u4151
  6961  0025F2  EFFD  F012         	goto	u4150
  6962  0025F6                     u4151:
  6963  0025F6  EF08  F013         	goto	l3711
  6964  0025FA                     u4150:
  6965  0025FA  0E00               	movlw	0
  6966  0025FC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6967  0025FE  6812               	setf	___fldiv@new_exp^0,c
  6968  002600  0E00               	movlw	0
  6969  002602  6E01               	movwf	___fldiv@b^0,c
  6970  002604  0E00               	movlw	0
  6971  002606  6E02               	movwf	(___fldiv@b+1)^0,c
  6972  002608  0E00               	movlw	0
  6973  00260A  6E03               	movwf	(___fldiv@b+2)^0,c
  6974  00260C  0E00               	movlw	0
  6975  00260E  6E04               	movwf	(___fldiv@b+3)^0,c
  6976  002610                     l3711:
  6977  002610  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6978  002612  EF15  F013         	goto	u4160
  6979  002616  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6980  002618  E106               	bnz	u4161
  6981  00261A  0412               	decf	___fldiv@new_exp^0,w,c
  6982  00261C  B0D8               	btfsc	status,0,c
  6983  00261E  EF13  F013         	goto	u4161
  6984  002622  EF15  F013         	goto	u4160
  6985  002626                     u4161:
  6986  002626  EF23  F013         	goto	l3715
  6987  00262A                     u4160:
  6988  00262A  0E00               	movlw	0
  6989  00262C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6990  00262E  0E00               	movlw	0
  6991  002630  6E12               	movwf	___fldiv@new_exp^0,c
  6992  002632  0E00               	movlw	0
  6993  002634  6E01               	movwf	___fldiv@b^0,c
  6994  002636  0E00               	movlw	0
  6995  002638  6E02               	movwf	(___fldiv@b+1)^0,c
  6996  00263A  0E00               	movlw	0
  6997  00263C  6E03               	movwf	(___fldiv@b+2)^0,c
  6998  00263E  0E00               	movlw	0
  6999  002640  6E04               	movwf	(___fldiv@b+3)^0,c
  7000  002642  0E00               	movlw	0
  7001  002644  6E11               	movwf	___fldiv@sign^0,c
  7002  002646                     l3715:
  7003  002646  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7004  00264A  A018               	btfss	___fldiv@bexp^0,0,c
  7005  00264C  EF2A  F013         	goto	u4171
  7006  002650  EF2C  F013         	goto	u4170
  7007  002654                     u4171:
  7008  002654  EF2F  F013         	goto	l3721
  7009  002658                     u4170:
  7010  002658  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7011  00265A  EF30  F013         	goto	l3723
  7012  00265E                     l3721:
  7013  00265E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7014  002660                     l3723:
  7015  002660  90D8               	bcf	status,0,c
  7016  002662  3018               	rrcf	___fldiv@bexp^0,w,c
  7017  002664  6E04               	movwf	(___fldiv@b+3)^0,c
  7018  002666  EFE6  F011         	goto	l3637
  7019  00266A                     l803:
  7020  00266A  0012               	return		;funcret
  7021  00266C                     __end_of___fldiv:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function ___awmod *****************
  7025 ;; Defined at:
  7026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  dividend        2    0[COMRAM] int 
  7029 ;;  divisor         2    2[COMRAM] int 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  sign            1    5[COMRAM] unsigned char 
  7032 ;;  counter         1    4[COMRAM] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  2    0[COMRAM] int 
  7035 ;; Registers used:
  7036 ;;		wreg, status,2, status,0
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7042 ;;      Params:         4       0       0       0       0       0       0       0       0
  7043 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7045 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7046 ;;Total ram usage:        6 bytes
  7047 ;; Hardware stack levels used:    1
  7048 ;; Hardware stack levels required when called:    1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_efgtoa
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text19
  7057  0040D8                     __ptext19:
  7058                           	callstack 0
  7059  0040D8                     ___awmod:
  7060                           	callstack 25
  7061  0040D8  0E00               	movlw	0
  7062  0040DA  6E06               	movwf	___awmod@sign^0,c
  7063  0040DC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7064  0040DE  EF75  F020         	goto	u4430
  7065  0040E2  EF73  F020         	goto	u4431
  7066  0040E6                     u4431:
  7067  0040E6  EF7B  F020         	goto	l3919
  7068  0040EA                     u4430:
  7069  0040EA  6C01               	negf	___awmod@dividend^0,c
  7070  0040EC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7071  0040EE  B0D8               	btfsc	status,0,c
  7072  0040F0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7073  0040F2  0E01               	movlw	1
  7074  0040F4  6E06               	movwf	___awmod@sign^0,c
  7075  0040F6                     l3919:
  7076  0040F6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7077  0040F8  EF82  F020         	goto	u4440
  7078  0040FC  EF80  F020         	goto	u4441
  7079  004100                     u4441:
  7080  004100  EF86  F020         	goto	l3923
  7081  004104                     u4440:
  7082  004104  6C03               	negf	___awmod@divisor^0,c
  7083  004106  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7084  004108  B0D8               	btfsc	status,0,c
  7085  00410A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7086  00410C                     l3923:
  7087  00410C  5003               	movf	___awmod@divisor^0,w,c
  7088  00410E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7089  004110  B4D8               	btfsc	status,2,c
  7090  004112  EF8D  F020         	goto	u4451
  7091  004116  EF8F  F020         	goto	u4450
  7092  00411A                     u4451:
  7093  00411A  EFB3  F020         	goto	l3939
  7094  00411E                     u4450:
  7095  00411E  0E01               	movlw	1
  7096  004120  6E05               	movwf	___awmod@counter^0,c
  7097  004122  EF97  F020         	goto	l3929
  7098  004126                     l3927:
  7099  004126  90D8               	bcf	status,0,c
  7100  004128  3603               	rlcf	___awmod@divisor^0,f,c
  7101  00412A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7102  00412C  2A05               	incf	___awmod@counter^0,f,c
  7103  00412E                     l3929:
  7104  00412E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7105  004130  EF9C  F020         	goto	u4461
  7106  004134  EF9E  F020         	goto	u4460
  7107  004138                     u4461:
  7108  004138  EF93  F020         	goto	l3927
  7109  00413C                     u4460:
  7110  00413C                     l3931:
  7111  00413C  5003               	movf	___awmod@divisor^0,w,c
  7112  00413E  5C01               	subwf	___awmod@dividend^0,w,c
  7113  004140  5004               	movf	(___awmod@divisor+1)^0,w,c
  7114  004142  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7115  004144  A0D8               	btfss	status,0,c
  7116  004146  EFA7  F020         	goto	u4471
  7117  00414A  EFA9  F020         	goto	u4470
  7118  00414E                     u4471:
  7119  00414E  EFAD  F020         	goto	l3935
  7120  004152                     u4470:
  7121  004152  5003               	movf	___awmod@divisor^0,w,c
  7122  004154  5E01               	subwf	___awmod@dividend^0,f,c
  7123  004156  5004               	movf	(___awmod@divisor+1)^0,w,c
  7124  004158  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7125  00415A                     l3935:
  7126  00415A  90D8               	bcf	status,0,c
  7127  00415C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7128  00415E  3203               	rrcf	___awmod@divisor^0,f,c
  7129  004160  2E05               	decfsz	___awmod@counter^0,f,c
  7130  004162  EF9E  F020         	goto	l3931
  7131  004166                     l3939:
  7132  004166  5006               	movf	___awmod@sign^0,w,c
  7133  004168  B4D8               	btfsc	status,2,c
  7134  00416A  EFB9  F020         	goto	u4481
  7135  00416E  EFBB  F020         	goto	u4480
  7136  004172                     u4481:
  7137  004172  EFBF  F020         	goto	l3943
  7138  004176                     u4480:
  7139  004176  6C01               	negf	___awmod@dividend^0,c
  7140  004178  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7141  00417A  B0D8               	btfsc	status,0,c
  7142  00417C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7143  00417E                     l3943:
  7144  00417E  C001  F001         	movff	___awmod@dividend,?___awmod
  7145  004182  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7146  004186  0012               	return		;funcret
  7147  004188                     __end_of___awmod:
  7148                           	callstack 0
  7149                           
  7150 ;; *************** function ___awdiv *****************
  7151 ;; Defined at:
  7152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  dividend        2    0[COMRAM] int 
  7155 ;;  divisor         2    2[COMRAM] int 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  quotient        2    6[COMRAM] int 
  7158 ;;  sign            1    5[COMRAM] unsigned char 
  7159 ;;  counter         1    4[COMRAM] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  2    0[COMRAM] int 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7169 ;;      Params:         4       0       0       0       0       0       0       0       0
  7170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7172 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7173 ;;Total ram usage:        8 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_efgtoa
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text20
  7184  004014                     __ptext20:
  7185                           	callstack 0
  7186  004014                     ___awdiv:
  7187                           	callstack 25
  7188  004014  0E00               	movlw	0
  7189  004016  6E06               	movwf	___awdiv@sign^0,c
  7190  004018  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7191  00401A  EF13  F020         	goto	u4370
  7192  00401E  EF11  F020         	goto	u4371
  7193  004022                     u4371:
  7194  004022  EF19  F020         	goto	l3875
  7195  004026                     u4370:
  7196  004026  6C03               	negf	___awdiv@divisor^0,c
  7197  004028  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7198  00402A  B0D8               	btfsc	status,0,c
  7199  00402C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7200  00402E  0E01               	movlw	1
  7201  004030  6E06               	movwf	___awdiv@sign^0,c
  7202  004032                     l3875:
  7203  004032  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7204  004034  EF20  F020         	goto	u4380
  7205  004038  EF1E  F020         	goto	u4381
  7206  00403C                     u4381:
  7207  00403C  EF26  F020         	goto	l3881
  7208  004040                     u4380:
  7209  004040  6C01               	negf	___awdiv@dividend^0,c
  7210  004042  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7211  004044  B0D8               	btfsc	status,0,c
  7212  004046  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7213  004048  0E01               	movlw	1
  7214  00404A  1A06               	xorwf	___awdiv@sign^0,f,c
  7215  00404C                     l3881:
  7216  00404C  0E00               	movlw	0
  7217  00404E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7218  004050  0E00               	movlw	0
  7219  004052  6E07               	movwf	___awdiv@quotient^0,c
  7220  004054  5003               	movf	___awdiv@divisor^0,w,c
  7221  004056  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7222  004058  B4D8               	btfsc	status,2,c
  7223  00405A  EF31  F020         	goto	u4391
  7224  00405E  EF33  F020         	goto	u4390
  7225  004062                     u4391:
  7226  004062  EF5B  F020         	goto	l3903
  7227  004066                     u4390:
  7228  004066  0E01               	movlw	1
  7229  004068  6E05               	movwf	___awdiv@counter^0,c
  7230  00406A  EF3B  F020         	goto	l3889
  7231  00406E                     l3887:
  7232  00406E  90D8               	bcf	status,0,c
  7233  004070  3603               	rlcf	___awdiv@divisor^0,f,c
  7234  004072  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7235  004074  2A05               	incf	___awdiv@counter^0,f,c
  7236  004076                     l3889:
  7237  004076  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7238  004078  EF40  F020         	goto	u4401
  7239  00407C  EF42  F020         	goto	u4400
  7240  004080                     u4401:
  7241  004080  EF37  F020         	goto	l3887
  7242  004084                     u4400:
  7243  004084                     l3891:
  7244  004084  90D8               	bcf	status,0,c
  7245  004086  3607               	rlcf	___awdiv@quotient^0,f,c
  7246  004088  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7247  00408A  5003               	movf	___awdiv@divisor^0,w,c
  7248  00408C  5C01               	subwf	___awdiv@dividend^0,w,c
  7249  00408E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7250  004090  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7251  004092  A0D8               	btfss	status,0,c
  7252  004094  EF4E  F020         	goto	u4411
  7253  004098  EF50  F020         	goto	u4410
  7254  00409C                     u4411:
  7255  00409C  EF55  F020         	goto	l3899
  7256  0040A0                     u4410:
  7257  0040A0  5003               	movf	___awdiv@divisor^0,w,c
  7258  0040A2  5E01               	subwf	___awdiv@dividend^0,f,c
  7259  0040A4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7260  0040A6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7261  0040A8  8007               	bsf	___awdiv@quotient^0,0,c
  7262  0040AA                     l3899:
  7263  0040AA  90D8               	bcf	status,0,c
  7264  0040AC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7265  0040AE  3203               	rrcf	___awdiv@divisor^0,f,c
  7266  0040B0  2E05               	decfsz	___awdiv@counter^0,f,c
  7267  0040B2  EF42  F020         	goto	l3891
  7268  0040B6                     l3903:
  7269  0040B6  5006               	movf	___awdiv@sign^0,w,c
  7270  0040B8  B4D8               	btfsc	status,2,c
  7271  0040BA  EF61  F020         	goto	u4421
  7272  0040BE  EF63  F020         	goto	u4420
  7273  0040C2                     u4421:
  7274  0040C2  EF67  F020         	goto	l3907
  7275  0040C6                     u4420:
  7276  0040C6  6C07               	negf	___awdiv@quotient^0,c
  7277  0040C8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7278  0040CA  B0D8               	btfsc	status,0,c
  7279  0040CC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7280  0040CE                     l3907:
  7281  0040CE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7282  0040D2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7283  0040D6  0012               	return		;funcret
  7284  0040D8                     __end_of___awdiv:
  7285                           	callstack 0
  7286                           
  7287 ;; *************** function _dtoa *****************
  7288 ;; Defined at:
  7289 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7292 ;;		 -> sprintf@f(6), 
  7293 ;;  d               8   29[COMRAM] long long 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  n               8   53[COMRAM] long long 
  7296 ;;  i               2   61[COMRAM] int 
  7297 ;;  s               2   51[COMRAM] int 
  7298 ;;  w               2   49[COMRAM] int 
  7299 ;;  p               2   47[COMRAM] int 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2   27[COMRAM] int 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7309 ;;      Params:        10       0       0       0       0       0       0       0       0
  7310 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7311 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7312 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7313 ;;Total ram usage:       36 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    5
  7316 ;; This function calls:
  7317 ;;		___aodiv
  7318 ;;		___aomod
  7319 ;;		_abs
  7320 ;;		_pad
  7321 ;; This function is called by:
  7322 ;;		_vfpfcnvrt
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text21
  7327  00266C                     __ptext21:
  7328                           	callstack 0
  7329  00266C                     _dtoa:
  7330                           	callstack 22
  7331  00266C                     
  7332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7333  00266C  C01E  F036         	movff	dtoa@d,dtoa@n
  7334  002670  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7335  002674  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7336  002678  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7337  00267C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7338  002680  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7339  002684  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7340  002688  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7341  00268C                     
  7342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7343  00268C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7344  00268E  EF4B  F013         	goto	u4981
  7345  002692  EF4E  F013         	goto	u4980
  7346  002696                     u4981:
  7347  002696  0E01               	movlw	1
  7348  002698  EF4F  F013         	goto	u4990
  7349  00269C                     u4980:
  7350  00269C  0E00               	movlw	0
  7351  00269E                     u4990:
  7352  00269E  6E34               	movwf	dtoa@s^0,c
  7353  0026A0  6A35               	clrf	(dtoa@s+1)^0,c
  7354                           
  7355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7356  0026A2  5034               	movf	dtoa@s^0,w,c
  7357  0026A4  1035               	iorwf	(dtoa@s+1)^0,w,c
  7358  0026A6  B4D8               	btfsc	status,2,c
  7359  0026A8  EF58  F013         	goto	u5001
  7360  0026AC  EF5A  F013         	goto	u5000
  7361  0026B0                     u5001:
  7362  0026B0  EF6A  F013         	goto	l4165
  7363  0026B4                     u5000:
  7364  0026B4                     
  7365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7366  0026B4  1E3D               	comf	(dtoa@n+7)^0,f,c
  7367  0026B6  1E3C               	comf	(dtoa@n+6)^0,f,c
  7368  0026B8  1E3B               	comf	(dtoa@n+5)^0,f,c
  7369  0026BA  1E3A               	comf	(dtoa@n+4)^0,f,c
  7370  0026BC  1E39               	comf	(dtoa@n+3)^0,f,c
  7371  0026BE  1E38               	comf	(dtoa@n+2)^0,f,c
  7372  0026C0  1E37               	comf	(dtoa@n+1)^0,f,c
  7373  0026C2  6C36               	negf	dtoa@n^0,c
  7374  0026C4  0E00               	movlw	0
  7375  0026C6  2237               	addwfc	(dtoa@n+1)^0,f,c
  7376  0026C8  2238               	addwfc	(dtoa@n+2)^0,f,c
  7377  0026CA  2239               	addwfc	(dtoa@n+3)^0,f,c
  7378  0026CC  223A               	addwfc	(dtoa@n+4)^0,f,c
  7379  0026CE  223B               	addwfc	(dtoa@n+5)^0,f,c
  7380  0026D0  223C               	addwfc	(dtoa@n+6)^0,f,c
  7381  0026D2  223D               	addwfc	(dtoa@n+7)^0,f,c
  7382  0026D4                     l4165:
  7383                           
  7384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7385  0026D4  0100               	movlb	0	; () banked
  7386  0026D6  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  7387  0026D8  EF70  F013         	goto	u5011
  7388  0026DC  EF72  F013         	goto	u5010
  7389  0026E0                     u5011:
  7390  0026E0  EF73  F013         	goto	l4169
  7391  0026E4                     u5010:
  7392  0026E4                     
  7393                           ; BSR set to: 0
  7394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7395  0026E4  93E2               	bcf	_flags& (0+255),1,b
  7396  0026E6                     l4169:
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7400  0026E6  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  7401  0026E8  EF80  F013         	goto	u5020
  7402  0026EC  51E1               	movf	(_prec+1)& (0+255),w,b
  7403  0026EE  E106               	bnz	u5021
  7404  0026F0  05E0               	decf	_prec& (0+255),w,b
  7405  0026F2  B0D8               	btfsc	status,0,c
  7406  0026F4  EF7E  F013         	goto	u5021
  7407  0026F8  EF80  F013         	goto	u5020
  7408  0026FC                     u5021:
  7409  0026FC  EF86  F013         	goto	l953
  7410  002700                     u5020:
  7411  002700                     
  7412                           ; BSR set to: 0
  7413  002700  0E00               	movlw	0
  7414  002702  6E31               	movwf	(dtoa@p+1)^0,c
  7415  002704  0E01               	movlw	1
  7416  002706  6E30               	movwf	dtoa@p^0,c
  7417  002708  EF8A  F013         	goto	l955
  7418  00270C                     l953:
  7419                           
  7420                           ; BSR set to: 0
  7421  00270C  C0E0  F030         	movff	_prec,dtoa@p
  7422  002710  C0E1  F031         	movff	_prec+1,dtoa@p+1
  7423  002714                     l955:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7427  002714  C0DE  F032         	movff	_width,dtoa@w
  7428  002718  C0DF  F033         	movff	_width+1,dtoa@w+1
  7429  00271C                     
  7430                           ; BSR set to: 0
  7431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7432  00271C  5034               	movf	dtoa@s^0,w,c
  7433  00271E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7434  002720  A4D8               	btfss	status,2,c
  7435  002722  EF95  F013         	goto	u5031
  7436  002726  EF97  F013         	goto	u5030
  7437  00272A                     u5031:
  7438  00272A  EF9E  F013         	goto	l4177
  7439  00272E                     u5030:
  7440  00272E                     
  7441                           ; BSR set to: 0
  7442  00272E  A5E2               	btfss	_flags& (0+255),2,b
  7443  002730  EF9C  F013         	goto	u5041
  7444  002734  EF9E  F013         	goto	u5040
  7445  002738                     u5041:
  7446  002738  EFA1  F013         	goto	l4179
  7447  00273C                     u5040:
  7448  00273C                     l4177:
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7452  00273C  0632               	decf	dtoa@w^0,f,c
  7453  00273E  A0D8               	btfss	status,0,c
  7454  002740  0633               	decf	(dtoa@w+1)^0,f,c
  7455  002742                     l4179:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7459  002742  0E00               	movlw	0
  7460  002744  6E3F               	movwf	(dtoa@i+1)^0,c
  7461  002746  0E4F               	movlw	79
  7462  002748  6E3E               	movwf	dtoa@i^0,c
  7463  00274A                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7466  00274A  0E00               	movlw	0
  7467  00274C  0101               	movlb	1	; () banked
  7468  00274E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7469                           
  7470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7471  002750  EF26  F014         	goto	l4193
  7472  002754                     l4183:
  7473                           
  7474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7475  002754  063E               	decf	dtoa@i^0,f,c
  7476  002756  A0D8               	btfss	status,0,c
  7477  002758  063F               	decf	(dtoa@i+1)^0,f,c
  7478  00275A                     
  7479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7480  00275A  0E00               	movlw	low _dbuf
  7481  00275C  243E               	addwf	dtoa@i^0,w,c
  7482  00275E  6ED9               	movwf	fsr2l,c
  7483  002760  0E01               	movlw	high _dbuf
  7484  002762  203F               	addwfc	(dtoa@i+1)^0,w,c
  7485  002764  6EDA               	movwf	fsr2h,c
  7486  002766  C036  F001         	movff	dtoa@n,___aomod@dividend
  7487  00276A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7488  00276E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7489  002772  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7490  002776  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7491  00277A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7492  00277E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7493  002782  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7494  002786  0E0A               	movlw	10
  7495  002788  6E09               	movwf	___aomod@divisor^0,c
  7496  00278A  0E00               	movlw	0
  7497  00278C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7498  00278E  0E00               	movlw	0
  7499  002790  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7500  002792  0E00               	movlw	0
  7501  002794  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7502  002796  0E00               	movlw	0
  7503  002798  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7504  00279A  0E00               	movlw	0
  7505  00279C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7506  00279E  0E00               	movlw	0
  7507  0027A0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7508  0027A2  0E00               	movlw	0
  7509  0027A4  6E10               	movwf	(___aomod@divisor+7)^0,c
  7510  0027A6  ECA1  F01C         	call	___aomod	;wreg free
  7511  0027AA  C001  F026         	movff	?___aomod,??_dtoa
  7512  0027AE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7513  0027B2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7514  0027B6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7515  0027BA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7516  0027BE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7517  0027C2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7518  0027C6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7519  0027CA  C026  F013         	movff	??_dtoa,abs@a
  7520  0027CE  C028  F014         	movff	??_dtoa+2,abs@a+1
  7521  0027D2  EC03  F023         	call	_abs	;wreg free
  7522  0027D6  5013               	movf	?_abs^0,w,c
  7523  0027D8  0F30               	addlw	48
  7524  0027DA  6EDF               	movwf	indf2,c
  7525  0027DC                     
  7526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7527  0027DC  0630               	decf	dtoa@p^0,f,c
  7528  0027DE  A0D8               	btfss	status,0,c
  7529  0027E0  0631               	decf	(dtoa@p+1)^0,f,c
  7530  0027E2                     
  7531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7532  0027E2  0632               	decf	dtoa@w^0,f,c
  7533  0027E4  A0D8               	btfss	status,0,c
  7534  0027E6  0633               	decf	(dtoa@w+1)^0,f,c
  7535  0027E8                     
  7536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7537  0027E8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7538  0027EC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7539  0027F0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7540  0027F4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7541  0027F8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7542  0027FC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7543  002800  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7544  002804  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7545  002808  0E0A               	movlw	10
  7546  00280A  6E09               	movwf	___aodiv@divisor^0,c
  7547  00280C  0E00               	movlw	0
  7548  00280E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7549  002810  0E00               	movlw	0
  7550  002812  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7551  002814  0E00               	movlw	0
  7552  002816  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7553  002818  0E00               	movlw	0
  7554  00281A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7555  00281C  0E00               	movlw	0
  7556  00281E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7557  002820  0E00               	movlw	0
  7558  002822  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7559  002824  0E00               	movlw	0
  7560  002826  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7561  002828  ECDD  F01B         	call	___aodiv	;wreg free
  7562  00282C  C001  F036         	movff	?___aodiv,dtoa@n
  7563  002830  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7564  002834  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7565  002838  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7566  00283C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7567  002840  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7568  002844  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7569  002848  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7570  00284C                     l4193:
  7571                           
  7572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7573  00284C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7574  00284E  EF31  F014         	goto	u5051
  7575  002852  503F               	movf	(dtoa@i+1)^0,w,c
  7576  002854  E108               	bnz	u5050
  7577  002856  043E               	decf	dtoa@i^0,w,c
  7578  002858  A0D8               	btfss	status,0,c
  7579  00285A  EF31  F014         	goto	u5051
  7580  00285E  EF33  F014         	goto	u5050
  7581  002862                     u5051:
  7582  002862  EF64  F014         	goto	l4203
  7583  002866                     u5050:
  7584  002866  5036               	movf	dtoa@n^0,w,c
  7585  002868  1037               	iorwf	(dtoa@n+1)^0,w,c
  7586  00286A  1038               	iorwf	(dtoa@n+2)^0,w,c
  7587  00286C  1039               	iorwf	(dtoa@n+3)^0,w,c
  7588  00286E  103A               	iorwf	(dtoa@n+4)^0,w,c
  7589  002870  103B               	iorwf	(dtoa@n+5)^0,w,c
  7590  002872  103C               	iorwf	(dtoa@n+6)^0,w,c
  7591  002874  103D               	iorwf	(dtoa@n+7)^0,w,c
  7592  002876  A4D8               	btfss	status,2,c
  7593  002878  EF40  F014         	goto	u5061
  7594  00287C  EF42  F014         	goto	u5060
  7595  002880                     u5061:
  7596  002880  EFAA  F013         	goto	l4183
  7597  002884                     u5060:
  7598  002884  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7599  002886  EF4F  F014         	goto	u5070
  7600  00288A  5031               	movf	(dtoa@p+1)^0,w,c
  7601  00288C  E106               	bnz	u5071
  7602  00288E  0430               	decf	dtoa@p^0,w,c
  7603  002890  B0D8               	btfsc	status,0,c
  7604  002892  EF4D  F014         	goto	u5071
  7605  002896  EF4F  F014         	goto	u5070
  7606  00289A                     u5071:
  7607  00289A  EFAA  F013         	goto	l4183
  7608  00289E                     u5070:
  7609  00289E  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7610  0028A0  EF5A  F014         	goto	u5081
  7611  0028A4  5033               	movf	(dtoa@w+1)^0,w,c
  7612  0028A6  E108               	bnz	u5080
  7613  0028A8  0432               	decf	dtoa@w^0,w,c
  7614  0028AA  A0D8               	btfss	status,0,c
  7615  0028AC  EF5A  F014         	goto	u5081
  7616  0028B0  EF5C  F014         	goto	u5080
  7617  0028B4                     u5081:
  7618  0028B4  EF64  F014         	goto	l4203
  7619  0028B8                     u5080:
  7620  0028B8  0100               	movlb	0	; () banked
  7621  0028BA  B3E2               	btfsc	_flags& (0+255),1,b
  7622  0028BC  EF62  F014         	goto	u5091
  7623  0028C0  EF64  F014         	goto	u5090
  7624  0028C4                     u5091:
  7625  0028C4  EFAA  F013         	goto	l4183
  7626  0028C8                     u5090:
  7627  0028C8                     l4203:
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7630  0028C8  5034               	movf	dtoa@s^0,w,c
  7631  0028CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  7632  0028CC  A4D8               	btfss	status,2,c
  7633  0028CE  EF6B  F014         	goto	u5101
  7634  0028D2  EF6D  F014         	goto	u5100
  7635  0028D6                     u5101:
  7636  0028D6  EF75  F014         	goto	l4207
  7637  0028DA                     u5100:
  7638  0028DA  0100               	movlb	0	; () banked
  7639  0028DC  A5E2               	btfss	_flags& (0+255),2,b
  7640  0028DE  EF73  F014         	goto	u5111
  7641  0028E2  EF75  F014         	goto	u5110
  7642  0028E6                     u5111:
  7643  0028E6  EF93  F014         	goto	l4217
  7644  0028EA                     u5110:
  7645  0028EA                     l4207:
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7648  0028EA  063E               	decf	dtoa@i^0,f,c
  7649  0028EC  A0D8               	btfss	status,0,c
  7650  0028EE  063F               	decf	(dtoa@i+1)^0,f,c
  7651  0028F0                     
  7652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7653  0028F0  5034               	movf	dtoa@s^0,w,c
  7654  0028F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7655  0028F4  A4D8               	btfss	status,2,c
  7656  0028F6  EF7F  F014         	goto	u5121
  7657  0028FA  EF81  F014         	goto	u5120
  7658  0028FE                     u5121:
  7659  0028FE  EF87  F014         	goto	l4213
  7660  002902                     u5120:
  7661  002902  0E00               	movlw	0
  7662  002904  6E2F               	movwf	(_dtoa$874+1)^0,c
  7663  002906  0E2B               	movlw	43
  7664  002908  6E2E               	movwf	_dtoa$874^0,c
  7665  00290A  EF8B  F014         	goto	l4215
  7666  00290E                     l4213:
  7667  00290E  0E00               	movlw	0
  7668  002910  6E2F               	movwf	(_dtoa$874+1)^0,c
  7669  002912  0E2D               	movlw	45
  7670  002914  6E2E               	movwf	_dtoa$874^0,c
  7671  002916                     l4215:
  7672  002916  0E00               	movlw	low _dbuf
  7673  002918  243E               	addwf	dtoa@i^0,w,c
  7674  00291A  6ED9               	movwf	fsr2l,c
  7675  00291C  0E01               	movlw	high _dbuf
  7676  00291E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7677  002920  6EDA               	movwf	fsr2h,c
  7678  002922  C02E  FFDF         	movff	_dtoa$874,indf2
  7679  002926                     l4217:
  7680                           
  7681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7682  002926  C01C  F011         	movff	dtoa@fp,pad@fp
  7683  00292A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7684  00292E  0E00               	movlw	low _dbuf
  7685  002930  243E               	addwf	dtoa@i^0,w,c
  7686  002932  6E13               	movwf	pad@buf^0,c
  7687  002934  0E01               	movlw	high _dbuf
  7688  002936  203F               	addwfc	(dtoa@i+1)^0,w,c
  7689  002938  6E14               	movwf	(pad@buf+1)^0,c
  7690  00293A  C032  F015         	movff	dtoa@w,pad@p
  7691  00293E  C033  F016         	movff	dtoa@w+1,pad@p+1
  7692  002942  ECA7  F01F         	call	_pad	;wreg free
  7693  002946  C011  F01C         	movff	?_pad,?_dtoa
  7694  00294A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7695  00294E  0012               	return		;funcret
  7696  002950                     __end_of_dtoa:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _pad *****************
  7700 ;; Defined at:
  7701 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7704 ;;		 -> sprintf@f(6), 
  7705 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7706 ;;		 -> dbuf(80), 
  7707 ;;  p               2   20[COMRAM] int 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  w               2   25[COMRAM] int 
  7710 ;;  i               2   23[COMRAM] int 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  2   16[COMRAM] int 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7720 ;;      Params:         6       0       0       0       0       0       0       0       0
  7721 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7722 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7723 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7724 ;;Total ram usage:       11 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    4
  7727 ;; This function calls:
  7728 ;;		_fputc
  7729 ;;		_fputs
  7730 ;;		_strlen
  7731 ;; This function is called by:
  7732 ;;		_dtoa
  7733 ;;		_efgtoa
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text22
  7738  003F4E                     __ptext22:
  7739                           	callstack 0
  7740  003F4E                     _pad:
  7741                           	callstack 22
  7742  003F4E                     
  7743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7744  003F4E  0100               	movlb	0	; () banked
  7745  003F50  A1E2               	btfss	_flags& (0+255),0,b
  7746  003F52  EFAD  F01F         	goto	u4651
  7747  003F56  EFAF  F01F         	goto	u4650
  7748  003F5A                     u4651:
  7749  003F5A  EFB9  F01F         	goto	l4041
  7750  003F5E                     u4650:
  7751  003F5E                     
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7754  003F5E  C013  F00A         	movff	pad@buf,fputs@s
  7755  003F62  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7756  003F66  C011  F00C         	movff	pad@fp,fputs@fp
  7757  003F6A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7758  003F6E  ECE1  F022         	call	_fputs	;wreg free
  7759  003F72                     l4041:
  7760                           
  7761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7762  003F72  BE16               	btfsc	(pad@p+1)^0,7,c
  7763  003F74  EFBE  F01F         	goto	u4661
  7764  003F78  EFC0  F01F         	goto	u4660
  7765  003F7C                     u4661:
  7766  003F7C  EFC6  F01F         	goto	l4045
  7767  003F80                     u4660:
  7768  003F80  C015  F01A         	movff	pad@p,pad@w
  7769  003F84  C016  F01B         	movff	pad@p+1,pad@w+1
  7770  003F88  EFCA  F01F         	goto	l942
  7771  003F8C                     l4045:
  7772  003F8C  0E00               	movlw	0
  7773  003F8E  6E1B               	movwf	(pad@w+1)^0,c
  7774  003F90  0E00               	movlw	0
  7775  003F92  6E1A               	movwf	pad@w^0,c
  7776  003F94                     l942:
  7777                           
  7778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7779  003F94  0E00               	movlw	0
  7780  003F96  6E19               	movwf	(pad@i+1)^0,c
  7781  003F98  0E00               	movlw	0
  7782  003F9A  6E18               	movwf	pad@i^0,c
  7783                           
  7784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7785  003F9C  EFDC  F01F         	goto	l4051
  7786  003FA0                     l4047:
  7787                           
  7788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7789  003FA0  0E00               	movlw	0
  7790  003FA2  6E02               	movwf	(fputc@c+1)^0,c
  7791  003FA4  0E20               	movlw	32
  7792  003FA6  6E01               	movwf	fputc@c^0,c
  7793  003FA8  C011  F003         	movff	pad@fp,fputc@fp
  7794  003FAC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7795  003FB0  EC42  F01F         	call	_fputc	;wreg free
  7796  003FB4                     
  7797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7798  003FB4  4A18               	infsnz	pad@i^0,f,c
  7799  003FB6  2A19               	incf	(pad@i+1)^0,f,c
  7800  003FB8                     l4051:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7803  003FB8  501A               	movf	pad@w^0,w,c
  7804  003FBA  5C18               	subwf	pad@i^0,w,c
  7805  003FBC  5019               	movf	(pad@i+1)^0,w,c
  7806  003FBE  0A80               	xorlw	128
  7807  003FC0  6E17               	movwf	??_pad^0,c
  7808  003FC2  501B               	movf	(pad@w+1)^0,w,c
  7809  003FC4  0A80               	xorlw	128
  7810  003FC6  5817               	subwfb	??_pad^0,w,c
  7811  003FC8  A0D8               	btfss	status,0,c
  7812  003FCA  EFE9  F01F         	goto	u4671
  7813  003FCE  EFEB  F01F         	goto	u4670
  7814  003FD2                     u4671:
  7815  003FD2  EFD0  F01F         	goto	l4047
  7816  003FD6                     u4670:
  7817  003FD6                     
  7818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7819  003FD6  0100               	movlb	0	; () banked
  7820  003FD8  B1E2               	btfsc	_flags& (0+255),0,b
  7821  003FDA  EFF1  F01F         	goto	u4681
  7822  003FDE  EFF3  F01F         	goto	u4680
  7823  003FE2                     u4681:
  7824  003FE2  EFFD  F01F         	goto	l4055
  7825  003FE6                     u4680:
  7826  003FE6                     
  7827                           ; BSR set to: 0
  7828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7829  003FE6  C013  F00A         	movff	pad@buf,fputs@s
  7830  003FEA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7831  003FEE  C011  F00C         	movff	pad@fp,fputs@fp
  7832  003FF2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7833  003FF6  ECE1  F022         	call	_fputs	;wreg free
  7834  003FFA                     l4055:
  7835                           
  7836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7837  003FFA  C013  F001         	movff	pad@buf,strlen@s
  7838  003FFE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7839  004002  EC97  F023         	call	_strlen	;wreg free
  7840  004006  501A               	movf	pad@w^0,w,c
  7841  004008  2401               	addwf	?_strlen^0,w,c
  7842  00400A  6E11               	movwf	?_pad^0,c
  7843  00400C  501B               	movf	(pad@w+1)^0,w,c
  7844  00400E  2002               	addwfc	(?_strlen+1)^0,w,c
  7845  004010  6E12               	movwf	(?_pad+1)^0,c
  7846  004012  0012               	return		;funcret
  7847  004014                     __end_of_pad:
  7848                           	callstack 0
  7849                           
  7850 ;; *************** function _strlen *****************
  7851 ;; Defined at:
  7852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7855 ;;		 -> dbuf(80), 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7858 ;;		 -> dbuf(80), 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  2    0[COMRAM] unsigned int 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7868 ;;      Params:         2       0       0       0       0       0       0       0       0
  7869 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7871 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7872 ;;Total ram usage:        4 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_pad
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text23
  7883  00472E                     __ptext23:
  7884                           	callstack 0
  7885  00472E                     _strlen:
  7886                           	callstack 24
  7887  00472E  C001  F003         	movff	strlen@s,strlen@a
  7888  004732  C002  F004         	movff	strlen@s+1,strlen@a+1
  7889  004736  EF9F  F023         	goto	l3497
  7890  00473A                     l3495:
  7891  00473A  4A01               	infsnz	strlen@s^0,f,c
  7892  00473C  2A02               	incf	(strlen@s+1)^0,f,c
  7893  00473E                     l3497:
  7894  00473E  C001  FFD9         	movff	strlen@s,fsr2l
  7895  004742  C002  FFDA         	movff	strlen@s+1,fsr2h
  7896  004746  50DF               	movf	indf2,w,c
  7897  004748  A4D8               	btfss	status,2,c
  7898  00474A  EFA9  F023         	goto	u3791
  7899  00474E  EFAB  F023         	goto	u3790
  7900  004752                     u3791:
  7901  004752  EF9D  F023         	goto	l3495
  7902  004756                     u3790:
  7903  004756  5003               	movf	strlen@a^0,w,c
  7904  004758  5C01               	subwf	strlen@s^0,w,c
  7905  00475A  6E01               	movwf	?_strlen^0,c
  7906  00475C  5004               	movf	(strlen@a+1)^0,w,c
  7907  00475E  5802               	subwfb	(strlen@s+1)^0,w,c
  7908  004760  6E02               	movwf	(?_strlen+1)^0,c
  7909  004762  0012               	return		;funcret
  7910  004764                     __end_of_strlen:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function _fputs *****************
  7914 ;; Defined at:
  7915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7918 ;;		 -> dbuf(80), 
  7919 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7920 ;;		 -> sprintf@f(6), 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  i               2   14[COMRAM] int 
  7923 ;;  c               1   13[COMRAM] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  2    9[COMRAM] int 
  7926 ;; Registers used:
  7927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7933 ;;      Params:         4       0       0       0       0       0       0       0       0
  7934 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7936 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7937 ;;Total ram usage:        7 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    3
  7940 ;; This function calls:
  7941 ;;		_fputc
  7942 ;; This function is called by:
  7943 ;;		_pad
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text24
  7948  0045C2                     __ptext24:
  7949                           	callstack 0
  7950  0045C2                     _fputs:
  7951                           	callstack 22
  7952  0045C2  0E00               	movlw	0
  7953  0045C4  6E10               	movwf	(fputs@i+1)^0,c
  7954  0045C6  0E00               	movlw	0
  7955  0045C8  6E0F               	movwf	fputs@i^0,c
  7956  0045CA  EFF2  F022         	goto	l3491
  7957  0045CE                     l3487:
  7958  0045CE  C00E  F001         	movff	fputs@c,fputc@c
  7959  0045D2  6A02               	clrf	(fputc@c+1)^0,c
  7960  0045D4  C00C  F003         	movff	fputs@fp,fputc@fp
  7961  0045D8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7962  0045DC  EC42  F01F         	call	_fputc	;wreg free
  7963  0045E0  4A0F               	infsnz	fputs@i^0,f,c
  7964  0045E2  2A10               	incf	(fputs@i+1)^0,f,c
  7965  0045E4                     l3491:
  7966  0045E4  500F               	movf	fputs@i^0,w,c
  7967  0045E6  240A               	addwf	fputs@s^0,w,c
  7968  0045E8  6ED9               	movwf	fsr2l,c
  7969  0045EA  5010               	movf	(fputs@i+1)^0,w,c
  7970  0045EC  200B               	addwfc	(fputs@s+1)^0,w,c
  7971  0045EE  6EDA               	movwf	fsr2h,c
  7972  0045F0  50DF               	movf	indf2,w,c
  7973  0045F2  6E0E               	movwf	fputs@c^0,c
  7974  0045F4  500E               	movf	fputs@c^0,w,c
  7975  0045F6  A4D8               	btfss	status,2,c
  7976  0045F8  EF00  F023         	goto	u3781
  7977  0045FC  EF02  F023         	goto	u3780
  7978  004600                     u3781:
  7979  004600  EFE7  F022         	goto	l3487
  7980  004604                     u3780:
  7981  004604  0012               	return		;funcret
  7982  004606                     __end_of_fputs:
  7983                           	callstack 0
  7984                           
  7985 ;; *************** function _fputc *****************
  7986 ;; Defined at:
  7987 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  c               2    0[COMRAM] int 
  7990 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7991 ;;		 -> sprintf@f(6), 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  2    0[COMRAM] int 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8003 ;;      Params:         4       0       0       0       0       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8005 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8006 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8007 ;;Total ram usage:        9 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    2
  8010 ;; This function calls:
  8011 ;;		_putch
  8012 ;; This function is called by:
  8013 ;;		_pad
  8014 ;;		_vfpfcnvrt
  8015 ;;		_fputs
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text25
  8020  003E84                     __ptext25:
  8021                           	callstack 0
  8022  003E84                     _fputc:
  8023                           	callstack 25
  8024  003E84  5003               	movf	fputc@fp^0,w,c
  8025  003E86  1004               	iorwf	(fputc@fp+1)^0,w,c
  8026  003E88  B4D8               	btfsc	status,2,c
  8027  003E8A  EF49  F01F         	goto	u3351
  8028  003E8E  EF4B  F01F         	goto	u3350
  8029  003E92                     u3351:
  8030  003E92  EF54  F01F         	goto	l3273
  8031  003E96                     u3350:
  8032  003E96  5003               	movf	fputc@fp^0,w,c
  8033  003E98  1004               	iorwf	(fputc@fp+1)^0,w,c
  8034  003E9A  A4D8               	btfss	status,2,c
  8035  003E9C  EF52  F01F         	goto	u3361
  8036  003EA0  EF54  F01F         	goto	u3360
  8037  003EA4                     u3361:
  8038  003EA4  EF59  F01F         	goto	l3275
  8039  003EA8                     u3360:
  8040  003EA8                     l3273:
  8041  003EA8  5001               	movf	fputc@c^0,w,c
  8042  003EAA  ECF4  F023         	call	_putch
  8043  003EAE  EFA6  F01F         	goto	l1204
  8044  003EB2                     l3275:
  8045  003EB2  EE20 F004          	lfsr	2,4
  8046  003EB6  5003               	movf	fputc@fp^0,w,c
  8047  003EB8  26D9               	addwf	fsr2l,f,c
  8048  003EBA  5004               	movf	(fputc@fp+1)^0,w,c
  8049  003EBC  22DA               	addwfc	fsr2h,f,c
  8050  003EBE  50DE               	movf	postinc2,w,c
  8051  003EC0  10DE               	iorwf	postinc2,w,c
  8052  003EC2  B4D8               	btfsc	status,2,c
  8053  003EC4  EF66  F01F         	goto	u3371
  8054  003EC8  EF68  F01F         	goto	u3370
  8055  003ECC                     u3371:
  8056  003ECC  EF83  F01F         	goto	l3279
  8057  003ED0                     u3370:
  8058  003ED0  EE20 F004          	lfsr	2,4
  8059  003ED4  5003               	movf	fputc@fp^0,w,c
  8060  003ED6  26D9               	addwf	fsr2l,f,c
  8061  003ED8  5004               	movf	(fputc@fp+1)^0,w,c
  8062  003EDA  22DA               	addwfc	fsr2h,f,c
  8063  003EDC  EE10 F002          	lfsr	1,2
  8064  003EE0  5003               	movf	fputc@fp^0,w,c
  8065  003EE2  26E1               	addwf	fsr1l,f,c
  8066  003EE4  5004               	movf	(fputc@fp+1)^0,w,c
  8067  003EE6  22E2               	addwfc	fsr1h,f,c
  8068  003EE8  50DE               	movf	postinc2,w,c
  8069  003EEA  5CE6               	subwf	postinc1,w,c
  8070  003EEC  50E6               	movf	postinc1,w,c
  8071  003EEE  0A80               	xorlw	128
  8072  003EF0  6E09               	movwf	(??_fputc+4)^0,c
  8073  003EF2  50DE               	movf	postinc2,w,c
  8074  003EF4  0A80               	xorlw	128
  8075  003EF6  5809               	subwfb	(??_fputc+4)^0,w,c
  8076  003EF8  B0D8               	btfsc	status,0,c
  8077  003EFA  EF81  F01F         	goto	u3381
  8078  003EFE  EF83  F01F         	goto	u3380
  8079  003F02                     u3381:
  8080  003F02  EFA6  F01F         	goto	l1204
  8081  003F06                     u3380:
  8082  003F06                     l3279:
  8083  003F06  EE20 F002          	lfsr	2,2
  8084  003F0A  5003               	movf	fputc@fp^0,w,c
  8085  003F0C  26D9               	addwf	fsr2l,f,c
  8086  003F0E  5004               	movf	(fputc@fp+1)^0,w,c
  8087  003F10  22DA               	addwfc	fsr2h,f,c
  8088  003F12  CFDE F005          	movff	postinc2,??_fputc
  8089  003F16  CFDD F006          	movff	postdec2,??_fputc+1
  8090  003F1A  C003  FFD9         	movff	fputc@fp,fsr2l
  8091  003F1E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8092  003F22  CFDE F007          	movff	postinc2,??_fputc+2
  8093  003F26  CFDD F008          	movff	postdec2,??_fputc+3
  8094  003F2A  5005               	movf	??_fputc^0,w,c
  8095  003F2C  2407               	addwf	(??_fputc+2)^0,w,c
  8096  003F2E  6ED9               	movwf	fsr2l,c
  8097  003F30  5006               	movf	(??_fputc+1)^0,w,c
  8098  003F32  2008               	addwfc	(??_fputc+3)^0,w,c
  8099  003F34  6EDA               	movwf	fsr2h,c
  8100  003F36  C001  FFDF         	movff	fputc@c,indf2
  8101  003F3A  EE20 F002          	lfsr	2,2
  8102  003F3E  5003               	movf	fputc@fp^0,w,c
  8103  003F40  26D9               	addwf	fsr2l,f,c
  8104  003F42  5004               	movf	(fputc@fp+1)^0,w,c
  8105  003F44  22DA               	addwfc	fsr2h,f,c
  8106  003F46  2ADE               	incf	postinc2,f,c
  8107  003F48  0E00               	movlw	0
  8108  003F4A  22DD               	addwfc	postdec2,f,c
  8109  003F4C                     l1204:
  8110  003F4C  0012               	return		;funcret
  8111  003F4E                     __end_of_fputc:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _putch *****************
  8115 ;; Defined at:
  8116 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  c               1    wreg     unsigned char 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  c               1    0[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_fputc
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text26
  8145  0047E8                     __ptext26:
  8146                           	callstack 0
  8147  0047E8                     _putch:
  8148                           	callstack 25
  8149  0047E8  0012               	return		;funcret
  8150  0047EA                     __end_of_putch:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _abs *****************
  8154 ;; Defined at:
  8155 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  a               2   18[COMRAM] int 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  2   18[COMRAM] int 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8169 ;;      Params:         2       0       0       0       0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8171 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8172 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8173 ;;Total ram usage:        4 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    1
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_dtoa
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text27
  8184  004606                     __ptext27:
  8185                           	callstack 0
  8186  004606                     _abs:
  8187                           	callstack 25
  8188  004606  BE14               	btfsc	(abs@a+1)^0,7,c
  8189  004608  EF10  F023         	goto	u4690
  8190  00460C  5014               	movf	(abs@a+1)^0,w,c
  8191  00460E  E106               	bnz	u4691
  8192  004610  0413               	decf	abs@a^0,w,c
  8193  004612  B0D8               	btfsc	status,0,c
  8194  004614  EF0E  F023         	goto	u4691
  8195  004618  EF10  F023         	goto	u4690
  8196  00461C                     u4691:
  8197  00461C  EF1E  F023         	goto	l1125
  8198  004620                     u4690:
  8199  004620  C013  F015         	movff	abs@a,??_abs
  8200  004624  C014  F016         	movff	abs@a+1,??_abs+1
  8201  004628  1E15               	comf	??_abs^0,f,c
  8202  00462A  1E16               	comf	(??_abs+1)^0,f,c
  8203  00462C  4A15               	infsnz	??_abs^0,f,c
  8204  00462E  2A16               	incf	(??_abs+1)^0,f,c
  8205  004630  C015  F013         	movff	??_abs,?_abs
  8206  004634  C016  F014         	movff	??_abs+1,?_abs+1
  8207  004638  EF22  F023         	goto	l1128
  8208  00463C                     l1125:
  8209  00463C  C013  F013         	movff	abs@a,?_abs
  8210  004640  C014  F014         	movff	abs@a+1,?_abs+1
  8211  004644                     l1128:
  8212  004644  0012               	return		;funcret
  8213  004646                     __end_of_abs:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function ___aomod *****************
  8217 ;; Defined at:
  8218 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  dividend        8    0[COMRAM] long long 
  8221 ;;  divisor         8    8[COMRAM] long long 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  sign            1   17[COMRAM] unsigned char 
  8224 ;;  counter         1   16[COMRAM] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  8    0[COMRAM] long long 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8234 ;;      Params:        16       0       0       0       0       0       0       0       0
  8235 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8237 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8238 ;;Total ram usage:       18 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_dtoa
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           	psect	text28
  8249  003942                     __ptext28:
  8250                           	callstack 0
  8251  003942                     ___aomod:
  8252                           	callstack 25
  8253  003942  0E00               	movlw	0
  8254  003944  6E12               	movwf	___aomod@sign^0,c
  8255  003946  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8256  003948  EFAA  F01C         	goto	u3890
  8257  00394C  EFA8  F01C         	goto	u3891
  8258  003950                     u3891:
  8259  003950  EFBC  F01C         	goto	l3565
  8260  003954                     u3890:
  8261  003954  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8262  003956  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8263  003958  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8264  00395A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8265  00395C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8266  00395E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8267  003960  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8268  003962  6C01               	negf	___aomod@dividend^0,c
  8269  003964  0E00               	movlw	0
  8270  003966  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8271  003968  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8272  00396A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8273  00396C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8274  00396E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8275  003970  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8276  003972  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8277  003974  0E01               	movlw	1
  8278  003976  6E12               	movwf	___aomod@sign^0,c
  8279  003978                     l3565:
  8280  003978  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8281  00397A  EFC3  F01C         	goto	u3900
  8282  00397E  EFC1  F01C         	goto	u3901
  8283  003982                     u3901:
  8284  003982  EFD3  F01C         	goto	l3569
  8285  003986                     u3900:
  8286  003986  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8287  003988  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8288  00398A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8289  00398C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8290  00398E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8291  003990  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8292  003992  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8293  003994  6C09               	negf	___aomod@divisor^0,c
  8294  003996  0E00               	movlw	0
  8295  003998  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8296  00399A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8297  00399C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8298  00399E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8299  0039A0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8300  0039A2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8301  0039A4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8302  0039A6                     l3569:
  8303  0039A6  5009               	movf	___aomod@divisor^0,w,c
  8304  0039A8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8305  0039AA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8306  0039AC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8307  0039AE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8308  0039B0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8309  0039B2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8310  0039B4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8311  0039B6  B4D8               	btfsc	status,2,c
  8312  0039B8  EFE0  F01C         	goto	u3911
  8313  0039BC  EFE2  F01C         	goto	u3910
  8314  0039C0                     u3911:
  8315  0039C0  EF2A  F01D         	goto	l3585
  8316  0039C4                     u3910:
  8317  0039C4  0E01               	movlw	1
  8318  0039C6  6E11               	movwf	___aomod@counter^0,c
  8319  0039C8  EFF0  F01C         	goto	l3575
  8320  0039CC                     l3573:
  8321  0039CC  90D8               	bcf	status,0,c
  8322  0039CE  3609               	rlcf	___aomod@divisor^0,f,c
  8323  0039D0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8324  0039D2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8325  0039D4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8326  0039D6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8327  0039D8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8328  0039DA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8329  0039DC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8330  0039DE  2A11               	incf	___aomod@counter^0,f,c
  8331  0039E0                     l3575:
  8332  0039E0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8333  0039E2  EFF5  F01C         	goto	u3921
  8334  0039E6  EFF7  F01C         	goto	u3920
  8335  0039EA                     u3921:
  8336  0039EA  EFE6  F01C         	goto	l3573
  8337  0039EE                     u3920:
  8338  0039EE                     l3577:
  8339  0039EE  5009               	movf	___aomod@divisor^0,w,c
  8340  0039F0  5C01               	subwf	___aomod@dividend^0,w,c
  8341  0039F2  500A               	movf	(___aomod@divisor+1)^0,w,c
  8342  0039F4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8343  0039F6  500B               	movf	(___aomod@divisor+2)^0,w,c
  8344  0039F8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8345  0039FA  500C               	movf	(___aomod@divisor+3)^0,w,c
  8346  0039FC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8347  0039FE  500D               	movf	(___aomod@divisor+4)^0,w,c
  8348  003A00  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8349  003A02  500E               	movf	(___aomod@divisor+5)^0,w,c
  8350  003A04  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8351  003A06  500F               	movf	(___aomod@divisor+6)^0,w,c
  8352  003A08  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8353  003A0A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8354  003A0C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8355  003A0E  A0D8               	btfss	status,0,c
  8356  003A10  EF0C  F01D         	goto	u3931
  8357  003A14  EF0E  F01D         	goto	u3930
  8358  003A18                     u3931:
  8359  003A18  EF1E  F01D         	goto	l3581
  8360  003A1C                     u3930:
  8361  003A1C  5009               	movf	___aomod@divisor^0,w,c
  8362  003A1E  5E01               	subwf	___aomod@dividend^0,f,c
  8363  003A20  500A               	movf	(___aomod@divisor+1)^0,w,c
  8364  003A22  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8365  003A24  500B               	movf	(___aomod@divisor+2)^0,w,c
  8366  003A26  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8367  003A28  500C               	movf	(___aomod@divisor+3)^0,w,c
  8368  003A2A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8369  003A2C  500D               	movf	(___aomod@divisor+4)^0,w,c
  8370  003A2E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8371  003A30  500E               	movf	(___aomod@divisor+5)^0,w,c
  8372  003A32  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8373  003A34  500F               	movf	(___aomod@divisor+6)^0,w,c
  8374  003A36  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8375  003A38  5010               	movf	(___aomod@divisor+7)^0,w,c
  8376  003A3A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8377  003A3C                     l3581:
  8378  003A3C  90D8               	bcf	status,0,c
  8379  003A3E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8380  003A40  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8381  003A42  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8382  003A44  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8383  003A46  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8384  003A48  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8385  003A4A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8386  003A4C  3209               	rrcf	___aomod@divisor^0,f,c
  8387  003A4E  2E11               	decfsz	___aomod@counter^0,f,c
  8388  003A50  EFF7  F01C         	goto	l3577
  8389  003A54                     l3585:
  8390  003A54  5012               	movf	___aomod@sign^0,w,c
  8391  003A56  B4D8               	btfsc	status,2,c
  8392  003A58  EF30  F01D         	goto	u3941
  8393  003A5C  EF32  F01D         	goto	u3940
  8394  003A60                     u3941:
  8395  003A60  EF42  F01D         	goto	l3589
  8396  003A64                     u3940:
  8397  003A64  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8398  003A66  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8399  003A68  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8400  003A6A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8401  003A6C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8402  003A6E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8403  003A70  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8404  003A72  6C01               	negf	___aomod@dividend^0,c
  8405  003A74  0E00               	movlw	0
  8406  003A76  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8407  003A78  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8408  003A7A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8409  003A7C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8410  003A7E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8411  003A80  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8412  003A82  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8413  003A84                     l3589:
  8414  003A84  C001  F001         	movff	___aomod@dividend,?___aomod
  8415  003A88  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8416  003A8C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8417  003A90  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8418  003A94  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8419  003A98  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8420  003A9C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8421  003AA0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8422  003AA4  0012               	return		;funcret
  8423  003AA6                     __end_of___aomod:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function ___aodiv *****************
  8427 ;; Defined at:
  8428 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  dividend        8    0[COMRAM] long long 
  8431 ;;  divisor         8    8[COMRAM] long long 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  quotient        8   18[COMRAM] long long 
  8434 ;;  sign            1   17[COMRAM] unsigned char 
  8435 ;;  counter         1   16[COMRAM] unsigned char 
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  8    0[COMRAM] long long 
  8438 ;; Registers used:
  8439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8445 ;;      Params:        16       0       0       0       0       0       0       0       0
  8446 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8448 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8449 ;;Total ram usage:       26 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_dtoa
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text29
  8460  0037BA                     __ptext29:
  8461                           	callstack 0
  8462  0037BA                     ___aodiv:
  8463                           	callstack 25
  8464  0037BA  0E00               	movlw	0
  8465  0037BC  6E12               	movwf	___aodiv@sign^0,c
  8466  0037BE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8467  0037C0  EFE6  F01B         	goto	u3820
  8468  0037C4  EFE4  F01B         	goto	u3821
  8469  0037C8                     u3821:
  8470  0037C8  EFF8  F01B         	goto	l3521
  8471  0037CC                     u3820:
  8472  0037CC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8473  0037CE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8474  0037D0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8475  0037D2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8476  0037D4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8477  0037D6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8478  0037D8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8479  0037DA  6C09               	negf	___aodiv@divisor^0,c
  8480  0037DC  0E00               	movlw	0
  8481  0037DE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8482  0037E0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8483  0037E2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8484  0037E4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8485  0037E6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8486  0037E8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8487  0037EA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8488  0037EC  0E01               	movlw	1
  8489  0037EE  6E12               	movwf	___aodiv@sign^0,c
  8490  0037F0                     l3521:
  8491  0037F0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8492  0037F2  EFFF  F01B         	goto	u3830
  8493  0037F6  EFFD  F01B         	goto	u3831
  8494  0037FA                     u3831:
  8495  0037FA  EF11  F01C         	goto	l3527
  8496  0037FE                     u3830:
  8497  0037FE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8498  003800  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8499  003802  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8500  003804  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8501  003806  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8502  003808  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8503  00380A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8504  00380C  6C01               	negf	___aodiv@dividend^0,c
  8505  00380E  0E00               	movlw	0
  8506  003810  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8507  003812  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8508  003814  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8509  003816  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8510  003818  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8511  00381A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8512  00381C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8513  00381E  0E01               	movlw	1
  8514  003820  1A12               	xorwf	___aodiv@sign^0,f,c
  8515  003822                     l3527:
  8516  003822  EE20  F013         	lfsr	2,___aodiv@quotient
  8517  003826  0E07               	movlw	7
  8518  003828                     u3841:
  8519  003828  6ADE               	clrf	postinc2,c
  8520  00382A  06E8               	decf	wreg,f,c
  8521  00382C  E2FD               	bc	u3841
  8522  00382E  5009               	movf	___aodiv@divisor^0,w,c
  8523  003830  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8524  003832  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8525  003834  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8526  003836  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8527  003838  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8528  00383A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8529  00383C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8530  00383E  B4D8               	btfsc	status,2,c
  8531  003840  EF24  F01C         	goto	u3851
  8532  003844  EF26  F01C         	goto	u3850
  8533  003848                     u3851:
  8534  003848  EF78  F01C         	goto	l3549
  8535  00384C                     u3850:
  8536  00384C  0E01               	movlw	1
  8537  00384E  6E11               	movwf	___aodiv@counter^0,c
  8538  003850  EF34  F01C         	goto	l3535
  8539  003854                     l3533:
  8540  003854  90D8               	bcf	status,0,c
  8541  003856  3609               	rlcf	___aodiv@divisor^0,f,c
  8542  003858  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8543  00385A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8544  00385C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8545  00385E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8546  003860  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8547  003862  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8548  003864  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8549  003866  2A11               	incf	___aodiv@counter^0,f,c
  8550  003868                     l3535:
  8551  003868  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8552  00386A  EF39  F01C         	goto	u3861
  8553  00386E  EF3B  F01C         	goto	u3860
  8554  003872                     u3861:
  8555  003872  EF2A  F01C         	goto	l3533
  8556  003876                     u3860:
  8557  003876                     l3537:
  8558  003876  90D8               	bcf	status,0,c
  8559  003878  3613               	rlcf	___aodiv@quotient^0,f,c
  8560  00387A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8561  00387C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8562  00387E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8563  003880  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8564  003882  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8565  003884  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8566  003886  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8567  003888  5009               	movf	___aodiv@divisor^0,w,c
  8568  00388A  5C01               	subwf	___aodiv@dividend^0,w,c
  8569  00388C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8570  00388E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8571  003890  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8572  003892  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8573  003894  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8574  003896  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8575  003898  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8576  00389A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8577  00389C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8578  00389E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8579  0038A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8580  0038A2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8581  0038A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8582  0038A6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8583  0038A8  A0D8               	btfss	status,0,c
  8584  0038AA  EF59  F01C         	goto	u3871
  8585  0038AE  EF5B  F01C         	goto	u3870
  8586  0038B2                     u3871:
  8587  0038B2  EF6C  F01C         	goto	l3545
  8588  0038B6                     u3870:
  8589  0038B6  5009               	movf	___aodiv@divisor^0,w,c
  8590  0038B8  5E01               	subwf	___aodiv@dividend^0,f,c
  8591  0038BA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8592  0038BC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8593  0038BE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8594  0038C0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8595  0038C2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8596  0038C4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8597  0038C6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8598  0038C8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8599  0038CA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8600  0038CC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8601  0038CE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8602  0038D0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8603  0038D2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8604  0038D4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8605  0038D6  8013               	bsf	___aodiv@quotient^0,0,c
  8606  0038D8                     l3545:
  8607  0038D8  90D8               	bcf	status,0,c
  8608  0038DA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8609  0038DC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8610  0038DE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8611  0038E0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8612  0038E2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8613  0038E4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8614  0038E6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8615  0038E8  3209               	rrcf	___aodiv@divisor^0,f,c
  8616  0038EA  2E11               	decfsz	___aodiv@counter^0,f,c
  8617  0038EC  EF3B  F01C         	goto	l3537
  8618  0038F0                     l3549:
  8619  0038F0  5012               	movf	___aodiv@sign^0,w,c
  8620  0038F2  B4D8               	btfsc	status,2,c
  8621  0038F4  EF7E  F01C         	goto	u3881
  8622  0038F8  EF80  F01C         	goto	u3880
  8623  0038FC                     u3881:
  8624  0038FC  EF90  F01C         	goto	l3553
  8625  003900                     u3880:
  8626  003900  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8627  003902  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8628  003904  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8629  003906  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8630  003908  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8631  00390A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8632  00390C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8633  00390E  6C13               	negf	___aodiv@quotient^0,c
  8634  003910  0E00               	movlw	0
  8635  003912  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8636  003914  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8637  003916  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8638  003918  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8639  00391A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8640  00391C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8641  00391E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8642  003920                     l3553:
  8643  003920  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8644  003924  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8645  003928  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8646  00392C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8647  003930  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8648  003934  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8649  003938  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8650  00393C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8651  003940  0012               	return		;funcret
  8652  003942                     __end_of___aodiv:
  8653                           	callstack 0
  8654                           
  8655 ;; *************** function _atoi *****************
  8656 ;; Defined at:
  8657 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8660 ;;		 -> STR_5(6), STR_4(3), 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  n               2   20[COMRAM] int 
  8663 ;;  neg             2   13[COMRAM] int 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2    7[COMRAM] int 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8673 ;;      Params:         2       0       0       0       0       0       0       0       0
  8674 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8675 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8676 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8677 ;;Total ram usage:       15 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    2
  8680 ;; This function calls:
  8681 ;;		___wmul
  8682 ;;		_isdigit
  8683 ;;		_isspace
  8684 ;; This function is called by:
  8685 ;;		_vfpfcnvrt
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text30
  8690  0034A0                     __ptext30:
  8691                           	callstack 0
  8692  0034A0                     _atoi:
  8693                           	callstack 25
  8694  0034A0  0E00               	movlw	0
  8695  0034A2  6E16               	movwf	(atoi@n+1)^0,c
  8696  0034A4  0E00               	movlw	0
  8697  0034A6  6E15               	movwf	atoi@n^0,c
  8698  0034A8  0E00               	movlw	0
  8699  0034AA  6E0F               	movwf	(atoi@neg+1)^0,c
  8700  0034AC  0E00               	movlw	0
  8701  0034AE  6E0E               	movwf	atoi@neg^0,c
  8702  0034B0  EF5C  F01A         	goto	l4523
  8703  0034B4                     l4521:
  8704  0034B4  4A08               	infsnz	atoi@s^0,f,c
  8705  0034B6  2A09               	incf	(atoi@s+1)^0,f,c
  8706  0034B8                     l4523:
  8707  0034B8  0E01               	movlw	1
  8708  0034BA  6E14               	movwf	_atoi$965^0,c
  8709  0034BC  C008  FFF6         	movff	atoi@s,tblptrl
  8710  0034C0  C009  FFF7         	movff	atoi@s+1,tblptrh
  8711  0034C4                     	if	0	;tblptru may be non-zero
  8712  0034C4                     	endif
  8713  0034C4                     	if	0	;tblptru may be non-zero
  8714  0034C4                     	endif
  8715  0034C4  0008               	tblrd		*
  8716  0034C6  50F5               	movf	tablat,w,c
  8717  0034C8  0A20               	xorlw	32
  8718  0034CA  B4D8               	btfsc	status,2,c
  8719  0034CC  EF6A  F01A         	goto	u5651
  8720  0034D0  EF6C  F01A         	goto	u5650
  8721  0034D4                     u5651:
  8722  0034D4  EF89  F01A         	goto	l4531
  8723  0034D8                     u5650:
  8724  0034D8  0EF7               	movlw	247
  8725  0034DA  6E0A               	movwf	??_atoi^0,c
  8726  0034DC  0EFF               	movlw	255
  8727  0034DE  6E0B               	movwf	(??_atoi+1)^0,c
  8728  0034E0  C008  FFF6         	movff	atoi@s,tblptrl
  8729  0034E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8730  0034E8                     	if	0	;tblptru may be non-zero
  8731  0034E8                     	endif
  8732  0034E8                     	if	0	;tblptru may be non-zero
  8733  0034E8                     	endif
  8734  0034E8  0008               	tblrd		*
  8735  0034EA  50F5               	movf	tablat,w,c
  8736  0034EC  6E0C               	movwf	(??_atoi+2)^0,c
  8737  0034EE  6A0D               	clrf	(??_atoi+3)^0,c
  8738  0034F0  500A               	movf	??_atoi^0,w,c
  8739  0034F2  260C               	addwf	(??_atoi+2)^0,f,c
  8740  0034F4  500B               	movf	(??_atoi+1)^0,w,c
  8741  0034F6  220D               	addwfc	(??_atoi+3)^0,f,c
  8742  0034F8  500D               	movf	(??_atoi+3)^0,w,c
  8743  0034FA  E109               	bnz	u5660
  8744  0034FC  0E05               	movlw	5
  8745  0034FE  5C0C               	subwf	(??_atoi+2)^0,w,c
  8746  003500  A0D8               	btfss	status,0,c
  8747  003502  EF85  F01A         	goto	u5661
  8748  003506  EF87  F01A         	goto	u5660
  8749  00350A                     u5661:
  8750  00350A  EF89  F01A         	goto	l4531
  8751  00350E                     u5660:
  8752  00350E  0E00               	movlw	0
  8753  003510  6E14               	movwf	_atoi$965^0,c
  8754  003512                     l4531:
  8755  003512  C014  F010         	movff	_atoi$965,_atoi$964
  8756  003516  6A11               	clrf	(_atoi$964+1)^0,c
  8757  003518  5010               	movf	_atoi$964^0,w,c
  8758  00351A  1011               	iorwf	(_atoi$964+1)^0,w,c
  8759  00351C  A4D8               	btfss	status,2,c
  8760  00351E  EF93  F01A         	goto	u5671
  8761  003522  EF95  F01A         	goto	u5670
  8762  003526                     u5671:
  8763  003526  EF5A  F01A         	goto	l4521
  8764  00352A                     u5670:
  8765  00352A  EF9F  F01A         	goto	l4541
  8766  00352E                     l4537:
  8767  00352E  0E00               	movlw	0
  8768  003530  6E0F               	movwf	(atoi@neg+1)^0,c
  8769  003532  0E01               	movlw	1
  8770  003534  6E0E               	movwf	atoi@neg^0,c
  8771  003536                     l4539:
  8772  003536  4A08               	infsnz	atoi@s^0,f,c
  8773  003538  2A09               	incf	(atoi@s+1)^0,f,c
  8774  00353A  EFD4  F01A         	goto	l4547
  8775  00353E                     l4541:
  8776  00353E  C008  FFF6         	movff	atoi@s,tblptrl
  8777  003542  C009  FFF7         	movff	atoi@s+1,tblptrh
  8778  003546                     	if	0	;tblptru may be non-zero
  8779  003546                     	endif
  8780  003546                     	if	0	;tblptru may be non-zero
  8781  003546                     	endif
  8782  003546  0008               	tblrd		*
  8783  003548  50F5               	movf	tablat,w,c
  8784  00354A  6E0A               	movwf	??_atoi^0,c
  8785  00354C  6A0B               	clrf	(??_atoi+1)^0,c
  8786                           
  8787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8788                           ; Switch size 1, requested type "simple"
  8789                           ; Number of cases is 1, Range of values is 0 to 0
  8790                           ; switch strategies available:
  8791                           ; Name         Instructions Cycles
  8792                           ; simple_byte            4     3 (average)
  8793                           ;	Chosen strategy is simple_byte
  8794  00354E  500B               	movf	(??_atoi+1)^0,w,c
  8795  003550  0A00               	xorlw	0	; case 0
  8796  003552  B4D8               	btfsc	status,2,c
  8797  003554  EFAE  F01A         	goto	l5301
  8798  003558  EFD4  F01A         	goto	l4547
  8799  00355C                     l5301:
  8800                           
  8801                           ; Switch size 1, requested type "simple"
  8802                           ; Number of cases is 2, Range of values is 43 to 45
  8803                           ; switch strategies available:
  8804                           ; Name         Instructions Cycles
  8805                           ; simple_byte            7     4 (average)
  8806                           ;	Chosen strategy is simple_byte
  8807  00355C  500A               	movf	??_atoi^0,w,c
  8808  00355E  0A2B               	xorlw	43	; case 43
  8809  003560  B4D8               	btfsc	status,2,c
  8810  003562  EF9B  F01A         	goto	l4539
  8811  003566  0A06               	xorlw	6	; case 45
  8812  003568  B4D8               	btfsc	status,2,c
  8813  00356A  EF97  F01A         	goto	l4537
  8814  00356E  EFD4  F01A         	goto	l4547
  8815  003572                     l4543:
  8816  003572  C015  F001         	movff	atoi@n,___wmul@multiplier
  8817  003576  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8818  00357A  0E00               	movlw	0
  8819  00357C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8820  00357E  0E0A               	movlw	10
  8821  003580  6E03               	movwf	___wmul@multiplicand^0,c
  8822  003582  ECCA  F023         	call	___wmul	;wreg free
  8823  003586  C008  FFF6         	movff	atoi@s,tblptrl
  8824  00358A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8825  00358E                     	if	0	;tblptru may be non-zero
  8826  00358E                     	endif
  8827  00358E                     	if	0	;tblptru may be non-zero
  8828  00358E                     	endif
  8829  00358E  0008               	tblrd		*
  8830  003590  50F5               	movf	tablat,w,c
  8831  003592  5E01               	subwf	?___wmul^0,f,c
  8832  003594  0E00               	movlw	0
  8833  003596  5A02               	subwfb	(?___wmul+1)^0,f,c
  8834  003598  0E30               	movlw	48
  8835  00359A  2401               	addwf	?___wmul^0,w,c
  8836  00359C  6E15               	movwf	atoi@n^0,c
  8837  00359E  0E00               	movlw	0
  8838  0035A0  2002               	addwfc	(?___wmul+1)^0,w,c
  8839  0035A2  6E16               	movwf	(atoi@n+1)^0,c
  8840  0035A4  EF9B  F01A         	goto	l4539
  8841  0035A8                     l4547:
  8842  0035A8  0ED0               	movlw	208
  8843  0035AA  6E0A               	movwf	??_atoi^0,c
  8844  0035AC  0EFF               	movlw	255
  8845  0035AE  6E0B               	movwf	(??_atoi+1)^0,c
  8846  0035B0  C008  FFF6         	movff	atoi@s,tblptrl
  8847  0035B4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8848  0035B8                     	if	0	;tblptru may be non-zero
  8849  0035B8                     	endif
  8850  0035B8                     	if	0	;tblptru may be non-zero
  8851  0035B8                     	endif
  8852  0035B8  0008               	tblrd		*
  8853  0035BA  50F5               	movf	tablat,w,c
  8854  0035BC  6E0C               	movwf	(??_atoi+2)^0,c
  8855  0035BE  6A0D               	clrf	(??_atoi+3)^0,c
  8856  0035C0  500A               	movf	??_atoi^0,w,c
  8857  0035C2  260C               	addwf	(??_atoi+2)^0,f,c
  8858  0035C4  500B               	movf	(??_atoi+1)^0,w,c
  8859  0035C6  220D               	addwfc	(??_atoi+3)^0,f,c
  8860  0035C8  500D               	movf	(??_atoi+3)^0,w,c
  8861  0035CA  E10A               	bnz	u5680
  8862  0035CC  0E0A               	movlw	10
  8863  0035CE  5C0C               	subwf	(??_atoi+2)^0,w,c
  8864  0035D0  A0D8               	btfss	status,0,c
  8865  0035D2  EFED  F01A         	goto	u5681
  8866  0035D6  EFF0  F01A         	goto	u5680
  8867  0035DA                     u5681:
  8868  0035DA  0E01               	movlw	1
  8869  0035DC  EFF1  F01A         	goto	u5690
  8870  0035E0                     u5680:
  8871  0035E0  0E00               	movlw	0
  8872  0035E2                     u5690:
  8873  0035E2  6E12               	movwf	_atoi$966^0,c
  8874  0035E4  6A13               	clrf	(_atoi$966+1)^0,c
  8875  0035E6  5012               	movf	_atoi$966^0,w,c
  8876  0035E8  1013               	iorwf	(_atoi$966+1)^0,w,c
  8877  0035EA  A4D8               	btfss	status,2,c
  8878  0035EC  EFFA  F01A         	goto	u5701
  8879  0035F0  EFFC  F01A         	goto	u5700
  8880  0035F4                     u5701:
  8881  0035F4  EFB9  F01A         	goto	l4543
  8882  0035F8                     u5700:
  8883  0035F8  500E               	movf	atoi@neg^0,w,c
  8884  0035FA  100F               	iorwf	(atoi@neg+1)^0,w,c
  8885  0035FC  A4D8               	btfss	status,2,c
  8886  0035FE  EF03  F01B         	goto	u5711
  8887  003602  EF05  F01B         	goto	u5710
  8888  003606                     u5711:
  8889  003606  EF13  F01B         	goto	l1156
  8890  00360A                     u5710:
  8891  00360A  C015  F00A         	movff	atoi@n,??_atoi
  8892  00360E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8893  003612  1E0A               	comf	??_atoi^0,f,c
  8894  003614  1E0B               	comf	(??_atoi+1)^0,f,c
  8895  003616  4A0A               	infsnz	??_atoi^0,f,c
  8896  003618  2A0B               	incf	(??_atoi+1)^0,f,c
  8897  00361A  C00A  F008         	movff	??_atoi,?_atoi
  8898  00361E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8899  003622  EF17  F01B         	goto	l1159
  8900  003626                     l1156:
  8901  003626  C015  F008         	movff	atoi@n,?_atoi
  8902  00362A  C016  F009         	movff	atoi@n+1,?_atoi+1
  8903  00362E                     l1159:
  8904  00362E  0012               	return		;funcret
  8905  003630                     __end_of_atoi:
  8906                           	callstack 0
  8907                           
  8908 ;; *************** function _isspace *****************
  8909 ;; Defined at:
  8910 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  c               2    0[COMRAM] int 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  2    0[COMRAM] int 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8924 ;;      Params:         2       0       0       0       0       0       0       0       0
  8925 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8926 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8927 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8928 ;;Total ram usage:        7 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; Hardware stack levels required when called:    1
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_atoi
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text31
  8939  0043AE                     __ptext31:
  8940                           	callstack 0
  8941  0043AE                     _isspace:
  8942                           	callstack 25
  8943  0043AE  0E01               	movlw	1
  8944  0043B0  6E07               	movwf	_isspace$995^0,c
  8945  0043B2  0E20               	movlw	32
  8946  0043B4  1801               	xorwf	isspace@c^0,w,c
  8947  0043B6  1002               	iorwf	(isspace@c+1)^0,w,c
  8948  0043B8  B4D8               	btfsc	status,2,c
  8949  0043BA  EFE1  F021         	goto	u4941
  8950  0043BE  EFE3  F021         	goto	u4940
  8951  0043C2                     u4941:
  8952  0043C2  EFFC  F021         	goto	l4139
  8953  0043C6                     u4940:
  8954  0043C6  0EF7               	movlw	247
  8955  0043C8  6E03               	movwf	??_isspace^0,c
  8956  0043CA  0EFF               	movlw	255
  8957  0043CC  6E04               	movwf	(??_isspace+1)^0,c
  8958  0043CE  C001  F005         	movff	isspace@c,??_isspace+2
  8959  0043D2  C002  F006         	movff	isspace@c+1,??_isspace+3
  8960  0043D6  5003               	movf	??_isspace^0,w,c
  8961  0043D8  2605               	addwf	(??_isspace+2)^0,f,c
  8962  0043DA  5004               	movf	(??_isspace+1)^0,w,c
  8963  0043DC  2206               	addwfc	(??_isspace+3)^0,f,c
  8964  0043DE  5006               	movf	(??_isspace+3)^0,w,c
  8965  0043E0  E109               	bnz	u4950
  8966  0043E2  0E05               	movlw	5
  8967  0043E4  5C05               	subwf	(??_isspace+2)^0,w,c
  8968  0043E6  A0D8               	btfss	status,0,c
  8969  0043E8  EFF8  F021         	goto	u4951
  8970  0043EC  EFFA  F021         	goto	u4950
  8971  0043F0                     u4951:
  8972  0043F0  EFFC  F021         	goto	l4139
  8973  0043F4                     u4950:
  8974  0043F4  0E00               	movlw	0
  8975  0043F6  6E07               	movwf	_isspace$995^0,c
  8976  0043F8                     l4139:
  8977  0043F8  C007  F001         	movff	_isspace$995,?_isspace
  8978  0043FC  6A02               	clrf	(?_isspace+1)^0,c
  8979  0043FE  0012               	return		;funcret
  8980  004400                     __end_of_isspace:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function _isdigit *****************
  8984 ;; Defined at:
  8985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  c               2    0[COMRAM] int 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  2    0[COMRAM] int 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8999 ;;      Params:         2       0       0       0       0       0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9001 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9002 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9003 ;;Total ram usage:        6 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    1
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_vfpfcnvrt
  9010 ;;		_atoi
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text32
  9015  0046F6                     __ptext32:
  9016                           	callstack 0
  9017  0046F6                     _isdigit:
  9018                           	callstack 26
  9019  0046F6  0ED0               	movlw	208
  9020  0046F8  6E03               	movwf	??_isdigit^0,c
  9021  0046FA  0EFF               	movlw	255
  9022  0046FC  6E04               	movwf	(??_isdigit+1)^0,c
  9023  0046FE  C001  F005         	movff	isdigit@c,??_isdigit+2
  9024  004702  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9025  004706  5003               	movf	??_isdigit^0,w,c
  9026  004708  2605               	addwf	(??_isdigit+2)^0,f,c
  9027  00470A  5004               	movf	(??_isdigit+1)^0,w,c
  9028  00470C  2206               	addwfc	(??_isdigit+3)^0,f,c
  9029  00470E  5006               	movf	(??_isdigit+3)^0,w,c
  9030  004710  E10A               	bnz	u4920
  9031  004712  0E0A               	movlw	10
  9032  004714  5C05               	subwf	(??_isdigit+2)^0,w,c
  9033  004716  A0D8               	btfss	status,0,c
  9034  004718  EF90  F023         	goto	u4921
  9035  00471C  EF93  F023         	goto	u4920
  9036  004720                     u4921:
  9037  004720  0E01               	movlw	1
  9038  004722  EF94  F023         	goto	u4930
  9039  004726                     u4920:
  9040  004726  0E00               	movlw	0
  9041  004728                     u4930:
  9042  004728  6E01               	movwf	?_isdigit^0,c
  9043  00472A  6A02               	clrf	(?_isdigit+1)^0,c
  9044  00472C  0012               	return		;funcret
  9045  00472E                     __end_of_isdigit:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function ___wmul *****************
  9049 ;; Defined at:
  9050 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  multiplier      2    0[COMRAM] unsigned int 
  9053 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  product         2    4[COMRAM] unsigned int 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  2    0[COMRAM] unsigned int 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, prodl, prodh
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9065 ;;      Params:         4       0       0       0       0       0       0       0       0
  9066 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9068 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9069 ;;Total ram usage:        6 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_atoi
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text33
  9080  004794                     __ptext33:
  9081                           	callstack 0
  9082  004794                     ___wmul:
  9083                           	callstack 25
  9084  004794  5001               	movf	___wmul@multiplier^0,w,c
  9085  004796  0203               	mulwf	___wmul@multiplicand^0,c
  9086  004798  CFF3 F005          	movff	prodl,___wmul@product
  9087  00479C  CFF4 F006          	movff	prodh,___wmul@product+1
  9088  0047A0  5001               	movf	___wmul@multiplier^0,w,c
  9089  0047A2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9090  0047A4  50F3               	movf	243,w,c
  9091  0047A6  2606               	addwf	(___wmul@product+1)^0,f,c
  9092  0047A8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9093  0047AA  0203               	mulwf	___wmul@multiplicand^0,c
  9094  0047AC  50F3               	movf	243,w,c
  9095  0047AE  2606               	addwf	(___wmul@product+1)^0,f,c
  9096  0047B0  C005  F001         	movff	___wmul@product,?___wmul
  9097  0047B4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9098  0047B8  0012               	return		;funcret
  9099  0047BA                     __end_of___wmul:
  9100                           	callstack 0
  9101                           
  9102 ;; *************** function _Secuence4 *****************
  9103 ;; Defined at:
  9104 ;;		line 303 in file "distance_finding.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  2   22[None  ] int 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9121 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9122 ;;Total ram usage:        2 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		_LCD_Clear
  9127 ;; This function is called by:
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text34
  9133  002950                     __ptext34:
  9134                           	callstack 0
  9135  002950                     _Secuence4:
  9136                           	callstack 26
  9137  002950                     
  9138                           ;distance_finding.c: 304:     TRISBbits.RB5 = 0;
  9139  002950  9A93               	bcf	147,5,c	;volatile
  9140                           
  9141                           ;distance_finding.c: 305:     TRISC=0xff;
  9142  002952  6894               	setf	148,c	;volatile
  9143                           
  9144                           ;distance_finding.c: 306:     RB5=1;
  9145  002954  8A81               	bsf	3969,5,c	;volatile
  9146                           
  9147                           ;distance_finding.c: 307:    if(RC0==1 && d == 0){
  9148  002956  A082               	btfss	3970,0,c	;volatile
  9149  002958  EFB0  F014         	goto	u6481
  9150  00295C  EFB2  F014         	goto	u6480
  9151  002960                     u6481:
  9152  002960  EFF4  F014         	goto	l151
  9153  002964                     u6480:
  9154  002964  505D               	movf	_d^0,w,c
  9155  002966  105E               	iorwf	(_d+1)^0,w,c
  9156  002968  A4D8               	btfss	status,2,c
  9157  00296A  EFB9  F014         	goto	u6491
  9158  00296E  EFBB  F014         	goto	u6490
  9159  002972                     u6491:
  9160  002972  EFF4  F014         	goto	l151
  9161  002976                     u6490:
  9162  002976                     
  9163                           ;distance_finding.c: 308:         d=1;
  9164  002976  0E00               	movlw	0
  9165  002978  6E5E               	movwf	(_d+1)^0,c
  9166  00297A  0E01               	movlw	1
  9167  00297C  6E5D               	movwf	_d^0,c
  9168  00297E                     
  9169                           ;distance_finding.c: 309:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9170  00297E  0E03               	movlw	3
  9171  002980  6E0A               	movwf	(??_Secuence4+1)^0,c
  9172  002982  0E8A               	movlw	138
  9173  002984  6E09               	movwf	??_Secuence4^0,c
  9174  002986  0E56               	movlw	86
  9175  002988                     u6707:
  9176  002988  2EE8               	decfsz	wreg,f,c
  9177  00298A  D7FE               	bra	u6707
  9178  00298C  2E09               	decfsz	??_Secuence4^0,f,c
  9179  00298E  D7FC               	bra	u6707
  9180  002990  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9181  002992  D7FA               	bra	u6707
  9182  002994                     
  9183                           ;distance_finding.c: 310:         if(RC0==0 && d==1){
  9184  002994  B082               	btfsc	3970,0,c	;volatile
  9185  002996  EFCF  F014         	goto	u6501
  9186  00299A  EFD1  F014         	goto	u6500
  9187  00299E                     u6501:
  9188  00299E  EFD7  F015         	goto	l5173
  9189  0029A2                     u6500:
  9190  0029A2  045D               	decf	_d^0,w,c
  9191  0029A4  105E               	iorwf	(_d+1)^0,w,c
  9192  0029A6  A4D8               	btfss	status,2,c
  9193  0029A8  EFD8  F014         	goto	u6511
  9194  0029AC  EFDA  F014         	goto	u6510
  9195  0029B0                     u6511:
  9196  0029B0  EFD7  F015         	goto	l5173
  9197  0029B4                     u6510:
  9198  0029B4                     
  9199                           ;distance_finding.c: 311:         f=0;
  9200  0029B4  0E00               	movlw	0
  9201  0029B6  0100               	movlb	0	; () banked
  9202  0029B8  6FED               	movwf	(_f+1)& (0+255),b
  9203  0029BA  0E00               	movlw	0
  9204  0029BC  6FEC               	movwf	_f& (0+255),b
  9205                           
  9206                           ;distance_finding.c: 312:         d=0;
  9207  0029BE  0E00               	movlw	0
  9208  0029C0  6E5E               	movwf	(_d+1)^0,c
  9209  0029C2  0E00               	movlw	0
  9210  0029C4  6E5D               	movwf	_d^0,c
  9211  0029C6                     
  9212                           ; BSR set to: 0
  9213                           ;distance_finding.c: 313:         LCD_Clear();
  9214  0029C6  ECF0  F023         	call	_LCD_Clear	;wreg free
  9215  0029CA                     
  9216                           ;distance_finding.c: 314:         a = 0;
  9217  0029CA  0E00               	movlw	0
  9218  0029CC  0100               	movlb	0	; () banked
  9219  0029CE  6FE7               	movwf	(_a+1)& (0+255),b
  9220  0029D0  0E00               	movlw	0
  9221  0029D2  6FE6               	movwf	_a& (0+255),b
  9222  0029D4                     
  9223                           ; BSR set to: 0
  9224                           ;distance_finding.c: 315:         c = 0;
  9225  0029D4  0E00               	movlw	0
  9226  0029D6  6FEF               	movwf	(_c+1)& (0+255),b
  9227  0029D8  0E00               	movlw	0
  9228  0029DA  6FEE               	movwf	_c& (0+255),b
  9229  0029DC                     
  9230                           ; BSR set to: 0
  9231                           ;distance_finding.c: 316:         LCD_Clear();
  9232  0029DC  ECF0  F023         	call	_LCD_Clear	;wreg free
  9233  0029E0                     
  9234                           ;distance_finding.c: 317:         RB5=0;
  9235  0029E0  9A81               	bcf	3969,5,c	;volatile
  9236  0029E2                     
  9237                           ;distance_finding.c: 320:         RC0=0;
  9238  0029E2  9082               	bcf	3970,0,c	;volatile
  9239  0029E4  EFD7  F015         	goto	l5173
  9240  0029E8                     l151:
  9241  0029E8  A282               	btfss	3970,1,c	;volatile
  9242  0029EA  EFF9  F014         	goto	u6521
  9243  0029EE  EFFB  F014         	goto	u6520
  9244  0029F2                     u6521:
  9245  0029F2  EF32  F015         	goto	l154
  9246  0029F6                     u6520:
  9247  0029F6  505D               	movf	_d^0,w,c
  9248  0029F8  105E               	iorwf	(_d+1)^0,w,c
  9249  0029FA  A4D8               	btfss	status,2,c
  9250  0029FC  EF02  F015         	goto	u6531
  9251  002A00  EF04  F015         	goto	u6530
  9252  002A04                     u6531:
  9253  002A04  EF32  F015         	goto	l154
  9254  002A08                     u6530:
  9255  002A08                     
  9256                           ;distance_finding.c: 324:         d=1;
  9257  002A08  0E00               	movlw	0
  9258  002A0A  6E5E               	movwf	(_d+1)^0,c
  9259  002A0C  0E01               	movlw	1
  9260  002A0E  6E5D               	movwf	_d^0,c
  9261  002A10                     
  9262                           ;distance_finding.c: 325:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9263  002A10  0E03               	movlw	3
  9264  002A12  6E0A               	movwf	(??_Secuence4+1)^0,c
  9265  002A14  0E8A               	movlw	138
  9266  002A16  6E09               	movwf	??_Secuence4^0,c
  9267  002A18  0E56               	movlw	86
  9268  002A1A                     u6717:
  9269  002A1A  2EE8               	decfsz	wreg,f,c
  9270  002A1C  D7FE               	bra	u6717
  9271  002A1E  2E09               	decfsz	??_Secuence4^0,f,c
  9272  002A20  D7FC               	bra	u6717
  9273  002A22  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9274  002A24  D7FA               	bra	u6717
  9275  002A26                     
  9276                           ;distance_finding.c: 326:         if(RC1==0 && d==1){
  9277  002A26  B282               	btfsc	3970,1,c	;volatile
  9278  002A28  EF18  F015         	goto	u6541
  9279  002A2C  EF1A  F015         	goto	u6540
  9280  002A30                     u6541:
  9281  002A30  EFD7  F015         	goto	l5173
  9282  002A34                     u6540:
  9283  002A34  045D               	decf	_d^0,w,c
  9284  002A36  105E               	iorwf	(_d+1)^0,w,c
  9285  002A38  A4D8               	btfss	status,2,c
  9286  002A3A  EF21  F015         	goto	u6551
  9287  002A3E  EF23  F015         	goto	u6550
  9288  002A42                     u6551:
  9289  002A42  EFD7  F015         	goto	l5173
  9290  002A46                     u6550:
  9291  002A46                     
  9292                           ;distance_finding.c: 327:         f=0;
  9293  002A46  0E00               	movlw	0
  9294  002A48  0100               	movlb	0	; () banked
  9295  002A4A  6FED               	movwf	(_f+1)& (0+255),b
  9296  002A4C  0E00               	movlw	0
  9297  002A4E  6FEC               	movwf	_f& (0+255),b
  9298  002A50                     
  9299                           ; BSR set to: 0
  9300                           ;distance_finding.c: 328:         RB5=0;
  9301  002A50  9A81               	bcf	3969,5,c	;volatile
  9302                           
  9303                           ;distance_finding.c: 329:         a=0;
  9304  002A52  0E00               	movlw	0
  9305  002A54  6FE7               	movwf	(_a+1)& (0+255),b
  9306  002A56  0E00               	movlw	0
  9307  002A58  6FE6               	movwf	_a& (0+255),b
  9308  002A5A                     
  9309                           ; BSR set to: 0
  9310                           ;distance_finding.c: 330:         c++;
  9311  002A5A  4BEE               	infsnz	_c& (0+255),f,b
  9312  002A5C  2BEF               	incf	(_c+1)& (0+255),f,b
  9313  002A5E                     
  9314                           ; BSR set to: 0
  9315                           ;distance_finding.c: 331:         RC1=0;
  9316  002A5E  9282               	bcf	3970,1,c	;volatile
  9317  002A60  EFD7  F015         	goto	l5173
  9318  002A64                     l154:
  9319  002A64  A482               	btfss	3970,2,c	;volatile
  9320  002A66  EF37  F015         	goto	u6561
  9321  002A6A  EF39  F015         	goto	u6560
  9322  002A6E                     u6561:
  9323  002A6E  EF91  F015         	goto	l157
  9324  002A72                     u6560:
  9325  002A72  505D               	movf	_d^0,w,c
  9326  002A74  105E               	iorwf	(_d+1)^0,w,c
  9327  002A76  A4D8               	btfss	status,2,c
  9328  002A78  EF40  F015         	goto	u6571
  9329  002A7C  EF42  F015         	goto	u6570
  9330  002A80                     u6571:
  9331  002A80  EF91  F015         	goto	l157
  9332  002A84                     u6570:
  9333  002A84                     
  9334                           ;distance_finding.c: 335:         d=1;
  9335  002A84  0E00               	movlw	0
  9336  002A86  6E5E               	movwf	(_d+1)^0,c
  9337  002A88  0E01               	movlw	1
  9338  002A8A  6E5D               	movwf	_d^0,c
  9339  002A8C                     
  9340                           ;distance_finding.c: 336:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9341  002A8C  0E03               	movlw	3
  9342  002A8E  6E0A               	movwf	(??_Secuence4+1)^0,c
  9343  002A90  0E8A               	movlw	138
  9344  002A92  6E09               	movwf	??_Secuence4^0,c
  9345  002A94  0E56               	movlw	86
  9346  002A96                     u6727:
  9347  002A96  2EE8               	decfsz	wreg,f,c
  9348  002A98  D7FE               	bra	u6727
  9349  002A9A  2E09               	decfsz	??_Secuence4^0,f,c
  9350  002A9C  D7FC               	bra	u6727
  9351  002A9E  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9352  002AA0  D7FA               	bra	u6727
  9353  002AA2                     
  9354                           ;distance_finding.c: 337:         if(RC2==0 && d==1){
  9355  002AA2  B482               	btfsc	3970,2,c	;volatile
  9356  002AA4  EF56  F015         	goto	u6581
  9357  002AA8  EF58  F015         	goto	u6580
  9358  002AAC                     u6581:
  9359  002AAC  EFD7  F015         	goto	l5173
  9360  002AB0                     u6580:
  9361  002AB0  045D               	decf	_d^0,w,c
  9362  002AB2  105E               	iorwf	(_d+1)^0,w,c
  9363  002AB4  A4D8               	btfss	status,2,c
  9364  002AB6  EF5F  F015         	goto	u6591
  9365  002ABA  EF61  F015         	goto	u6590
  9366  002ABE                     u6591:
  9367  002ABE  EFD7  F015         	goto	l5173
  9368  002AC2                     u6590:
  9369  002AC2                     
  9370                           ;distance_finding.c: 338:         f=0;
  9371  002AC2  0E00               	movlw	0
  9372  002AC4  0100               	movlb	0	; () banked
  9373  002AC6  6FED               	movwf	(_f+1)& (0+255),b
  9374  002AC8  0E00               	movlw	0
  9375  002ACA  6FEC               	movwf	_f& (0+255),b
  9376                           
  9377                           ;distance_finding.c: 339:         d=0;
  9378  002ACC  0E00               	movlw	0
  9379  002ACE  6E5E               	movwf	(_d+1)^0,c
  9380  002AD0  0E00               	movlw	0
  9381  002AD2  6E5D               	movwf	_d^0,c
  9382  002AD4                     
  9383                           ; BSR set to: 0
  9384                           ;distance_finding.c: 340:         RB5=0;
  9385  002AD4  9A81               	bcf	3969,5,c	;volatile
  9386  002AD6                     
  9387                           ; BSR set to: 0
  9388                           ;distance_finding.c: 341:         LCD_Clear();
  9389  002AD6  ECF0  F023         	call	_LCD_Clear	;wreg free
  9390  002ADA                     
  9391                           ;distance_finding.c: 343:         if(b==1){
  9392  002ADA  0100               	movlb	0	; () banked
  9393  002ADC  05F8               	decf	_b& (0+255),w,b
  9394  002ADE  11F9               	iorwf	(_b+1)& (0+255),w,b
  9395  002AE0  A4D8               	btfss	status,2,c
  9396  002AE2  EF75  F015         	goto	u6601
  9397  002AE6  EF77  F015         	goto	u6600
  9398  002AEA                     u6601:
  9399  002AEA  EF83  F015         	goto	l5147
  9400  002AEE                     u6600:
  9401  002AEE                     
  9402                           ; BSR set to: 0
  9403                           ;distance_finding.c: 344:             b=2;
  9404  002AEE  0E00               	movlw	0
  9405  002AF0  6FF9               	movwf	(_b+1)& (0+255),b
  9406  002AF2  0E02               	movlw	2
  9407  002AF4  6FF8               	movwf	_b& (0+255),b
  9408                           
  9409                           ;distance_finding.c: 345:             c=0;
  9410  002AF6  0E00               	movlw	0
  9411  002AF8  6FEF               	movwf	(_c+1)& (0+255),b
  9412  002AFA  0E00               	movlw	0
  9413  002AFC  6FEE               	movwf	_c& (0+255),b
  9414  002AFE                     
  9415                           ; BSR set to: 0
  9416                           ;distance_finding.c: 346:             LCD_Clear();
  9417  002AFE  ECF0  F023         	call	_LCD_Clear	;wreg free
  9418                           
  9419                           ;distance_finding.c: 348:         }
  9420  002B02  EF87  F015         	goto	l5149
  9421  002B06                     l5147:
  9422                           
  9423                           ; BSR set to: 0
  9424  002B06  0E00               	movlw	0
  9425  002B08  6FF9               	movwf	(_b+1)& (0+255),b
  9426  002B0A  0E01               	movlw	1
  9427  002B0C  6FF8               	movwf	_b& (0+255),b
  9428  002B0E                     l5149:
  9429                           
  9430                           ;distance_finding.c: 350:          RC2=0;
  9431  002B0E  9482               	bcf	3970,2,c	;volatile
  9432                           
  9433                           ;distance_finding.c: 351:          c=0;
  9434  002B10  0E00               	movlw	0
  9435  002B12  0100               	movlb	0	; () banked
  9436  002B14  6FEF               	movwf	(_c+1)& (0+255),b
  9437  002B16  0E00               	movlw	0
  9438  002B18  6FEE               	movwf	_c& (0+255),b
  9439  002B1A                     
  9440                           ; BSR set to: 0
  9441                           ;distance_finding.c: 352:          LCD_Clear();
  9442  002B1A  ECF0  F023         	call	_LCD_Clear	;wreg free
  9443  002B1E  EFD7  F015         	goto	l5173
  9444  002B22                     l157:
  9445  002B22  A882               	btfss	3970,4,c	;volatile
  9446  002B24  EF96  F015         	goto	u6611
  9447  002B28  EF98  F015         	goto	u6610
  9448  002B2C                     u6611:
  9449  002B2C  EFD3  F015         	goto	l162
  9450  002B30                     u6610:
  9451  002B30  045D               	decf	_d^0,w,c
  9452  002B32  105E               	iorwf	(_d+1)^0,w,c
  9453  002B34  A4D8               	btfss	status,2,c
  9454  002B36  EF9F  F015         	goto	u6621
  9455  002B3A  EFA1  F015         	goto	u6620
  9456  002B3E                     u6621:
  9457  002B3E  EFD3  F015         	goto	l162
  9458  002B42                     u6620:
  9459  002B42                     
  9460                           ;distance_finding.c: 356:         d=1;
  9461  002B42  0E00               	movlw	0
  9462  002B44  6E5E               	movwf	(_d+1)^0,c
  9463  002B46  0E01               	movlw	1
  9464  002B48  6E5D               	movwf	_d^0,c
  9465  002B4A                     
  9466                           ;distance_finding.c: 357:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9467  002B4A  0E03               	movlw	3
  9468  002B4C  6E0A               	movwf	(??_Secuence4+1)^0,c
  9469  002B4E  0E8A               	movlw	138
  9470  002B50  6E09               	movwf	??_Secuence4^0,c
  9471  002B52  0E56               	movlw	86
  9472  002B54                     u6737:
  9473  002B54  2EE8               	decfsz	wreg,f,c
  9474  002B56  D7FE               	bra	u6737
  9475  002B58  2E09               	decfsz	??_Secuence4^0,f,c
  9476  002B5A  D7FC               	bra	u6737
  9477  002B5C  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9478  002B5E  D7FA               	bra	u6737
  9479  002B60                     
  9480                           ;distance_finding.c: 358:         if(RC1==0 && d==1){
  9481  002B60  B282               	btfsc	3970,1,c	;volatile
  9482  002B62  EFB5  F015         	goto	u6631
  9483  002B66  EFB7  F015         	goto	u6630
  9484  002B6A                     u6631:
  9485  002B6A  EFD7  F015         	goto	l5173
  9486  002B6E                     u6630:
  9487  002B6E  045D               	decf	_d^0,w,c
  9488  002B70  105E               	iorwf	(_d+1)^0,w,c
  9489  002B72  A4D8               	btfss	status,2,c
  9490  002B74  EFBE  F015         	goto	u6641
  9491  002B78  EFC0  F015         	goto	u6640
  9492  002B7C                     u6641:
  9493  002B7C  EFD7  F015         	goto	l5173
  9494  002B80                     u6640:
  9495  002B80                     
  9496                           ;distance_finding.c: 359:           f=0;
  9497  002B80  0E00               	movlw	0
  9498  002B82  0100               	movlb	0	; () banked
  9499  002B84  6FED               	movwf	(_f+1)& (0+255),b
  9500  002B86  0E00               	movlw	0
  9501  002B88  6FEC               	movwf	_f& (0+255),b
  9502                           
  9503                           ;distance_finding.c: 360:           d=0;
  9504  002B8A  0E00               	movlw	0
  9505  002B8C  6E5E               	movwf	(_d+1)^0,c
  9506  002B8E  0E00               	movlw	0
  9507  002B90  6E5D               	movwf	_d^0,c
  9508  002B92                     
  9509                           ; BSR set to: 0
  9510                           ;distance_finding.c: 361:           RB5=0;
  9511  002B92  9A81               	bcf	3969,5,c	;volatile
  9512  002B94                     
  9513                           ; BSR set to: 0
  9514                           ;distance_finding.c: 362:           _delay((unsigned long)((300)*(20000000/4000000.0)));
  9515  002B94  0ED6               	movlw	214
  9516  002B96                     u6747:
  9517  002B96  D000               	nop2	
  9518  002B98  D000               	nop2	
  9519  002B9A  2EE8               	decfsz	wreg,f,c
  9520  002B9C  D7FC               	bra	u6747
  9521  002B9E  D000               	nop2	
  9522  002BA0                     
  9523                           ;distance_finding.c: 363:           RC4=0;
  9524  002BA0  9882               	bcf	3970,4,c	;volatile
  9525  002BA2  EFD7  F015         	goto	l5173
  9526  002BA6                     l162:
  9527                           
  9528                           ;distance_finding.c: 367:         RB5=0;
  9529  002BA6  9A81               	bcf	3969,5,c	;volatile
  9530                           
  9531                           ;distance_finding.c: 368:         TRISBbits.RB5 = 1;
  9532  002BA8  8A93               	bsf	147,5,c	;volatile
  9533  002BAA                     
  9534                           ;distance_finding.c: 369:           TRISC=0x00;
  9535  002BAA  0E00               	movlw	0
  9536  002BAC  6E94               	movwf	148,c	;volatile
  9537  002BAE                     l5173:
  9538                           
  9539                           ;distance_finding.c: 372:     RB5=0;
  9540  002BAE  9A81               	bcf	3969,5,c	;volatile
  9541  002BB0                     
  9542                           ;distance_finding.c: 373:     TRISBbits.RB5 = 1;
  9543  002BB0  8A93               	bsf	147,5,c	;volatile
  9544                           
  9545                           ;distance_finding.c: 374:     TRISC=0x00;
  9546  002BB2  0E00               	movlw	0
  9547  002BB4  6E94               	movwf	148,c	;volatile
  9548  002BB6  0012               	return		;funcret
  9549  002BB8                     __end_of_Secuence4:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _Secuence3 *****************
  9553 ;; Defined at:
  9554 ;;		line 228 in file "distance_finding.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  2   20[None  ] int 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9570 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9571 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    1
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_main
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text35
  9583  002BB8                     __ptext35:
  9584                           	callstack 0
  9585  002BB8                     _Secuence3:
  9586                           	callstack 29
  9587  002BB8                     
  9588                           ;distance_finding.c: 229:     TRISBbits.RB4 = 0;
  9589  002BB8  9893               	bcf	147,4,c	;volatile
  9590                           
  9591                           ;distance_finding.c: 230:     TRISC=0xff;
  9592  002BBA  6894               	setf	148,c	;volatile
  9593                           
  9594                           ;distance_finding.c: 231:     RB4=1;
  9595  002BBC  8881               	bsf	3969,4,c	;volatile
  9596                           
  9597                           ;distance_finding.c: 233:      if(RC0==1 && d == 0){
  9598  002BBE  A082               	btfss	3970,0,c	;volatile
  9599  002BC0  EFE4  F015         	goto	u6321
  9600  002BC4  EFE6  F015         	goto	u6320
  9601  002BC8                     u6321:
  9602  002BC8  EF28  F016         	goto	l136
  9603  002BCC                     u6320:
  9604  002BCC  505D               	movf	_d^0,w,c
  9605  002BCE  105E               	iorwf	(_d+1)^0,w,c
  9606  002BD0  A4D8               	btfss	status,2,c
  9607  002BD2  EFED  F015         	goto	u6331
  9608  002BD6  EFEF  F015         	goto	u6330
  9609  002BDA                     u6331:
  9610  002BDA  EF28  F016         	goto	l136
  9611  002BDE                     u6330:
  9612  002BDE                     
  9613                           ;distance_finding.c: 234:         d=1;
  9614  002BDE  0E00               	movlw	0
  9615  002BE0  6E5E               	movwf	(_d+1)^0,c
  9616  002BE2  0E01               	movlw	1
  9617  002BE4  6E5D               	movwf	_d^0,c
  9618  002BE6                     
  9619                           ;distance_finding.c: 235:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9620  002BE6  0E03               	movlw	3
  9621  002BE8  6E02               	movwf	(??_Secuence3+1)^0,c
  9622  002BEA  0E8A               	movlw	138
  9623  002BEC  6E01               	movwf	??_Secuence3^0,c
  9624  002BEE  0E56               	movlw	86
  9625  002BF0                     u6757:
  9626  002BF0  2EE8               	decfsz	wreg,f,c
  9627  002BF2  D7FE               	bra	u6757
  9628  002BF4  2E01               	decfsz	??_Secuence3^0,f,c
  9629  002BF6  D7FC               	bra	u6757
  9630  002BF8  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9631  002BFA  D7FA               	bra	u6757
  9632  002BFC                     
  9633                           ;distance_finding.c: 236:         if(RC0==0 && d==1){
  9634  002BFC  B082               	btfsc	3970,0,c	;volatile
  9635  002BFE  EF03  F016         	goto	u6341
  9636  002C02  EF05  F016         	goto	u6340
  9637  002C06                     u6341:
  9638  002C06  EF01  F017         	goto	l5077
  9639  002C0A                     u6340:
  9640  002C0A  045D               	decf	_d^0,w,c
  9641  002C0C  105E               	iorwf	(_d+1)^0,w,c
  9642  002C0E  A4D8               	btfss	status,2,c
  9643  002C10  EF0C  F016         	goto	u6351
  9644  002C14  EF0E  F016         	goto	u6350
  9645  002C18                     u6351:
  9646  002C18  EF01  F017         	goto	l5077
  9647  002C1C                     u6350:
  9648  002C1C                     
  9649                           ;distance_finding.c: 237:         f=0;
  9650  002C1C  0E00               	movlw	0
  9651  002C1E  0100               	movlb	0	; () banked
  9652  002C20  6FED               	movwf	(_f+1)& (0+255),b
  9653  002C22  0E00               	movlw	0
  9654  002C24  6FEC               	movwf	_f& (0+255),b
  9655                           
  9656                           ;distance_finding.c: 238:         d=0;
  9657  002C26  0E00               	movlw	0
  9658  002C28  6E5E               	movwf	(_d+1)^0,c
  9659  002C2A  0E00               	movlw	0
  9660  002C2C  6E5D               	movwf	_d^0,c
  9661  002C2E                     
  9662                           ; BSR set to: 0
  9663                           ;distance_finding.c: 239:         c++;
  9664  002C2E  4BEE               	infsnz	_c& (0+255),f,b
  9665  002C30  2BEF               	incf	(_c+1)& (0+255),f,b
  9666  002C32                     
  9667                           ; BSR set to: 0
  9668                           ;distance_finding.c: 240:         RB6=0;
  9669  002C32  9C81               	bcf	3969,6,c	;volatile
  9670  002C34                     
  9671                           ; BSR set to: 0
  9672                           ;distance_finding.c: 241:         a = 1;
  9673  002C34  0E00               	movlw	0
  9674  002C36  6FE7               	movwf	(_a+1)& (0+255),b
  9675  002C38  0E01               	movlw	1
  9676  002C3A  6FE6               	movwf	_a& (0+255),b
  9677  002C3C                     
  9678                           ; BSR set to: 0
  9679                           ;distance_finding.c: 243:         RB0=0;
  9680  002C3C  9081               	bcf	3969,0,c	;volatile
  9681  002C3E                     
  9682                           ; BSR set to: 0
  9683                           ;distance_finding.c: 245:          _delay((unsigned long)((300)*(20000000/4000000.0)));
  9684  002C3E  0ED6               	movlw	214
  9685  002C40                     u6767:
  9686  002C40  D000               	nop2	
  9687  002C42  D000               	nop2	
  9688  002C44  2EE8               	decfsz	wreg,f,c
  9689  002C46  D7FC               	bra	u6767
  9690  002C48  D000               	nop2	
  9691  002C4A                     
  9692                           ;distance_finding.c: 246:         RC0=0;
  9693  002C4A  9082               	bcf	3970,0,c	;volatile
  9694  002C4C  EF01  F017         	goto	l5077
  9695  002C50                     l136:
  9696  002C50  A282               	btfss	3970,1,c	;volatile
  9697  002C52  EF2D  F016         	goto	u6361
  9698  002C56  EF2F  F016         	goto	u6360
  9699  002C5A                     u6361:
  9700  002C5A  EF71  F016         	goto	l139
  9701  002C5E                     u6360:
  9702  002C5E  505D               	movf	_d^0,w,c
  9703  002C60  105E               	iorwf	(_d+1)^0,w,c
  9704  002C62  A4D8               	btfss	status,2,c
  9705  002C64  EF36  F016         	goto	u6371
  9706  002C68  EF38  F016         	goto	u6370
  9707  002C6C                     u6371:
  9708  002C6C  EF71  F016         	goto	l139
  9709  002C70                     u6370:
  9710  002C70                     
  9711                           ;distance_finding.c: 250:         d=1;
  9712  002C70  0E00               	movlw	0
  9713  002C72  6E5E               	movwf	(_d+1)^0,c
  9714  002C74  0E01               	movlw	1
  9715  002C76  6E5D               	movwf	_d^0,c
  9716  002C78                     
  9717                           ;distance_finding.c: 251:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9718  002C78  0E03               	movlw	3
  9719  002C7A  6E02               	movwf	(??_Secuence3+1)^0,c
  9720  002C7C  0E8A               	movlw	138
  9721  002C7E  6E01               	movwf	??_Secuence3^0,c
  9722  002C80  0E56               	movlw	86
  9723  002C82                     u6777:
  9724  002C82  2EE8               	decfsz	wreg,f,c
  9725  002C84  D7FE               	bra	u6777
  9726  002C86  2E01               	decfsz	??_Secuence3^0,f,c
  9727  002C88  D7FC               	bra	u6777
  9728  002C8A  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9729  002C8C  D7FA               	bra	u6777
  9730  002C8E                     
  9731                           ;distance_finding.c: 252:         if(RC1==0 && d==1){
  9732  002C8E  B282               	btfsc	3970,1,c	;volatile
  9733  002C90  EF4C  F016         	goto	u6381
  9734  002C94  EF4E  F016         	goto	u6380
  9735  002C98                     u6381:
  9736  002C98  EF01  F017         	goto	l5077
  9737  002C9C                     u6380:
  9738  002C9C  045D               	decf	_d^0,w,c
  9739  002C9E  105E               	iorwf	(_d+1)^0,w,c
  9740  002CA0  A4D8               	btfss	status,2,c
  9741  002CA2  EF55  F016         	goto	u6391
  9742  002CA6  EF57  F016         	goto	u6390
  9743  002CAA                     u6391:
  9744  002CAA  EF01  F017         	goto	l5077
  9745  002CAE                     u6390:
  9746  002CAE                     
  9747                           ;distance_finding.c: 253:         f=0;
  9748  002CAE  0E00               	movlw	0
  9749  002CB0  0100               	movlb	0	; () banked
  9750  002CB2  6FED               	movwf	(_f+1)& (0+255),b
  9751  002CB4  0E00               	movlw	0
  9752  002CB6  6FEC               	movwf	_f& (0+255),b
  9753                           
  9754                           ;distance_finding.c: 254:         d=0;
  9755  002CB8  0E00               	movlw	0
  9756  002CBA  6E5E               	movwf	(_d+1)^0,c
  9757  002CBC  0E00               	movlw	0
  9758  002CBE  6E5D               	movwf	_d^0,c
  9759  002CC0                     
  9760                           ; BSR set to: 0
  9761                           ;distance_finding.c: 255:         c++;
  9762  002CC0  4BEE               	infsnz	_c& (0+255),f,b
  9763  002CC2  2BEF               	incf	(_c+1)& (0+255),f,b
  9764  002CC4                     
  9765                           ; BSR set to: 0
  9766                           ;distance_finding.c: 256:         RB6=1;
  9767  002CC4  8C81               	bsf	3969,6,c	;volatile
  9768  002CC6                     
  9769                           ; BSR set to: 0
  9770                           ;distance_finding.c: 257:         a=2;
  9771  002CC6  0E00               	movlw	0
  9772  002CC8  6FE7               	movwf	(_a+1)& (0+255),b
  9773  002CCA  0E02               	movlw	2
  9774  002CCC  6FE6               	movwf	_a& (0+255),b
  9775  002CCE                     
  9776                           ; BSR set to: 0
  9777                           ;distance_finding.c: 259:         RB0=1;
  9778  002CCE  8081               	bsf	3969,0,c	;volatile
  9779  002CD0                     
  9780                           ; BSR set to: 0
  9781                           ;distance_finding.c: 260:         _delay((unsigned long)((300)*(20000000/4000000.0)));
  9782  002CD0  0ED6               	movlw	214
  9783  002CD2                     u6787:
  9784  002CD2  D000               	nop2	
  9785  002CD4  D000               	nop2	
  9786  002CD6  2EE8               	decfsz	wreg,f,c
  9787  002CD8  D7FC               	bra	u6787
  9788  002CDA  D000               	nop2	
  9789  002CDC                     
  9790                           ;distance_finding.c: 261:         RC1=0;
  9791  002CDC  9282               	bcf	3970,1,c	;volatile
  9792  002CDE  EF01  F017         	goto	l5077
  9793  002CE2                     l139:
  9794  002CE2  A482               	btfss	3970,2,c	;volatile
  9795  002CE4  EF76  F016         	goto	u6401
  9796  002CE8  EF78  F016         	goto	u6400
  9797  002CEC                     u6401:
  9798  002CEC  EFB9  F016         	goto	l142
  9799  002CF0                     u6400:
  9800  002CF0  505D               	movf	_d^0,w,c
  9801  002CF2  105E               	iorwf	(_d+1)^0,w,c
  9802  002CF4  A4D8               	btfss	status,2,c
  9803  002CF6  EF7F  F016         	goto	u6411
  9804  002CFA  EF81  F016         	goto	u6410
  9805  002CFE                     u6411:
  9806  002CFE  EFB9  F016         	goto	l142
  9807  002D02                     u6410:
  9808  002D02                     
  9809                           ;distance_finding.c: 266:         d=1;
  9810  002D02  0E00               	movlw	0
  9811  002D04  6E5E               	movwf	(_d+1)^0,c
  9812  002D06  0E01               	movlw	1
  9813  002D08  6E5D               	movwf	_d^0,c
  9814  002D0A                     
  9815                           ;distance_finding.c: 267:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9816  002D0A  0E03               	movlw	3
  9817  002D0C  6E02               	movwf	(??_Secuence3+1)^0,c
  9818  002D0E  0E8A               	movlw	138
  9819  002D10  6E01               	movwf	??_Secuence3^0,c
  9820  002D12  0E56               	movlw	86
  9821  002D14                     u6797:
  9822  002D14  2EE8               	decfsz	wreg,f,c
  9823  002D16  D7FE               	bra	u6797
  9824  002D18  2E01               	decfsz	??_Secuence3^0,f,c
  9825  002D1A  D7FC               	bra	u6797
  9826  002D1C  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9827  002D1E  D7FA               	bra	u6797
  9828  002D20                     
  9829                           ;distance_finding.c: 268:         if(RC2==0 && d==1){
  9830  002D20  B482               	btfsc	3970,2,c	;volatile
  9831  002D22  EF95  F016         	goto	u6421
  9832  002D26  EF97  F016         	goto	u6420
  9833  002D2A                     u6421:
  9834  002D2A  EF01  F017         	goto	l5077
  9835  002D2E                     u6420:
  9836  002D2E  045D               	decf	_d^0,w,c
  9837  002D30  105E               	iorwf	(_d+1)^0,w,c
  9838  002D32  A4D8               	btfss	status,2,c
  9839  002D34  EF9E  F016         	goto	u6431
  9840  002D38  EFA0  F016         	goto	u6430
  9841  002D3C                     u6431:
  9842  002D3C  EF01  F017         	goto	l5077
  9843  002D40                     u6430:
  9844  002D40                     
  9845                           ;distance_finding.c: 269:         f=0;
  9846  002D40  0E00               	movlw	0
  9847  002D42  0100               	movlb	0	; () banked
  9848  002D44  6FED               	movwf	(_f+1)& (0+255),b
  9849  002D46  0E00               	movlw	0
  9850  002D48  6FEC               	movwf	_f& (0+255),b
  9851                           
  9852                           ;distance_finding.c: 270:         d=0;
  9853  002D4A  0E00               	movlw	0
  9854  002D4C  6E5E               	movwf	(_d+1)^0,c
  9855  002D4E  0E00               	movlw	0
  9856  002D50  6E5D               	movwf	_d^0,c
  9857  002D52                     
  9858                           ; BSR set to: 0
  9859                           ;distance_finding.c: 271:         c++;
  9860  002D52  4BEE               	infsnz	_c& (0+255),f,b
  9861  002D54  2BEF               	incf	(_c+1)& (0+255),f,b
  9862  002D56                     
  9863                           ; BSR set to: 0
  9864                           ;distance_finding.c: 272:         RB4=0;
  9865  002D56  9881               	bcf	3969,4,c	;volatile
  9866  002D58                     
  9867                           ; BSR set to: 0
  9868                           ;distance_finding.c: 273:         a= 3;
  9869  002D58  0E00               	movlw	0
  9870  002D5A  6FE7               	movwf	(_a+1)& (0+255),b
  9871  002D5C  0E03               	movlw	3
  9872  002D5E  6FE6               	movwf	_a& (0+255),b
  9873  002D60                     
  9874                           ; BSR set to: 0
  9875                           ;distance_finding.c: 274:          _delay((unsigned long)((300)*(20000000/4000000.0)));
  9876  002D60  0ED6               	movlw	214
  9877  002D62                     u6807:
  9878  002D62  D000               	nop2	
  9879  002D64  D000               	nop2	
  9880  002D66  2EE8               	decfsz	wreg,f,c
  9881  002D68  D7FC               	bra	u6807
  9882  002D6A  D000               	nop2	
  9883  002D6C                     
  9884                           ;distance_finding.c: 275:          RC2=0;
  9885  002D6C  9482               	bcf	3970,2,c	;volatile
  9886  002D6E  EF01  F017         	goto	l5077
  9887  002D72                     l142:
  9888  002D72  A882               	btfss	3970,4,c	;volatile
  9889  002D74  EFBE  F016         	goto	u6441
  9890  002D78  EFC0  F016         	goto	u6440
  9891  002D7C                     u6441:
  9892  002D7C  EFFD  F016         	goto	l145
  9893  002D80                     u6440:
  9894  002D80  045D               	decf	_d^0,w,c
  9895  002D82  105E               	iorwf	(_d+1)^0,w,c
  9896  002D84  A4D8               	btfss	status,2,c
  9897  002D86  EFC7  F016         	goto	u6451
  9898  002D8A  EFC9  F016         	goto	u6450
  9899  002D8E                     u6451:
  9900  002D8E  EFFD  F016         	goto	l145
  9901  002D92                     u6450:
  9902  002D92                     
  9903                           ;distance_finding.c: 280:         d=1;
  9904  002D92  0E00               	movlw	0
  9905  002D94  6E5E               	movwf	(_d+1)^0,c
  9906  002D96  0E01               	movlw	1
  9907  002D98  6E5D               	movwf	_d^0,c
  9908  002D9A                     
  9909                           ;distance_finding.c: 281:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9910  002D9A  0E03               	movlw	3
  9911  002D9C  6E02               	movwf	(??_Secuence3+1)^0,c
  9912  002D9E  0E8A               	movlw	138
  9913  002DA0  6E01               	movwf	??_Secuence3^0,c
  9914  002DA2  0E56               	movlw	86
  9915  002DA4                     u6817:
  9916  002DA4  2EE8               	decfsz	wreg,f,c
  9917  002DA6  D7FE               	bra	u6817
  9918  002DA8  2E01               	decfsz	??_Secuence3^0,f,c
  9919  002DAA  D7FC               	bra	u6817
  9920  002DAC  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9921  002DAE  D7FA               	bra	u6817
  9922  002DB0                     
  9923                           ;distance_finding.c: 282:         if(RC1==0 && d==1){
  9924  002DB0  B282               	btfsc	3970,1,c	;volatile
  9925  002DB2  EFDD  F016         	goto	u6461
  9926  002DB6  EFDF  F016         	goto	u6460
  9927  002DBA                     u6461:
  9928  002DBA  EF01  F017         	goto	l5077
  9929  002DBE                     u6460:
  9930  002DBE  045D               	decf	_d^0,w,c
  9931  002DC0  105E               	iorwf	(_d+1)^0,w,c
  9932  002DC2  A4D8               	btfss	status,2,c
  9933  002DC4  EFE6  F016         	goto	u6471
  9934  002DC8  EFE8  F016         	goto	u6470
  9935  002DCC                     u6471:
  9936  002DCC  EF01  F017         	goto	l5077
  9937  002DD0                     u6470:
  9938  002DD0                     
  9939                           ;distance_finding.c: 283:           f=0;
  9940  002DD0  0E00               	movlw	0
  9941  002DD2  0100               	movlb	0	; () banked
  9942  002DD4  6FED               	movwf	(_f+1)& (0+255),b
  9943  002DD6  0E00               	movlw	0
  9944  002DD8  6FEC               	movwf	_f& (0+255),b
  9945                           
  9946                           ;distance_finding.c: 284:           d=0;
  9947  002DDA  0E00               	movlw	0
  9948  002DDC  6E5E               	movwf	(_d+1)^0,c
  9949  002DDE  0E00               	movlw	0
  9950  002DE0  6E5D               	movwf	_d^0,c
  9951  002DE2                     
  9952                           ; BSR set to: 0
  9953                           ;distance_finding.c: 285:           c++;
  9954  002DE2  4BEE               	infsnz	_c& (0+255),f,b
  9955  002DE4  2BEF               	incf	(_c+1)& (0+255),f,b
  9956  002DE6                     
  9957                           ; BSR set to: 0
  9958                           ;distance_finding.c: 286:           RB4=0;
  9959  002DE6  9881               	bcf	3969,4,c	;volatile
  9960  002DE8                     
  9961                           ; BSR set to: 0
  9962                           ;distance_finding.c: 288:           _delay((unsigned long)((300)*(20000000/4000000.0)));
  9963  002DE8  0ED6               	movlw	214
  9964  002DEA                     u6827:
  9965  002DEA  D000               	nop2	
  9966  002DEC  D000               	nop2	
  9967  002DEE  2EE8               	decfsz	wreg,f,c
  9968  002DF0  D7FC               	bra	u6827
  9969  002DF2  D000               	nop2	
  9970  002DF4                     
  9971                           ;distance_finding.c: 289:           RC4=0;
  9972  002DF4  9882               	bcf	3970,4,c	;volatile
  9973  002DF6  EF01  F017         	goto	l5077
  9974  002DFA                     l145:
  9975                           
  9976                           ;distance_finding.c: 293:         RB4=0;
  9977  002DFA  9881               	bcf	3969,4,c	;volatile
  9978                           
  9979                           ;distance_finding.c: 294:         TRISBbits.RB4 = 1;
  9980  002DFC  8893               	bsf	147,4,c	;volatile
  9981  002DFE                     
  9982                           ;distance_finding.c: 295:           TRISC=0x00;
  9983  002DFE  0E00               	movlw	0
  9984  002E00  6E94               	movwf	148,c	;volatile
  9985  002E02                     l5077:
  9986                           
  9987                           ;distance_finding.c: 298:     RB4=0;
  9988  002E02  9881               	bcf	3969,4,c	;volatile
  9989  002E04                     
  9990                           ;distance_finding.c: 299:     TRISBbits.RB4 = 1;
  9991  002E04  8893               	bsf	147,4,c	;volatile
  9992                           
  9993                           ;distance_finding.c: 300:     TRISC=0x00;
  9994  002E06  0E00               	movlw	0
  9995  002E08  6E94               	movwf	148,c	;volatile
  9996                           
  9997                           ;distance_finding.c: 301:     d=0;
  9998  002E0A  0E00               	movlw	0
  9999  002E0C  6E5E               	movwf	(_d+1)^0,c
 10000  002E0E  0E00               	movlw	0
 10001  002E10  6E5D               	movwf	_d^0,c
 10002  002E12  0012               	return		;funcret
 10003  002E14                     __end_of_Secuence3:
 10004                           	callstack 0
 10005                           
 10006 ;; *************** function _Secuence2 *****************
 10007 ;; Defined at:
 10008 ;;		line 159 in file "distance_finding.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  2   18[None  ] int 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10022 ;;      Params:         0       0       0       0       0       0       0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10024 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10025 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10026 ;;Total ram usage:        2 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    4
 10029 ;; This function calls:
 10030 ;;		_LCD_Clear
 10031 ;; This function is called by:
 10032 ;;		_main
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text36
 10037  002E14                     __ptext36:
 10038                           	callstack 0
 10039  002E14                     _Secuence2:
 10040                           	callstack 26
 10041  002E14                     
 10042                           ;distance_finding.c: 160:     TRISBbits.RB2 = 0;
 10043  002E14  9493               	bcf	147,2,c	;volatile
 10044                           
 10045                           ;distance_finding.c: 161:     TRISC=0xff;
 10046  002E16  6894               	setf	148,c	;volatile
 10047                           
 10048                           ;distance_finding.c: 162:     RB2=1;
 10049  002E18  8481               	bsf	3969,2,c	;volatile
 10050                           
 10051                           ;distance_finding.c: 163:    if(RC0==1 && d == 0){
 10052  002E1A  A082               	btfss	3970,0,c	;volatile
 10053  002E1C  EF12  F017         	goto	u6161
 10054  002E20  EF14  F017         	goto	u6160
 10055  002E24                     u6161:
 10056  002E24  EF4F  F017         	goto	l121
 10057  002E28                     u6160:
 10058  002E28  505D               	movf	_d^0,w,c
 10059  002E2A  105E               	iorwf	(_d+1)^0,w,c
 10060  002E2C  A4D8               	btfss	status,2,c
 10061  002E2E  EF1B  F017         	goto	u6171
 10062  002E32  EF1D  F017         	goto	u6170
 10063  002E36                     u6171:
 10064  002E36  EF4F  F017         	goto	l121
 10065  002E3A                     u6170:
 10066  002E3A                     
 10067                           ;distance_finding.c: 164:         d=1;
 10068  002E3A  0E00               	movlw	0
 10069  002E3C  6E5E               	movwf	(_d+1)^0,c
 10070  002E3E  0E01               	movlw	1
 10071  002E40  6E5D               	movwf	_d^0,c
 10072  002E42                     
 10073                           ;distance_finding.c: 165:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10074  002E42  0E03               	movlw	3
 10075  002E44  6E0A               	movwf	(??_Secuence2+1)^0,c
 10076  002E46  0E8A               	movlw	138
 10077  002E48  6E09               	movwf	??_Secuence2^0,c
 10078  002E4A  0E56               	movlw	86
 10079  002E4C                     u6837:
 10080  002E4C  2EE8               	decfsz	wreg,f,c
 10081  002E4E  D7FE               	bra	u6837
 10082  002E50  2E09               	decfsz	??_Secuence2^0,f,c
 10083  002E52  D7FC               	bra	u6837
 10084  002E54  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10085  002E56  D7FA               	bra	u6837
 10086  002E58                     
 10087                           ;distance_finding.c: 166:         if(RC0==0 && d==1){
 10088  002E58  B082               	btfsc	3970,0,c	;volatile
 10089  002E5A  EF31  F017         	goto	u6181
 10090  002E5E  EF33  F017         	goto	u6180
 10091  002E62                     u6181:
 10092  002E62  EF25  F018         	goto	l4979
 10093  002E66                     u6180:
 10094  002E66  045D               	decf	_d^0,w,c
 10095  002E68  105E               	iorwf	(_d+1)^0,w,c
 10096  002E6A  A4D8               	btfss	status,2,c
 10097  002E6C  EF3A  F017         	goto	u6191
 10098  002E70  EF3C  F017         	goto	u6190
 10099  002E74                     u6191:
 10100  002E74  EF25  F018         	goto	l4979
 10101  002E78                     u6190:
 10102  002E78                     
 10103                           ;distance_finding.c: 167:         f=0;
 10104  002E78  0E00               	movlw	0
 10105  002E7A  0100               	movlb	0	; () banked
 10106  002E7C  6FED               	movwf	(_f+1)& (0+255),b
 10107  002E7E  0E00               	movlw	0
 10108  002E80  6FEC               	movwf	_f& (0+255),b
 10109                           
 10110                           ;distance_finding.c: 168:         d=0;
 10111  002E82  0E00               	movlw	0
 10112  002E84  6E5E               	movwf	(_d+1)^0,c
 10113  002E86  0E00               	movlw	0
 10114  002E88  6E5D               	movwf	_d^0,c
 10115  002E8A                     
 10116                           ; BSR set to: 0
 10117                           ;distance_finding.c: 169:         c++;
 10118  002E8A  4BEE               	infsnz	_c& (0+255),f,b
 10119  002E8C  2BEF               	incf	(_c+1)& (0+255),f,b
 10120  002E8E                     
 10121                           ; BSR set to: 0
 10122                           ;distance_finding.c: 170:         RB1=0;
 10123  002E8E  9281               	bcf	3969,1,c	;volatile
 10124  002E90                     
 10125                           ; BSR set to: 0
 10126                           ;distance_finding.c: 171:         a = 4;
 10127  002E90  0E00               	movlw	0
 10128  002E92  6FE7               	movwf	(_a+1)& (0+255),b
 10129  002E94  0E04               	movlw	4
 10130  002E96  6FE6               	movwf	_a& (0+255),b
 10131  002E98                     
 10132                           ; BSR set to: 0
 10133                           ;distance_finding.c: 173:         RC0=0;
 10134  002E98  9082               	bcf	3970,0,c	;volatile
 10135  002E9A  EF25  F018         	goto	l4979
 10136  002E9E                     l121:
 10137  002E9E  A282               	btfss	3970,1,c	;volatile
 10138  002EA0  EF54  F017         	goto	u6201
 10139  002EA4  EF56  F017         	goto	u6200
 10140  002EA8                     u6201:
 10141  002EA8  EF91  F017         	goto	l124
 10142  002EAC                     u6200:
 10143  002EAC  505D               	movf	_d^0,w,c
 10144  002EAE  105E               	iorwf	(_d+1)^0,w,c
 10145  002EB0  A4D8               	btfss	status,2,c
 10146  002EB2  EF5D  F017         	goto	u6211
 10147  002EB6  EF5F  F017         	goto	u6210
 10148  002EBA                     u6211:
 10149  002EBA  EF91  F017         	goto	l124
 10150  002EBE                     u6210:
 10151  002EBE                     
 10152                           ;distance_finding.c: 178:         d=1;
 10153  002EBE  0E00               	movlw	0
 10154  002EC0  6E5E               	movwf	(_d+1)^0,c
 10155  002EC2  0E01               	movlw	1
 10156  002EC4  6E5D               	movwf	_d^0,c
 10157  002EC6                     
 10158                           ;distance_finding.c: 179:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10159  002EC6  0E03               	movlw	3
 10160  002EC8  6E0A               	movwf	(??_Secuence2+1)^0,c
 10161  002ECA  0E8A               	movlw	138
 10162  002ECC  6E09               	movwf	??_Secuence2^0,c
 10163  002ECE  0E56               	movlw	86
 10164  002ED0                     u6847:
 10165  002ED0  2EE8               	decfsz	wreg,f,c
 10166  002ED2  D7FE               	bra	u6847
 10167  002ED4  2E09               	decfsz	??_Secuence2^0,f,c
 10168  002ED6  D7FC               	bra	u6847
 10169  002ED8  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10170  002EDA  D7FA               	bra	u6847
 10171  002EDC                     
 10172                           ;distance_finding.c: 180:         if(RC1==0 && d==1){
 10173  002EDC  B282               	btfsc	3970,1,c	;volatile
 10174  002EDE  EF73  F017         	goto	u6221
 10175  002EE2  EF75  F017         	goto	u6220
 10176  002EE6                     u6221:
 10177  002EE6  EF25  F018         	goto	l4979
 10178  002EEA                     u6220:
 10179  002EEA  045D               	decf	_d^0,w,c
 10180  002EEC  105E               	iorwf	(_d+1)^0,w,c
 10181  002EEE  A4D8               	btfss	status,2,c
 10182  002EF0  EF7C  F017         	goto	u6231
 10183  002EF4  EF7E  F017         	goto	u6230
 10184  002EF8                     u6231:
 10185  002EF8  EF25  F018         	goto	l4979
 10186  002EFC                     u6230:
 10187  002EFC                     
 10188                           ;distance_finding.c: 181:         f=0;
 10189  002EFC  0E00               	movlw	0
 10190  002EFE  0100               	movlb	0	; () banked
 10191  002F00  6FED               	movwf	(_f+1)& (0+255),b
 10192  002F02  0E00               	movlw	0
 10193  002F04  6FEC               	movwf	_f& (0+255),b
 10194                           
 10195                           ;distance_finding.c: 182:         d=0;
 10196  002F06  0E00               	movlw	0
 10197  002F08  6E5E               	movwf	(_d+1)^0,c
 10198  002F0A  0E00               	movlw	0
 10199  002F0C  6E5D               	movwf	_d^0,c
 10200  002F0E                     
 10201                           ; BSR set to: 0
 10202                           ;distance_finding.c: 183:         c++;
 10203  002F0E  4BEE               	infsnz	_c& (0+255),f,b
 10204  002F10  2BEF               	incf	(_c+1)& (0+255),f,b
 10205  002F12                     
 10206                           ; BSR set to: 0
 10207                           ;distance_finding.c: 184:         RB1=0;
 10208  002F12  9281               	bcf	3969,1,c	;volatile
 10209  002F14                     
 10210                           ; BSR set to: 0
 10211                           ;distance_finding.c: 185:         a=5;
 10212  002F14  0E00               	movlw	0
 10213  002F16  6FE7               	movwf	(_a+1)& (0+255),b
 10214  002F18  0E05               	movlw	5
 10215  002F1A  6FE6               	movwf	_a& (0+255),b
 10216  002F1C                     
 10217                           ; BSR set to: 0
 10218                           ;distance_finding.c: 186:         RC1=0;
 10219  002F1C  9282               	bcf	3970,1,c	;volatile
 10220  002F1E  EF25  F018         	goto	l4979
 10221  002F22                     l124:
 10222  002F22  A482               	btfss	3970,2,c	;volatile
 10223  002F24  EF96  F017         	goto	u6241
 10224  002F28  EF98  F017         	goto	u6240
 10225  002F2C                     u6241:
 10226  002F2C  EFD3  F017         	goto	l127
 10227  002F30                     u6240:
 10228  002F30  505D               	movf	_d^0,w,c
 10229  002F32  105E               	iorwf	(_d+1)^0,w,c
 10230  002F34  A4D8               	btfss	status,2,c
 10231  002F36  EF9F  F017         	goto	u6251
 10232  002F3A  EFA1  F017         	goto	u6250
 10233  002F3E                     u6251:
 10234  002F3E  EFD3  F017         	goto	l127
 10235  002F42                     u6250:
 10236  002F42                     
 10237                           ;distance_finding.c: 190:         d=1;
 10238  002F42  0E00               	movlw	0
 10239  002F44  6E5E               	movwf	(_d+1)^0,c
 10240  002F46  0E01               	movlw	1
 10241  002F48  6E5D               	movwf	_d^0,c
 10242  002F4A                     
 10243                           ;distance_finding.c: 192:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10244  002F4A  0E03               	movlw	3
 10245  002F4C  6E0A               	movwf	(??_Secuence2+1)^0,c
 10246  002F4E  0E8A               	movlw	138
 10247  002F50  6E09               	movwf	??_Secuence2^0,c
 10248  002F52  0E56               	movlw	86
 10249  002F54                     u6857:
 10250  002F54  2EE8               	decfsz	wreg,f,c
 10251  002F56  D7FE               	bra	u6857
 10252  002F58  2E09               	decfsz	??_Secuence2^0,f,c
 10253  002F5A  D7FC               	bra	u6857
 10254  002F5C  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10255  002F5E  D7FA               	bra	u6857
 10256  002F60                     
 10257                           ;distance_finding.c: 193:         if(RC2==0 && d==1){
 10258  002F60  B482               	btfsc	3970,2,c	;volatile
 10259  002F62  EFB5  F017         	goto	u6261
 10260  002F66  EFB7  F017         	goto	u6260
 10261  002F6A                     u6261:
 10262  002F6A  EF25  F018         	goto	l4979
 10263  002F6E                     u6260:
 10264  002F6E  045D               	decf	_d^0,w,c
 10265  002F70  105E               	iorwf	(_d+1)^0,w,c
 10266  002F72  A4D8               	btfss	status,2,c
 10267  002F74  EFBE  F017         	goto	u6271
 10268  002F78  EFC0  F017         	goto	u6270
 10269  002F7C                     u6271:
 10270  002F7C  EF25  F018         	goto	l4979
 10271  002F80                     u6270:
 10272  002F80                     
 10273                           ;distance_finding.c: 194:         f=0;
 10274  002F80  0E00               	movlw	0
 10275  002F82  0100               	movlb	0	; () banked
 10276  002F84  6FED               	movwf	(_f+1)& (0+255),b
 10277  002F86  0E00               	movlw	0
 10278  002F88  6FEC               	movwf	_f& (0+255),b
 10279  002F8A                     
 10280                           ; BSR set to: 0
 10281                           ;distance_finding.c: 195:         c++;
 10282  002F8A  4BEE               	infsnz	_c& (0+255),f,b
 10283  002F8C  2BEF               	incf	(_c+1)& (0+255),f,b
 10284  002F8E                     
 10285                           ; BSR set to: 0
 10286                           ;distance_finding.c: 196:         d=0;
 10287  002F8E  0E00               	movlw	0
 10288  002F90  6E5E               	movwf	(_d+1)^0,c
 10289  002F92  0E00               	movlw	0
 10290  002F94  6E5D               	movwf	_d^0,c
 10291  002F96                     
 10292                           ; BSR set to: 0
 10293                           ;distance_finding.c: 197:         RB1=0;
 10294  002F96  9281               	bcf	3969,1,c	;volatile
 10295  002F98                     
 10296                           ; BSR set to: 0
 10297                           ;distance_finding.c: 198:         a= 6;
 10298  002F98  0E00               	movlw	0
 10299  002F9A  6FE7               	movwf	(_a+1)& (0+255),b
 10300  002F9C  0E06               	movlw	6
 10301  002F9E  6FE6               	movwf	_a& (0+255),b
 10302  002FA0                     
 10303                           ; BSR set to: 0
 10304                           ;distance_finding.c: 199:          RC2=0;
 10305  002FA0  9482               	bcf	3970,2,c	;volatile
 10306  002FA2  EF25  F018         	goto	l4979
 10307  002FA6                     l127:
 10308  002FA6  A882               	btfss	3970,4,c	;volatile
 10309  002FA8  EFD8  F017         	goto	u6281
 10310  002FAC  EFDA  F017         	goto	u6280
 10311  002FB0                     u6281:
 10312  002FB0  EF1D  F018         	goto	l130
 10313  002FB4                     u6280:
 10314  002FB4  505D               	movf	_d^0,w,c
 10315  002FB6  105E               	iorwf	(_d+1)^0,w,c
 10316  002FB8  A4D8               	btfss	status,2,c
 10317  002FBA  EFE1  F017         	goto	u6291
 10318  002FBE  EFE3  F017         	goto	u6290
 10319  002FC2                     u6291:
 10320  002FC2  EF1D  F018         	goto	l130
 10321  002FC6                     u6290:
 10322  002FC6                     
 10323                           ;distance_finding.c: 204:         d=1;
 10324  002FC6  0E00               	movlw	0
 10325  002FC8  6E5E               	movwf	(_d+1)^0,c
 10326  002FCA  0E01               	movlw	1
 10327  002FCC  6E5D               	movwf	_d^0,c
 10328  002FCE                     
 10329                           ;distance_finding.c: 205:         c++;
 10330  002FCE  0100               	movlb	0	; () banked
 10331  002FD0  4BEE               	infsnz	_c& (0+255),f,b
 10332  002FD2  2BEF               	incf	(_c+1)& (0+255),f,b
 10333  002FD4                     
 10334                           ; BSR set to: 0
 10335                           ;distance_finding.c: 206:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10336  002FD4  0E03               	movlw	3
 10337  002FD6  6E0A               	movwf	(??_Secuence2+1)^0,c
 10338  002FD8  0E8A               	movlw	138
 10339  002FDA  6E09               	movwf	??_Secuence2^0,c
 10340  002FDC  0E56               	movlw	86
 10341  002FDE                     u6867:
 10342  002FDE  2EE8               	decfsz	wreg,f,c
 10343  002FE0  D7FE               	bra	u6867
 10344  002FE2  2E09               	decfsz	??_Secuence2^0,f,c
 10345  002FE4  D7FC               	bra	u6867
 10346  002FE6  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10347  002FE8  D7FA               	bra	u6867
 10348  002FEA                     
 10349                           ;distance_finding.c: 207:         if(RC1==0 && d==1){
 10350  002FEA  B282               	btfsc	3970,1,c	;volatile
 10351  002FEC  EFFA  F017         	goto	u6301
 10352  002FF0  EFFC  F017         	goto	u6300
 10353  002FF4                     u6301:
 10354  002FF4  EF25  F018         	goto	l4979
 10355  002FF8                     u6300:
 10356  002FF8  045D               	decf	_d^0,w,c
 10357  002FFA  105E               	iorwf	(_d+1)^0,w,c
 10358  002FFC  A4D8               	btfss	status,2,c
 10359  002FFE  EF03  F018         	goto	u6311
 10360  003002  EF05  F018         	goto	u6310
 10361  003006                     u6311:
 10362  003006  EF25  F018         	goto	l4979
 10363  00300A                     u6310:
 10364  00300A                     
 10365                           ;distance_finding.c: 208:           f=0;
 10366  00300A  0E00               	movlw	0
 10367  00300C  0100               	movlb	0	; () banked
 10368  00300E  6FED               	movwf	(_f+1)& (0+255),b
 10369  003010  0E00               	movlw	0
 10370  003012  6FEC               	movwf	_f& (0+255),b
 10371                           
 10372                           ;distance_finding.c: 209:           c=1;
 10373  003014  0E00               	movlw	0
 10374  003016  6FEF               	movwf	(_c+1)& (0+255),b
 10375  003018  0E01               	movlw	1
 10376  00301A  6FEE               	movwf	_c& (0+255),b
 10377  00301C                     
 10378                           ; BSR set to: 0
 10379                           ;distance_finding.c: 210:           LCD_Clear();
 10380  00301C  ECF0  F023         	call	_LCD_Clear	;wreg free
 10381  003020                     
 10382                           ;distance_finding.c: 211:           d=0;
 10383  003020  0E00               	movlw	0
 10384  003022  6E5E               	movwf	(_d+1)^0,c
 10385  003024  0E00               	movlw	0
 10386  003026  6E5D               	movwf	_d^0,c
 10387  003028                     
 10388                           ;distance_finding.c: 212:           RB1=0;
 10389  003028  9281               	bcf	3969,1,c	;volatile
 10390  00302A                     
 10391                           ;distance_finding.c: 213:           a = 1000;
 10392  00302A  0E03               	movlw	3
 10393  00302C  0100               	movlb	0	; () banked
 10394  00302E  6FE7               	movwf	(_a+1)& (0+255),b
 10395  003030  0EE8               	movlw	232
 10396  003032  6FE6               	movwf	_a& (0+255),b
 10397  003034                     
 10398                           ; BSR set to: 0
 10399                           ;distance_finding.c: 214:           RC4=0;
 10400  003034  9882               	bcf	3970,4,c	;volatile
 10401  003036  EF25  F018         	goto	l4979
 10402  00303A                     l130:
 10403                           
 10404                           ;distance_finding.c: 219:         RB2=0;TRISBbits.RB2 = 1;
 10405  00303A  9481               	bcf	3969,2,c	;volatile
 10406  00303C  8493               	bsf	147,2,c	;volatile
 10407  00303E                     
 10408                           ;distance_finding.c: 220:           TRISC=0x00;
 10409  00303E  0E00               	movlw	0
 10410  003040  6E94               	movwf	148,c	;volatile
 10411                           
 10412                           ;distance_finding.c: 221:           d=0;
 10413  003042  0E00               	movlw	0
 10414  003044  6E5E               	movwf	(_d+1)^0,c
 10415  003046  0E00               	movlw	0
 10416  003048  6E5D               	movwf	_d^0,c
 10417  00304A                     l4979:
 10418                           
 10419                           ;distance_finding.c: 224:     RB2=0;TRISBbits.RB2 = 1;
 10420  00304A  9481               	bcf	3969,2,c	;volatile
 10421  00304C  8493               	bsf	147,2,c	;volatile
 10422                           
 10423                           ;distance_finding.c: 225:     TRISC=0x00;
 10424  00304E  0E00               	movlw	0
 10425  003050  6E94               	movwf	148,c	;volatile
 10426  003052  0012               	return		;funcret
 10427  003054                     __end_of_Secuence2:
 10428                           	callstack 0
 10429                           
 10430 ;; *************** function _LCD_Clear *****************
 10431 ;; Defined at:
 10432 ;;		line 76 in file "LCD_16x2_4bit_mode.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;		None
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10449 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10450 ;;Total ram usage:        0 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    3
 10453 ;; This function calls:
 10454 ;;		_LCD_Command
 10455 ;; This function is called by:
 10456 ;;		_main
 10457 ;;		_Secuence2
 10458 ;;		_Secuence4
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text37
 10463  0047E0                     __ptext37:
 10464                           	callstack 0
 10465  0047E0                     _LCD_Clear:
 10466                           	callstack 26
 10467  0047E0                     
 10468                           ;LCD_16x2_4bit_mode.c: 78:     LCD_Command(0x01);
 10469  0047E0  0E01               	movlw	1
 10470  0047E2  EC4E  F022         	call	_LCD_Command
 10471  0047E6  0012               	return		;funcret
 10472  0047E8                     __end_of_LCD_Clear:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _Secuence1 *****************
 10476 ;; Defined at:
 10477 ;;		line 92 in file "distance_finding.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  2   16[None  ] int 
 10484 ;; Registers used:
 10485 ;;		wreg, status,2, status,0
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10491 ;;      Params:         0       0       0       0       0       0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10493 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10494 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10495 ;;Total ram usage:        2 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    1
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_main
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text38
 10506  003054                     __ptext38:
 10507                           	callstack 0
 10508  003054                     _Secuence1:
 10509                           	callstack 29
 10510  003054                     
 10511                           ;distance_finding.c: 93:     TRISBbits.RB1 = 0;
 10512  003054  9293               	bcf	147,1,c	;volatile
 10513                           
 10514                           ;distance_finding.c: 94:     TRISC=0xff;
 10515  003056  6894               	setf	148,c	;volatile
 10516                           
 10517                           ;distance_finding.c: 96:     RB1=1;
 10518  003058  8281               	bsf	3969,1,c	;volatile
 10519                           
 10520                           ;distance_finding.c: 97:     if(RC0==1 && d == 0){
 10521  00305A  A082               	btfss	3970,0,c	;volatile
 10522  00305C  EF32  F018         	goto	u6001
 10523  003060  EF34  F018         	goto	u6000
 10524  003064                     u6001:
 10525  003064  EF70  F018         	goto	l106
 10526  003068                     u6000:
 10527  003068  505D               	movf	_d^0,w,c
 10528  00306A  105E               	iorwf	(_d+1)^0,w,c
 10529  00306C  A4D8               	btfss	status,2,c
 10530  00306E  EF3B  F018         	goto	u6011
 10531  003072  EF3D  F018         	goto	u6010
 10532  003076                     u6011:
 10533  003076  EF70  F018         	goto	l106
 10534  00307A                     u6010:
 10535  00307A                     
 10536                           ;distance_finding.c: 98:         d=1;
 10537  00307A  0E00               	movlw	0
 10538  00307C  6E5E               	movwf	(_d+1)^0,c
 10539  00307E  0E01               	movlw	1
 10540  003080  6E5D               	movwf	_d^0,c
 10541                           
 10542                           ;distance_finding.c: 99:         f=0;
 10543  003082  0E00               	movlw	0
 10544  003084  0100               	movlb	0	; () banked
 10545  003086  6FED               	movwf	(_f+1)& (0+255),b
 10546  003088  0E00               	movlw	0
 10547  00308A  6FEC               	movwf	_f& (0+255),b
 10548  00308C                     
 10549                           ; BSR set to: 0
 10550                           ;distance_finding.c: 100:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10551  00308C  0E03               	movlw	3
 10552  00308E  6E02               	movwf	(??_Secuence1+1)^0,c
 10553  003090  0E8A               	movlw	138
 10554  003092  6E01               	movwf	??_Secuence1^0,c
 10555  003094  0E56               	movlw	86
 10556  003096                     u6877:
 10557  003096  2EE8               	decfsz	wreg,f,c
 10558  003098  D7FE               	bra	u6877
 10559  00309A  2E01               	decfsz	??_Secuence1^0,f,c
 10560  00309C  D7FC               	bra	u6877
 10561  00309E  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10562  0030A0  D7FA               	bra	u6877
 10563  0030A2                     
 10564                           ;distance_finding.c: 101:         if(RC0==0 && d==1){
 10565  0030A2  B082               	btfsc	3970,0,c	;volatile
 10566  0030A4  EF56  F018         	goto	u6021
 10567  0030A8  EF58  F018         	goto	u6020
 10568  0030AC                     u6021:
 10569  0030AC  EF42  F019         	goto	l4885
 10570  0030B0                     u6020:
 10571  0030B0  045D               	decf	_d^0,w,c
 10572  0030B2  105E               	iorwf	(_d+1)^0,w,c
 10573  0030B4  A4D8               	btfss	status,2,c
 10574  0030B6  EF5F  F018         	goto	u6031
 10575  0030BA  EF61  F018         	goto	u6030
 10576  0030BE                     u6031:
 10577  0030BE  EF42  F019         	goto	l4885
 10578  0030C2                     u6030:
 10579  0030C2                     
 10580                           ;distance_finding.c: 102:         d=0;
 10581  0030C2  0E00               	movlw	0
 10582  0030C4  6E5E               	movwf	(_d+1)^0,c
 10583  0030C6  0E00               	movlw	0
 10584  0030C8  6E5D               	movwf	_d^0,c
 10585  0030CA                     
 10586                           ;distance_finding.c: 103:         RB1=0;
 10587  0030CA  9281               	bcf	3969,1,c	;volatile
 10588                           
 10589                           ;distance_finding.c: 104:         a = 7;
 10590  0030CC  0E00               	movlw	0
 10591  0030CE  0100               	movlb	0	; () banked
 10592  0030D0  6FE7               	movwf	(_a+1)& (0+255),b
 10593  0030D2  0E07               	movlw	7
 10594  0030D4  6FE6               	movwf	_a& (0+255),b
 10595  0030D6                     
 10596                           ; BSR set to: 0
 10597                           ;distance_finding.c: 105:         c++;
 10598  0030D6  4BEE               	infsnz	_c& (0+255),f,b
 10599  0030D8  2BEF               	incf	(_c+1)& (0+255),f,b
 10600  0030DA                     
 10601                           ; BSR set to: 0
 10602                           ;distance_finding.c: 106:         RC0=0;
 10603  0030DA  9082               	bcf	3970,0,c	;volatile
 10604  0030DC  EF42  F019         	goto	l4885
 10605  0030E0                     l106:
 10606  0030E0  A282               	btfss	3970,1,c	;volatile
 10607  0030E2  EF75  F018         	goto	u6041
 10608  0030E6  EF77  F018         	goto	u6040
 10609  0030EA                     u6041:
 10610  0030EA  EFB2  F018         	goto	l109
 10611  0030EE                     u6040:
 10612  0030EE  505D               	movf	_d^0,w,c
 10613  0030F0  105E               	iorwf	(_d+1)^0,w,c
 10614  0030F2  A4D8               	btfss	status,2,c
 10615  0030F4  EF7E  F018         	goto	u6051
 10616  0030F8  EF80  F018         	goto	u6050
 10617  0030FC                     u6051:
 10618  0030FC  EFB2  F018         	goto	l109
 10619  003100                     u6050:
 10620  003100                     
 10621                           ;distance_finding.c: 111:         d=1;
 10622  003100  0E00               	movlw	0
 10623  003102  6E5E               	movwf	(_d+1)^0,c
 10624  003104  0E01               	movlw	1
 10625  003106  6E5D               	movwf	_d^0,c
 10626  003108                     
 10627                           ;distance_finding.c: 112:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10628  003108  0E03               	movlw	3
 10629  00310A  6E02               	movwf	(??_Secuence1+1)^0,c
 10630  00310C  0E8A               	movlw	138
 10631  00310E  6E01               	movwf	??_Secuence1^0,c
 10632  003110  0E56               	movlw	86
 10633  003112                     u6887:
 10634  003112  2EE8               	decfsz	wreg,f,c
 10635  003114  D7FE               	bra	u6887
 10636  003116  2E01               	decfsz	??_Secuence1^0,f,c
 10637  003118  D7FC               	bra	u6887
 10638  00311A  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10639  00311C  D7FA               	bra	u6887
 10640  00311E                     
 10641                           ;distance_finding.c: 113:         if(RC1==0 && d==1){
 10642  00311E  B282               	btfsc	3970,1,c	;volatile
 10643  003120  EF94  F018         	goto	u6061
 10644  003124  EF96  F018         	goto	u6060
 10645  003128                     u6061:
 10646  003128  EF42  F019         	goto	l4885
 10647  00312C                     u6060:
 10648  00312C  045D               	decf	_d^0,w,c
 10649  00312E  105E               	iorwf	(_d+1)^0,w,c
 10650  003130  A4D8               	btfss	status,2,c
 10651  003132  EF9D  F018         	goto	u6071
 10652  003136  EF9F  F018         	goto	u6070
 10653  00313A                     u6071:
 10654  00313A  EF42  F019         	goto	l4885
 10655  00313E                     u6070:
 10656  00313E                     
 10657                           ;distance_finding.c: 114:         d=0;
 10658  00313E  0E00               	movlw	0
 10659  003140  6E5E               	movwf	(_d+1)^0,c
 10660  003142  0E00               	movlw	0
 10661  003144  6E5D               	movwf	_d^0,c
 10662                           
 10663                           ;distance_finding.c: 115:         f=0;
 10664  003146  0E00               	movlw	0
 10665  003148  0100               	movlb	0	; () banked
 10666  00314A  6FED               	movwf	(_f+1)& (0+255),b
 10667  00314C  0E00               	movlw	0
 10668  00314E  6FEC               	movwf	_f& (0+255),b
 10669  003150                     
 10670                           ; BSR set to: 0
 10671                           ;distance_finding.c: 116:         RB1=0;
 10672  003150  9281               	bcf	3969,1,c	;volatile
 10673                           
 10674                           ;distance_finding.c: 117:         a=8;
 10675  003152  0E00               	movlw	0
 10676  003154  6FE7               	movwf	(_a+1)& (0+255),b
 10677  003156  0E08               	movlw	8
 10678  003158  6FE6               	movwf	_a& (0+255),b
 10679  00315A                     
 10680                           ; BSR set to: 0
 10681                           ;distance_finding.c: 118:          c++;
 10682  00315A  4BEE               	infsnz	_c& (0+255),f,b
 10683  00315C  2BEF               	incf	(_c+1)& (0+255),f,b
 10684  00315E                     
 10685                           ; BSR set to: 0
 10686                           ;distance_finding.c: 119:         RC1=0;
 10687  00315E  9282               	bcf	3970,1,c	;volatile
 10688  003160  EF42  F019         	goto	l4885
 10689  003164                     l109:
 10690  003164  A482               	btfss	3970,2,c	;volatile
 10691  003166  EFB7  F018         	goto	u6081
 10692  00316A  EFB9  F018         	goto	u6080
 10693  00316E                     u6081:
 10694  00316E  EFF4  F018         	goto	l112
 10695  003172                     u6080:
 10696  003172  505D               	movf	_d^0,w,c
 10697  003174  105E               	iorwf	(_d+1)^0,w,c
 10698  003176  A4D8               	btfss	status,2,c
 10699  003178  EFC0  F018         	goto	u6091
 10700  00317C  EFC2  F018         	goto	u6090
 10701  003180                     u6091:
 10702  003180  EFF4  F018         	goto	l112
 10703  003184                     u6090:
 10704  003184                     
 10705                           ;distance_finding.c: 124:         d=1;
 10706  003184  0E00               	movlw	0
 10707  003186  6E5E               	movwf	(_d+1)^0,c
 10708  003188  0E01               	movlw	1
 10709  00318A  6E5D               	movwf	_d^0,c
 10710  00318C                     
 10711                           ;distance_finding.c: 125:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10712  00318C  0E03               	movlw	3
 10713  00318E  6E02               	movwf	(??_Secuence1+1)^0,c
 10714  003190  0E8A               	movlw	138
 10715  003192  6E01               	movwf	??_Secuence1^0,c
 10716  003194  0E56               	movlw	86
 10717  003196                     u6897:
 10718  003196  2EE8               	decfsz	wreg,f,c
 10719  003198  D7FE               	bra	u6897
 10720  00319A  2E01               	decfsz	??_Secuence1^0,f,c
 10721  00319C  D7FC               	bra	u6897
 10722  00319E  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10723  0031A0  D7FA               	bra	u6897
 10724  0031A2                     
 10725                           ;distance_finding.c: 126:         if(RC2==0 && d==1){
 10726  0031A2  B482               	btfsc	3970,2,c	;volatile
 10727  0031A4  EFD6  F018         	goto	u6101
 10728  0031A8  EFD8  F018         	goto	u6100
 10729  0031AC                     u6101:
 10730  0031AC  EF42  F019         	goto	l4885
 10731  0031B0                     u6100:
 10732  0031B0  045D               	decf	_d^0,w,c
 10733  0031B2  105E               	iorwf	(_d+1)^0,w,c
 10734  0031B4  A4D8               	btfss	status,2,c
 10735  0031B6  EFDF  F018         	goto	u6111
 10736  0031BA  EFE1  F018         	goto	u6110
 10737  0031BE                     u6111:
 10738  0031BE  EF42  F019         	goto	l4885
 10739  0031C2                     u6110:
 10740  0031C2                     
 10741                           ;distance_finding.c: 127:         d=0;
 10742  0031C2  0E00               	movlw	0
 10743  0031C4  6E5E               	movwf	(_d+1)^0,c
 10744  0031C6  0E00               	movlw	0
 10745  0031C8  6E5D               	movwf	_d^0,c
 10746                           
 10747                           ;distance_finding.c: 128:         f=0;
 10748  0031CA  0E00               	movlw	0
 10749  0031CC  0100               	movlb	0	; () banked
 10750  0031CE  6FED               	movwf	(_f+1)& (0+255),b
 10751  0031D0  0E00               	movlw	0
 10752  0031D2  6FEC               	movwf	_f& (0+255),b
 10753  0031D4                     
 10754                           ; BSR set to: 0
 10755                           ;distance_finding.c: 129:         RB1=0;
 10756  0031D4  9281               	bcf	3969,1,c	;volatile
 10757                           
 10758                           ;distance_finding.c: 130:         a= 9;
 10759  0031D6  0E00               	movlw	0
 10760  0031D8  6FE7               	movwf	(_a+1)& (0+255),b
 10761  0031DA  0E09               	movlw	9
 10762  0031DC  6FE6               	movwf	_a& (0+255),b
 10763  0031DE                     
 10764                           ; BSR set to: 0
 10765                           ;distance_finding.c: 131:         c++;
 10766  0031DE  4BEE               	infsnz	_c& (0+255),f,b
 10767  0031E0  2BEF               	incf	(_c+1)& (0+255),f,b
 10768  0031E2                     
 10769                           ; BSR set to: 0
 10770                           ;distance_finding.c: 132:          RC2=0;
 10771  0031E2  9482               	bcf	3970,2,c	;volatile
 10772  0031E4  EF42  F019         	goto	l4885
 10773  0031E8                     l112:
 10774  0031E8  A882               	btfss	3970,4,c	;volatile
 10775  0031EA  EFF9  F018         	goto	u6121
 10776  0031EE  EFFB  F018         	goto	u6120
 10777  0031F2                     u6121:
 10778  0031F2  EF3A  F019         	goto	l115
 10779  0031F6                     u6120:
 10780  0031F6  505D               	movf	_d^0,w,c
 10781  0031F8  105E               	iorwf	(_d+1)^0,w,c
 10782  0031FA  A4D8               	btfss	status,2,c
 10783  0031FC  EF02  F019         	goto	u6131
 10784  003200  EF04  F019         	goto	u6130
 10785  003204                     u6131:
 10786  003204  EF3A  F019         	goto	l115
 10787  003208                     u6130:
 10788  003208                     
 10789                           ;distance_finding.c: 136:         d=1;
 10790  003208  0E00               	movlw	0
 10791  00320A  6E5E               	movwf	(_d+1)^0,c
 10792  00320C  0E01               	movlw	1
 10793  00320E  6E5D               	movwf	_d^0,c
 10794  003210                     
 10795                           ;distance_finding.c: 137:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10796  003210  0E03               	movlw	3
 10797  003212  6E02               	movwf	(??_Secuence1+1)^0,c
 10798  003214  0E8A               	movlw	138
 10799  003216  6E01               	movwf	??_Secuence1^0,c
 10800  003218  0E56               	movlw	86
 10801  00321A                     u6907:
 10802  00321A  2EE8               	decfsz	wreg,f,c
 10803  00321C  D7FE               	bra	u6907
 10804  00321E  2E01               	decfsz	??_Secuence1^0,f,c
 10805  003220  D7FC               	bra	u6907
 10806  003222  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10807  003224  D7FA               	bra	u6907
 10808  003226                     
 10809                           ;distance_finding.c: 138:         if(RC1==0 && d==1){
 10810  003226  B282               	btfsc	3970,1,c	;volatile
 10811  003228  EF18  F019         	goto	u6141
 10812  00322C  EF1A  F019         	goto	u6140
 10813  003230                     u6141:
 10814  003230  EF42  F019         	goto	l4885
 10815  003234                     u6140:
 10816  003234  045D               	decf	_d^0,w,c
 10817  003236  105E               	iorwf	(_d+1)^0,w,c
 10818  003238  A4D8               	btfss	status,2,c
 10819  00323A  EF21  F019         	goto	u6151
 10820  00323E  EF23  F019         	goto	u6150
 10821  003242                     u6151:
 10822  003242  EF42  F019         	goto	l4885
 10823  003246                     u6150:
 10824  003246                     
 10825                           ;distance_finding.c: 139:           f=0;
 10826  003246  0E00               	movlw	0
 10827  003248  0100               	movlb	0	; () banked
 10828  00324A  6FED               	movwf	(_f+1)& (0+255),b
 10829  00324C  0E00               	movlw	0
 10830  00324E  6FEC               	movwf	_f& (0+255),b
 10831                           
 10832                           ;distance_finding.c: 140:           d=0;
 10833  003250  0E00               	movlw	0
 10834  003252  6E5E               	movwf	(_d+1)^0,c
 10835  003254  0E00               	movlw	0
 10836  003256  6E5D               	movwf	_d^0,c
 10837  003258                     
 10838                           ; BSR set to: 0
 10839                           ;distance_finding.c: 141:           RB1=0;
 10840  003258  9281               	bcf	3969,1,c	;volatile
 10841                           
 10842                           ;distance_finding.c: 142:           a = 1;
 10843  00325A  0E00               	movlw	0
 10844  00325C  6FE7               	movwf	(_a+1)& (0+255),b
 10845  00325E  0E01               	movlw	1
 10846  003260  6FE6               	movwf	_a& (0+255),b
 10847  003262                     
 10848                           ; BSR set to: 0
 10849                           ;distance_finding.c: 143:           c++;
 10850  003262  4BEE               	infsnz	_c& (0+255),f,b
 10851  003264  2BEF               	incf	(_c+1)& (0+255),f,b
 10852  003266                     
 10853                           ; BSR set to: 0
 10854                           ;distance_finding.c: 144:           f=1;
 10855  003266  0E00               	movlw	0
 10856  003268  6FED               	movwf	(_f+1)& (0+255),b
 10857  00326A  0E01               	movlw	1
 10858  00326C  6FEC               	movwf	_f& (0+255),b
 10859  00326E                     
 10860                           ; BSR set to: 0
 10861                           ;distance_finding.c: 145:           RC4=0;
 10862  00326E  9882               	bcf	3970,4,c	;volatile
 10863  003270  EF42  F019         	goto	l4885
 10864  003274                     l115:
 10865  003274  9281               	bcf	3969,1,c	;volatile
 10866                           
 10867                           ;distance_finding.c: 149:         TRISBbits.RB1 = 1;
 10868  003276  8293               	bsf	147,1,c	;volatile
 10869  003278                     
 10870                           ;distance_finding.c: 150:           TRISC=0x00;
 10871  003278  0E00               	movlw	0
 10872  00327A  6E94               	movwf	148,c	;volatile
 10873                           
 10874                           ;distance_finding.c: 151:           d=0;
 10875  00327C  0E00               	movlw	0
 10876  00327E  6E5E               	movwf	(_d+1)^0,c
 10877  003280  0E00               	movlw	0
 10878  003282  6E5D               	movwf	_d^0,c
 10879  003284                     l4885:
 10880                           
 10881                           ;distance_finding.c: 154:     RB1 = 0;
 10882  003284  9281               	bcf	3969,1,c	;volatile
 10883  003286                     
 10884                           ;distance_finding.c: 155:     TRISBbits.RB1 = 1;
 10885  003286  8293               	bsf	147,1,c	;volatile
 10886                           
 10887                           ;distance_finding.c: 156:     TRISC=0x00;
 10888  003288  0E00               	movlw	0
 10889  00328A  6E94               	movwf	148,c	;volatile
 10890  00328C  0012               	return		;funcret
 10891  00328E                     __end_of_Secuence1:
 10892                           	callstack 0
 10893                           
 10894 ;; *************** function _LCD_String_xy *****************
 10895 ;; Defined at:
 10896 ;;		line 57 in file "LCD_16x2_4bit_mode.c"
 10897 ;; Parameters:    Size  Location     Type
 10898 ;;  row             1    wreg     unsigned char 
 10899 ;;  pos             1   10[COMRAM] unsigned char 
 10900 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 10901 ;;		 -> main@Total_distance(20), STR_3(18), STR_2(14), STR_1(13), 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  row             1   13[COMRAM] unsigned char 
 10904 ;;  location        1   14[COMRAM] unsigned char 
 10905 ;; Return value:  Size  Location     Type
 10906 ;;                  1    wreg      void 
 10907 ;; Registers used:
 10908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10909 ;; Tracked objects:
 10910 ;;		On entry : 0/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10914 ;;      Params:         3       0       0       0       0       0       0       0       0
 10915 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10917 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10918 ;;Total ram usage:        5 bytes
 10919 ;; Hardware stack levels used:    1
 10920 ;; Hardware stack levels required when called:    4
 10921 ;; This function calls:
 10922 ;;		_LCD_Command
 10923 ;;		_LCD_String
 10924 ;; This function is called by:
 10925 ;;		_main
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text39
 10930  004646                     __ptext39:
 10931                           	callstack 0
 10932  004646                     _LCD_String_xy:
 10933                           	callstack 26
 10934                           
 10935                           ;incstack = 0
 10936                           ;LCD_String_xy@row stored from wreg
 10937  004646  6E0E               	movwf	LCD_String_xy@row^0,c
 10938  004648                     
 10939                           ;LCD_16x2_4bit_mode.c: 60:     if(row<=1)
 10940  004648  0E02               	movlw	2
 10941  00464A  600E               	cpfslt	LCD_String_xy@row^0,c
 10942  00464C  EF2A  F023         	goto	u5991
 10943  004650  EF2C  F023         	goto	u5990
 10944  004654                     u5991:
 10945  004654  EF35  F023         	goto	l4801
 10946  004658                     u5990:
 10947  004658                     
 10948                           ;LCD_16x2_4bit_mode.c: 61:     {;LCD_16x2_4bit_mode.c: 62:         location=(0x80) | ((p
      +                          os) & 0x0f);
 10949  004658  500B               	movf	LCD_String_xy@pos^0,w,c
 10950  00465A  0B0F               	andlw	15
 10951  00465C  0980               	iorlw	128
 10952  00465E  6E0F               	movwf	LCD_String_xy@location^0,c
 10953  004660                     
 10954                           ;LCD_16x2_4bit_mode.c: 63:         LCD_Command(location);
 10955  004660  500F               	movf	LCD_String_xy@location^0,w,c
 10956  004662  EC4E  F022         	call	_LCD_Command
 10957                           
 10958                           ;LCD_16x2_4bit_mode.c: 64:     }
 10959  004666  EF3C  F023         	goto	l4805
 10960  00466A                     l4801:
 10961                           
 10962                           ;LCD_16x2_4bit_mode.c: 66:     {;LCD_16x2_4bit_mode.c: 67:         location=(0xC0) | ((p
      +                          os) & 0x0f);
 10963  00466A  500B               	movf	LCD_String_xy@pos^0,w,c
 10964  00466C  0B0F               	andlw	15
 10965  00466E  09C0               	iorlw	192
 10966  004670  6E0F               	movwf	LCD_String_xy@location^0,c
 10967  004672                     
 10968                           ;LCD_16x2_4bit_mode.c: 68:         LCD_Command(location);
 10969  004672  500F               	movf	LCD_String_xy@location^0,w,c
 10970  004674  EC4E  F022         	call	_LCD_Command
 10971  004678                     l4805:
 10972                           
 10973                           ;LCD_16x2_4bit_mode.c: 72:     LCD_String(msg);
 10974  004678  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 10975  00467C  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 10976  004680  EC7A  F021         	call	_LCD_String	;wreg free
 10977  004684  0012               	return		;funcret
 10978  004686                     __end_of_LCD_String_xy:
 10979                           	callstack 0
 10980                           
 10981 ;; *************** function _LCD_String *****************
 10982 ;; Defined at:
 10983 ;;		line 47 in file "LCD_16x2_4bit_mode.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 10986 ;;		 -> main@Total_distance(20), STR_3(18), STR_2(14), STR_1(13), 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10998 ;;      Params:         2       0       0       0       0       0       0       0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11001 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11002 ;;Total ram usage:        2 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    3
 11005 ;; This function calls:
 11006 ;;		_LCD_Char
 11007 ;; This function is called by:
 11008 ;;		_LCD_String_xy
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text40
 11013  0042F4                     __ptext40:
 11014                           	callstack 0
 11015  0042F4                     _LCD_String:
 11016                           	callstack 26
 11017  0042F4                     
 11018                           ;LCD_16x2_4bit_mode.c: 47: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 48: {;
      +                          LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 11019  0042F4  EF90  F021         	goto	l4767
 11020  0042F8                     l4763:
 11021                           
 11022                           ;LCD_16x2_4bit_mode.c: 50:  {;LCD_16x2_4bit_mode.c: 51:    LCD_Char(*msg);
 11023  0042F8  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11024  0042FC  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11025  004300  6AF8               	clrf	tblptru,c
 11026  004302  0E07               	movlw	(high __ramtop+-1)
 11027  004304  64F7               	cpfsgt	tblptrh,c
 11028  004306  D003               	bra	u5957
 11029  004308  0008               	tblrd		*
 11030  00430A  50F5               	movf	tablat,w,c
 11031  00430C  D005               	bra	u5950
 11032  00430E                     u5957:
 11033  00430E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11034  004312  CFF7 FFE2          	movff	tblptrh,fsr1h
 11035  004316  50E7               	movf	indf1,w,c
 11036  004318                     u5950:
 11037  004318  EC28  F022         	call	_LCD_Char
 11038  00431C                     
 11039                           ;LCD_16x2_4bit_mode.c: 52:    msg++;
 11040  00431C  4A09               	infsnz	LCD_String@msg^0,f,c
 11041  00431E  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11042  004320                     l4767:
 11043                           
 11044                           ;LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 11045  004320  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11046  004324  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11047  004328  6AF8               	clrf	tblptru,c
 11048  00432A  0E07               	movlw	(high __ramtop+-1)
 11049  00432C  64F7               	cpfsgt	tblptrh,c
 11050  00432E  D003               	bra	u5967
 11051  004330  0008               	tblrd		*
 11052  004332  50F5               	movf	tablat,w,c
 11053  004334  D005               	bra	u5960
 11054  004336                     u5967:
 11055  004336  CFF6 FFE1          	movff	tblptrl,fsr1l
 11056  00433A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11057  00433E  50E7               	movf	indf1,w,c
 11058  004340                     u5960:
 11059  004340  0900               	iorlw	0
 11060  004342  A4D8               	btfss	status,2,c
 11061  004344  EFA6  F021         	goto	u5971
 11062  004348  EFA8  F021         	goto	u5970
 11063  00434C                     u5971:
 11064  00434C  EF7C  F021         	goto	l4763
 11065  004350                     u5970:
 11066  004350  0012               	return		;funcret
 11067  004352                     __end_of_LCD_String:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _LCD_Char *****************
 11071 ;; Defined at:
 11072 ;;		line 33 in file "LCD_16x2_4bit_mode.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;  dat             1    wreg     unsigned char 
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  dat             1    7[COMRAM] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0
 11087 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11088 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11089 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11090 ;;Total ram usage:        2 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    2
 11093 ;; This function calls:
 11094 ;;		_MSdelay
 11095 ;; This function is called by:
 11096 ;;		_LCD_String
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text41
 11101  004450                     __ptext41:
 11102                           	callstack 0
 11103  004450                     _LCD_Char:
 11104                           	callstack 26
 11105                           
 11106                           ;incstack = 0
 11107                           ;LCD_Char@dat stored from wreg
 11108  004450  6E08               	movwf	LCD_Char@dat^0,c
 11109  004452                     
 11110                           ;LCD_16x2_4bit_mode.c: 33: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 34: {;
      +                          LCD_16x2_4bit_mode.c: 35:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 11111  004452  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11112  004456  0EF0               	movlw	240
 11113  004458  1607               	andwf	??_LCD_Char^0,f,c
 11114  00445A  508C               	movf	140,w,c	;volatile
 11115  00445C  0B0F               	andlw	15
 11116  00445E  1007               	iorwf	??_LCD_Char^0,w,c
 11117  004460  6E8C               	movwf	140,c	;volatile
 11118  004462                     
 11119                           ;LCD_16x2_4bit_mode.c: 36:  LATD2 = 1;
 11120  004462  848C               	bsf	3980,2,c	;volatile
 11121  004464                     
 11122                           ;LCD_16x2_4bit_mode.c: 37:  LATD3 = 1;
 11123  004464  868C               	bsf	3980,3,c	;volatile
 11124  004466                     
 11125                           ;LCD_16x2_4bit_mode.c: 38:  __nop();
 11126  004466  F000               	nop	
 11127  004468                     
 11128                           ;LCD_16x2_4bit_mode.c: 39:  LATD3 = 0;
 11129  004468  968C               	bcf	3980,3,c	;volatile
 11130  00446A                     
 11131                           ;LCD_16x2_4bit_mode.c: 40:  MSdelay(1);
 11132  00446A  0E00               	movlw	0
 11133  00446C  6E02               	movwf	(MSdelay@val+1)^0,c
 11134  00446E  0E01               	movlw	1
 11135  004470  6E01               	movwf	MSdelay@val^0,c
 11136  004472  EC99  F022         	call	_MSdelay	;wreg free
 11137  004476                     
 11138                           ;LCD_16x2_4bit_mode.c: 41:     LATD = (LATD & 0x0f) | (dat<<4);
 11139  004476  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11140  00447A  3A07               	swapf	??_LCD_Char^0,f,c
 11141  00447C  0EF0               	movlw	240
 11142  00447E  1607               	andwf	??_LCD_Char^0,f,c
 11143  004480  508C               	movf	140,w,c	;volatile
 11144  004482  0B0F               	andlw	15
 11145  004484  1007               	iorwf	??_LCD_Char^0,w,c
 11146  004486  6E8C               	movwf	140,c	;volatile
 11147  004488                     
 11148                           ;LCD_16x2_4bit_mode.c: 42:  LATD3 = 1;
 11149  004488  868C               	bsf	3980,3,c	;volatile
 11150  00448A                     
 11151                           ;LCD_16x2_4bit_mode.c: 43:  __nop();
 11152  00448A  F000               	nop	
 11153  00448C                     
 11154                           ;LCD_16x2_4bit_mode.c: 44:  LATD3 = 0;
 11155  00448C  968C               	bcf	3980,3,c	;volatile
 11156                           
 11157                           ;LCD_16x2_4bit_mode.c: 45:  MSdelay(3);
 11158  00448E  0E00               	movlw	0
 11159  004490  6E02               	movwf	(MSdelay@val+1)^0,c
 11160  004492  0E03               	movlw	3
 11161  004494  6E01               	movwf	MSdelay@val^0,c
 11162  004496  EC99  F022         	call	_MSdelay	;wreg free
 11163  00449A  0012               	return		;funcret
 11164  00449C                     __end_of_LCD_Char:
 11165                           	callstack 0
 11166                           
 11167 ;; *************** function _LCD_Init *****************
 11168 ;; Defined at:
 11169 ;;		line 5 in file "LCD_16x2_4bit_mode.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;		None
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;		None
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg, status,2, status,0, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : 0/0
 11180 ;;		On exit  : 0/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11183 ;;      Params:         0       0       0       0       0       0       0       0       0
 11184 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11186 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11187 ;;Total ram usage:        0 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:    3
 11190 ;; This function calls:
 11191 ;;		_LCD_Command
 11192 ;;		_MSdelay
 11193 ;; This function is called by:
 11194 ;;		_main
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text42
 11199  004764                     __ptext42:
 11200                           	callstack 0
 11201  004764                     _LCD_Init:
 11202                           	callstack 27
 11203  004764                     
 11204                           ;LCD_16x2_4bit_mode.c: 7:     TRISD = 0;
 11205  004764  0E00               	movlw	0
 11206  004766  6E95               	movwf	149,c	;volatile
 11207  004768                     
 11208                           ;LCD_16x2_4bit_mode.c: 8:     MSdelay(15);
 11209  004768  0E00               	movlw	0
 11210  00476A  6E02               	movwf	(MSdelay@val+1)^0,c
 11211  00476C  0E0F               	movlw	15
 11212  00476E  6E01               	movwf	MSdelay@val^0,c
 11213  004770  EC99  F022         	call	_MSdelay	;wreg free
 11214  004774                     
 11215                           ;LCD_16x2_4bit_mode.c: 9:     LCD_Command(0x02);
 11216  004774  0E02               	movlw	2
 11217  004776  EC4E  F022         	call	_LCD_Command
 11218  00477A                     
 11219                           ;LCD_16x2_4bit_mode.c: 11:     LCD_Command(0x28);
 11220  00477A  0E28               	movlw	40
 11221  00477C  EC4E  F022         	call	_LCD_Command
 11222  004780                     
 11223                           ;LCD_16x2_4bit_mode.c: 13:  LCD_Command(0x01);
 11224  004780  0E01               	movlw	1
 11225  004782  EC4E  F022         	call	_LCD_Command
 11226  004786                     
 11227                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x0c);
 11228  004786  0E0C               	movlw	12
 11229  004788  EC4E  F022         	call	_LCD_Command
 11230  00478C                     
 11231                           ;LCD_16x2_4bit_mode.c: 15:  LCD_Command(0x06);
 11232  00478C  0E06               	movlw	6
 11233  00478E  EC4E  F022         	call	_LCD_Command
 11234  004792  0012               	return		;funcret
 11235  004794                     __end_of_LCD_Init:
 11236                           	callstack 0
 11237                           
 11238 ;; *************** function _LCD_Command *****************
 11239 ;; Defined at:
 11240 ;;		line 18 in file "LCD_16x2_4bit_mode.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;  cmd             1    wreg     unsigned char 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  cmd             1    7[COMRAM] unsigned char 
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      void 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0, cstack
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11254 ;;      Params:         0       0       0       0       0       0       0       0       0
 11255 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11256 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11257 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11258 ;;Total ram usage:        2 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    2
 11261 ;; This function calls:
 11262 ;;		_MSdelay
 11263 ;; This function is called by:
 11264 ;;		_LCD_Init
 11265 ;;		_LCD_String_xy
 11266 ;;		_LCD_Clear
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text43
 11271  00449C                     __ptext43:
 11272                           	callstack 0
 11273  00449C                     _LCD_Command:
 11274                           	callstack 26
 11275                           
 11276                           ;incstack = 0
 11277                           ;LCD_Command@cmd stored from wreg
 11278  00449C  6E08               	movwf	LCD_Command@cmd^0,c
 11279  00449E                     
 11280                           ;LCD_16x2_4bit_mode.c: 18: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 19
      +                          : {;LCD_16x2_4bit_mode.c: 20:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11281  00449E  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11282  0044A2  0EF0               	movlw	240
 11283  0044A4  1607               	andwf	??_LCD_Command^0,f,c
 11284  0044A6  508C               	movf	140,w,c	;volatile
 11285  0044A8  0B0F               	andlw	15
 11286  0044AA  1007               	iorwf	??_LCD_Command^0,w,c
 11287  0044AC  6E8C               	movwf	140,c	;volatile
 11288  0044AE                     
 11289                           ;LCD_16x2_4bit_mode.c: 21:  LATD2 = 0;
 11290  0044AE  948C               	bcf	3980,2,c	;volatile
 11291  0044B0                     
 11292                           ;LCD_16x2_4bit_mode.c: 22:  LATD3 = 1;
 11293  0044B0  868C               	bsf	3980,3,c	;volatile
 11294  0044B2                     
 11295                           ;LCD_16x2_4bit_mode.c: 23:  __nop();
 11296  0044B2  F000               	nop	
 11297  0044B4                     
 11298                           ;LCD_16x2_4bit_mode.c: 24:  LATD3 = 0;
 11299  0044B4  968C               	bcf	3980,3,c	;volatile
 11300  0044B6                     
 11301                           ;LCD_16x2_4bit_mode.c: 25:  MSdelay(1);
 11302  0044B6  0E00               	movlw	0
 11303  0044B8  6E02               	movwf	(MSdelay@val+1)^0,c
 11304  0044BA  0E01               	movlw	1
 11305  0044BC  6E01               	movwf	MSdelay@val^0,c
 11306  0044BE  EC99  F022         	call	_MSdelay	;wreg free
 11307  0044C2                     
 11308                           ;LCD_16x2_4bit_mode.c: 26:     LATD = (LATD & 0x0f) | (cmd<<4);
 11309  0044C2  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11310  0044C6  3A07               	swapf	??_LCD_Command^0,f,c
 11311  0044C8  0EF0               	movlw	240
 11312  0044CA  1607               	andwf	??_LCD_Command^0,f,c
 11313  0044CC  508C               	movf	140,w,c	;volatile
 11314  0044CE  0B0F               	andlw	15
 11315  0044D0  1007               	iorwf	??_LCD_Command^0,w,c
 11316  0044D2  6E8C               	movwf	140,c	;volatile
 11317  0044D4                     
 11318                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 1;
 11319  0044D4  868C               	bsf	3980,3,c	;volatile
 11320  0044D6                     
 11321                           ;LCD_16x2_4bit_mode.c: 28:  __nop();
 11322  0044D6  F000               	nop	
 11323  0044D8                     
 11324                           ;LCD_16x2_4bit_mode.c: 29:  LATD3 = 0;
 11325  0044D8  968C               	bcf	3980,3,c	;volatile
 11326                           
 11327                           ;LCD_16x2_4bit_mode.c: 30:  MSdelay(3);
 11328  0044DA  0E00               	movlw	0
 11329  0044DC  6E02               	movwf	(MSdelay@val+1)^0,c
 11330  0044DE  0E03               	movlw	3
 11331  0044E0  6E01               	movwf	MSdelay@val^0,c
 11332  0044E2  EC99  F022         	call	_MSdelay	;wreg free
 11333  0044E6  0012               	return		;funcret
 11334  0044E8                     __end_of_LCD_Command:
 11335                           	callstack 0
 11336                           
 11337 ;; *************** function _MSdelay *****************
 11338 ;; Defined at:
 11339 ;;		line 81 in file "LCD_16x2_4bit_mode.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;  val             2    0[COMRAM] unsigned int 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  j               2    4[COMRAM] unsigned int 
 11344 ;;  i               2    2[COMRAM] unsigned int 
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11354 ;;      Params:         2       0       0       0       0       0       0       0       0
 11355 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11357 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11358 ;;Total ram usage:        6 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    1
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_main
 11365 ;;		_LCD_Init
 11366 ;;		_LCD_Command
 11367 ;;		_LCD_Char
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text44
 11372  004532                     __ptext44:
 11373                           	callstack 0
 11374  004532                     _MSdelay:
 11375                           	callstack 26
 11376  004532                     
 11377                           ;LCD_16x2_4bit_mode.c: 81: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 82: {;LC
      +                          D_16x2_4bit_mode.c: 83:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 84:  for(i=0;i<val;i++)
 11378  004532  0E00               	movlw	0
 11379  004534  6E04               	movwf	(MSdelay@i+1)^0,c
 11380  004536  0E00               	movlw	0
 11381  004538  6E03               	movwf	MSdelay@i^0,c
 11382  00453A  EFB2  F022         	goto	l4157
 11383  00453E                     l4145:
 11384                           
 11385                           ;LCD_16x2_4bit_mode.c: 85:      for(j=0;j<165;j++);
 11386  00453E  0E00               	movlw	0
 11387  004540  6E06               	movwf	(MSdelay@j+1)^0,c
 11388  004542  0E00               	movlw	0
 11389  004544  6E05               	movwf	MSdelay@j^0,c
 11390  004546                     l4151:
 11391  004546  4A05               	infsnz	MSdelay@j^0,f,c
 11392  004548  2A06               	incf	(MSdelay@j+1)^0,f,c
 11393  00454A  5006               	movf	(MSdelay@j+1)^0,w,c
 11394  00454C  E109               	bnz	u4960
 11395  00454E  0EA5               	movlw	165
 11396  004550  5C05               	subwf	MSdelay@j^0,w,c
 11397  004552  A0D8               	btfss	status,0,c
 11398  004554  EFAE  F022         	goto	u4961
 11399  004558  EFB0  F022         	goto	u4960
 11400  00455C                     u4961:
 11401  00455C  EFA3  F022         	goto	l4151
 11402  004560                     u4960:
 11403  004560  4A03               	infsnz	MSdelay@i^0,f,c
 11404  004562  2A04               	incf	(MSdelay@i+1)^0,f,c
 11405  004564                     l4157:
 11406  004564  5001               	movf	MSdelay@val^0,w,c
 11407  004566  5C03               	subwf	MSdelay@i^0,w,c
 11408  004568  5002               	movf	(MSdelay@val+1)^0,w,c
 11409  00456A  5804               	subwfb	(MSdelay@i+1)^0,w,c
 11410  00456C  A0D8               	btfss	status,0,c
 11411  00456E  EFBB  F022         	goto	u4971
 11412  004572  EFBD  F022         	goto	u4970
 11413  004576                     u4971:
 11414  004576  EF9F  F022         	goto	l4145
 11415  00457A                     u4970:
 11416  00457A  0012               	return		;funcret
 11417  00457C                     __end_of_MSdelay:
 11418                           	callstack 0
 11419                           
 11420 ;; *************** function _Int_Ext *****************
 11421 ;; Defined at:
 11422 ;;		line 376 in file "distance_finding.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;		None
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;		None
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      void 
 11429 ;; Registers used:
 11430 ;;		None
 11431 ;; Tracked objects:
 11432 ;;		On entry : 0/0
 11433 ;;		On exit  : 0/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11436 ;;      Params:         0       0       0       0       0       0       0       0       0
 11437 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11438 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11439 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11440 ;;Total ram usage:        0 bytes
 11441 ;; Hardware stack levels used:    1
 11442 ;; Hardware stack levels required when called:    1
 11443 ;; This function calls:
 11444 ;;		Nothing
 11445 ;; This function is called by:
 11446 ;;		_main
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           	psect	text45
 11451  0047CC                     __ptext45:
 11452                           	callstack 0
 11453  0047CC                     _Int_Ext:
 11454                           	callstack 29
 11455  0047CC                     
 11456                           ;distance_finding.c: 377:     TRISBbits.RB0 = 1;
 11457  0047CC  8093               	bsf	147,0,c	;volatile
 11458                           
 11459                           ;distance_finding.c: 378:     INTCONbits.INT0IE = 1;
 11460  0047CE  88F2               	bsf	242,4,c	;volatile
 11461                           
 11462                           ;distance_finding.c: 379:     INTCONbits.INT0IF = 0;
 11463  0047D0  92F2               	bcf	242,1,c	;volatile
 11464                           
 11465                           ;distance_finding.c: 380:     INTCON2bits.INTEDG0 = 0;
 11466  0047D2  9CF1               	bcf	241,6,c	;volatile
 11467                           
 11468                           ;distance_finding.c: 381:     INTCONbits.GIE = 1;
 11469  0047D4  8EF2               	bsf	242,7,c	;volatile
 11470  0047D6  0012               	return		;funcret
 11471  0047D8                     __end_of_Int_Ext:
 11472                           	callstack 0
 11473                           
 11474 ;; *************** function _INT_isr *****************
 11475 ;; Defined at:
 11476 ;;		line 386 in file "distance_finding.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;		None
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;		None
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      void 
 11483 ;; Registers used:
 11484 ;;		status,2, status,0
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11490 ;;      Params:         0       0       0       0       0       0       0       0       0
 11491 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11493 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11494 ;;Total ram usage:        0 bytes
 11495 ;; Hardware stack levels used:    1
 11496 ;; This function calls:
 11497 ;;		Nothing
 11498 ;; This function is called by:
 11499 ;;		Interrupt level 2
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	intcode
 11504  000008                     __pintcode:
 11505                           	callstack 0
 11506  000008                     _INT_isr:
 11507                           	callstack 22
 11508                           
 11509                           ;incstack = 0
 11510  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11511  00000A  EDDD  F023         	call	int_func,f	;refresh shadow registers
 11512                           
 11513                           	psect	intcode_body
 11514  0047BA                     __pintcode_body:
 11515                           	callstack 22
 11516  0047BA                     int_func:
 11517                           	callstack 22
 11518  0047BA  0006               	pop		; remove dummy address from shadow register refresh
 11519  0047BC                     
 11520                           ;distance_finding.c: 387:     cont++;
 11521  0047BC  0100               	movlb	0	; () banked
 11522  0047BE  4BF6               	infsnz	_cont& (0+255),f,b
 11523  0047C0  2BF7               	incf	(_cont+1)& (0+255),f,b
 11524  0047C2                     
 11525                           ; BSR set to: 0
 11526                           ;distance_finding.c: 388:     LATA = cont;
 11527  0047C2  C0F6  FF89         	movff	_cont,3977	;volatile
 11528  0047C6                     
 11529                           ; BSR set to: 0
 11530                           ;distance_finding.c: 389:     INTCONbits.INT0IF = 0;
 11531  0047C6  92F2               	bcf	242,1,c	;volatile
 11532  0047C8                     
 11533                           ; BSR set to: 0
 11534  0047C8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11535  0047CA  0011               	retfie		f
 11536  0047CC                     __end_of_INT_isr:
 11537                           	callstack 0
 11538                           
 11539                           	psect	rparam
 11540  0000                     
 11541                           	psect	temp
 11542  00005F                     btemp:
 11543                           	callstack 0
 11544  00005F                     	ds	1
 11545  0000                     int$flags	set	btemp
 11546  0000                     wtemp8	set	btemp+1
 11547  0000                     ttemp5	set	btemp+1
 11548  0000                     ttemp6	set	btemp+4
 11549  0000                     ttemp7	set	btemp+8
 11550                           
 11551                           	psect	idloc
 11552                           
 11553                           ;Config register IDLOC0 @ 0x200000
 11554                           ;	unspecified, using default values
 11555  200000                     	org	2097152
 11556  200000  FF                 	db	255
 11557                           
 11558                           ;Config register IDLOC1 @ 0x200001
 11559                           ;	unspecified, using default values
 11560  200001                     	org	2097153
 11561  200001  FF                 	db	255
 11562                           
 11563                           ;Config register IDLOC2 @ 0x200002
 11564                           ;	unspecified, using default values
 11565  200002                     	org	2097154
 11566  200002  FF                 	db	255
 11567                           
 11568                           ;Config register IDLOC3 @ 0x200003
 11569                           ;	unspecified, using default values
 11570  200003                     	org	2097155
 11571  200003  FF                 	db	255
 11572                           
 11573                           ;Config register IDLOC4 @ 0x200004
 11574                           ;	unspecified, using default values
 11575  200004                     	org	2097156
 11576  200004  FF                 	db	255
 11577                           
 11578                           ;Config register IDLOC5 @ 0x200005
 11579                           ;	unspecified, using default values
 11580  200005                     	org	2097157
 11581  200005  FF                 	db	255
 11582                           
 11583                           ;Config register IDLOC6 @ 0x200006
 11584                           ;	unspecified, using default values
 11585  200006                     	org	2097158
 11586  200006  FF                 	db	255
 11587                           
 11588                           ;Config register IDLOC7 @ 0x200007
 11589                           ;	unspecified, using default values
 11590  200007                     	org	2097159
 11591  200007  FF                 	db	255
 11592                           
 11593                           	psect	config
 11594                           
 11595                           ;Config register CONFIG1L @ 0x300000
 11596                           ;	PLL Prescaler Selection bits
 11597                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 11598                           ;	System Clock Postscaler Selection bits
 11599                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 11600                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11601                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 11602  300000                     	org	3145728
 11603  300000  00                 	db	0
 11604                           
 11605                           ;Config register CONFIG1H @ 0x300001
 11606                           ;	Oscillator Selection bits
 11607                           ;	FOSC = HS, HS oscillator (HS)
 11608                           ;	Fail-Safe Clock Monitor Enable bit
 11609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11610                           ;	Internal/External Oscillator Switchover bit
 11611                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11612  300001                     	org	3145729
 11613  300001  0C                 	db	12
 11614                           
 11615                           ;Config register CONFIG2L @ 0x300002
 11616                           ;	Power-up Timer Enable bit
 11617                           ;	PWRT = ON, PWRT enabled
 11618                           ;	Brown-out Reset Enable bits
 11619                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 11620                           ;	Brown-out Reset Voltage bits
 11621                           ;	BORV = 3, Minimum setting 2.05V
 11622                           ;	USB Voltage Regulator Enable bit
 11623                           ;	VREGEN = OFF, USB voltage regulator disabled
 11624  300002                     	org	3145730
 11625  300002  18                 	db	24
 11626                           
 11627                           ;Config register CONFIG2H @ 0x300003
 11628                           ;	Watchdog Timer Enable bit
 11629                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11630                           ;	Watchdog Timer Postscale Select bits
 11631                           ;	WDTPS = 32768, 1:32768
 11632  300003                     	org	3145731
 11633  300003  1E                 	db	30
 11634                           
 11635                           ; Padding undefined space
 11636  300004                     	org	3145732
 11637  300004  FF                 	db	255
 11638                           
 11639                           ;Config register CONFIG3H @ 0x300005
 11640                           ;	CCP2 MUX bit
 11641                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 11642                           ;	PORTB A/D Enable bit
 11643                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11644                           ;	Low-Power Timer 1 Oscillator Enable bit
 11645                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11646                           ;	MCLR Pin Enable bit
 11647                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11648  300005                     	org	3145733
 11649  300005  81                 	db	129
 11650                           
 11651                           ;Config register CONFIG4L @ 0x300006
 11652                           ;	Stack Full/Underflow Reset Enable bit
 11653                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11654                           ;	Single-Supply ICSP Enable bit
 11655                           ;	LVP = OFF, Single-Supply ICSP disabled
 11656                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11657                           ;	ICPRT = OFF, ICPORT disabled
 11658                           ;	Extended Instruction Set Enable bit
 11659                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11660                           ;	Background Debugger Enable bit
 11661                           ;	DEBUG = 0x1, unprogrammed default
 11662  300006                     	org	3145734
 11663  300006  81                 	db	129
 11664                           
 11665                           ; Padding undefined space
 11666  300007                     	org	3145735
 11667  300007  FF                 	db	255
 11668                           
 11669                           ;Config register CONFIG5L @ 0x300008
 11670                           ;	Code Protection bit
 11671                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 11672                           ;	Code Protection bit
 11673                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 11674                           ;	Code Protection bit
 11675                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 11676                           ;	Code Protection bit
 11677                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 11678  300008                     	org	3145736
 11679  300008  0F                 	db	15
 11680                           
 11681                           ;Config register CONFIG5H @ 0x300009
 11682                           ;	Boot Block Code Protection bit
 11683                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 11684                           ;	Data EEPROM Code Protection bit
 11685                           ;	CPD = OFF, Data EEPROM is not code-protected
 11686  300009                     	org	3145737
 11687  300009  C0                 	db	192
 11688                           
 11689                           ;Config register CONFIG6L @ 0x30000A
 11690                           ;	Write Protection bit
 11691                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 11692                           ;	Write Protection bit
 11693                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 11694                           ;	Write Protection bit
 11695                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 11696                           ;	Write Protection bit
 11697                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 11698  30000A                     	org	3145738
 11699  30000A  0F                 	db	15
 11700                           
 11701                           ;Config register CONFIG6H @ 0x30000B
 11702                           ;	Configuration Register Write Protection bit
 11703                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11704                           ;	Boot Block Write Protection bit
 11705                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 11706                           ;	Data EEPROM Write Protection bit
 11707                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11708  30000B                     	org	3145739
 11709  30000B  E0                 	db	224
 11710                           
 11711                           ;Config register CONFIG7L @ 0x30000C
 11712                           ;	Table Read Protection bit
 11713                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11714                           ;	Table Read Protection bit
 11715                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11716                           ;	Table Read Protection bit
 11717                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11718                           ;	Table Read Protection bit
 11719                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11720  30000C                     	org	3145740
 11721  30000C  0F                 	db	15
 11722                           
 11723                           ;Config register CONFIG7H @ 0x30000D
 11724                           ;	Boot Block Table Read Protection bit
 11725                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 11726  30000D                     	org	3145741
 11727  30000D  40                 	db	64
 11728                           tosu	equ	0xFFF
 11729                           tosh	equ	0xFFE
 11730                           tosl	equ	0xFFD
 11731                           stkptr	equ	0xFFC
 11732                           pclatu	equ	0xFFB
 11733                           pclath	equ	0xFFA
 11734                           pcl	equ	0xFF9
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodh	equ	0xFF4
 11740                           prodl	equ	0xFF3
 11741                           indf0	equ	0xFEF
 11742                           postinc0	equ	0xFEE
 11743                           postdec0	equ	0xFED
 11744                           preinc0	equ	0xFEC
 11745                           plusw0	equ	0xFEB
 11746                           fsr0h	equ	0xFEA
 11747                           fsr0l	equ	0xFE9
 11748                           wreg	equ	0xFE8
 11749                           indf1	equ	0xFE7
 11750                           postinc1	equ	0xFE6
 11751                           postdec1	equ	0xFE5
 11752                           preinc1	equ	0xFE4
 11753                           plusw1	equ	0xFE3
 11754                           fsr1h	equ	0xFE2
 11755                           fsr1l	equ	0xFE1
 11756                           bsr	equ	0xFE0
 11757                           indf2	equ	0xFDF
 11758                           postinc2	equ	0xFDE
 11759                           postdec2	equ	0xFDD
 11760                           preinc2	equ	0xFDC
 11761                           plusw2	equ	0xFDB
 11762                           fsr2h	equ	0xFDA
 11763                           fsr2l	equ	0xFD9
 11764                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        8
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160    108     154
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S758_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), STR_3(CODE[18]), STR_2(CODE[14]), STR_1(CODE[13]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), STR_3(CODE[18]), STR_2(CODE[14]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_Clear->_LCD_Command
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   39170
                                             91 COMRAM     1     1      0
                                             86 BANK0     22    22      0
                            _Int_Ext
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                          _Secuence1
                          _Secuence2
                          _Secuence3
                          _Secuence4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   33389
                                             81 COMRAM    10    10      0
                                             78 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32878
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   32491
                                             63 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21769
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Secuence4                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (1) _Secuence3                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Secuence2                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     592
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Secuence1                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2200
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     713
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1140
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     548
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _Secuence1
   _Secuence2
     _LCD_Clear
       _LCD_Command
         _MSdelay
   _Secuence3
   _Secuence4
     _LCD_Clear
       _LCD_Command
         _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148      20        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 24 16:53:54 2020

           ___fldiv@aexp 0019             ___fldiv@bexp 0018                        _a 00E6  
                      _b 00F8                        _c 00EE                        _d 005D  
                      _e 00F2                        _f 00EC             ___fldiv@sign 0011  
           ?_LCD_Command 0001                       l89 3670             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              ?_LCD_String 0009             main@Distance 00CA  
                    l112 31E8                      l121 2E9E                      l202 4350  
                    l106 30E0                      l210 47E6                      l130 303A  
                    l115 3274                      l124 2F22                      l109 3164  
                    l133 3052                      l221 47B8                      l118 328C  
                    l142 2D72                      l207 4684                      l127 2FA6  
                    l151 29E8                      l136 2C50                      l145 2DFA  
                    l218 457A                      l162 2BA6                      l154 2A64  
                    l139 2CE2                      l148 2E12                      l165 2BB6  
                    l157 2B22                      l190 4792                      l335 3940  
                    _ADC 00E8                      l168 47D6                      l193 44E6  
                    l196 449A                      l348 3AA4                      l452 40D6  
                    l518 3BAA                      l480 4230                      l465 4186  
                    l803 266A                      l491 3CAE                      l805 24CA  
                    l814 2510                      l486 3C68                      l750 1BC4  
                    l495 46F4                      l751 1B8A                      l816 2588  
                    l808 248E                      l817 2576                      l842 2162  
                    l835 1F6C                      l852 2292                      l844 21DA  
                    l845 21C8                      l749 1BD6                      l942 3F94  
                    l766 1CF0                      l758 1EA6                      l839 22D0  
                    l775 1DC0                      l791 45C0                      l776 1DAE  
                    l945 3FD6                      l953 270C                      l947 4012  
                    l955 2714                      l973 294E                      l991 13FA  
                    l899 444E                      _RB0 007C08                      _RB1 007C09  
                    _RC0 007C10                      _RB2 007C0A                      _RC1 007C11  
                    _RC2 007C12                      _RB4 007C0C                      _RB5 007C0D  
                    _RC4 007C14                      _RB6 007C0E                      _abs 4606  
                    _pad 3F4E             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0012             ___flmul@bexp 0013             ___flmul@sign 000D  
           ___flmul@temp 0018             ___flmul@prod 0014              LCD_Char@dat 0008  
           ___fltol@exp1 000A                     l1110 4292                     l1103 1930  
                   l1120 3DAC                     l1009 0C38                     l1035 0FD0  
                   ?_abs 0013                     l1204 3F4C                     l1212 4604  
                   l1125 463C                     l1221 43AC                     l1109 428A  
                   l1215 47E8                     l1231 3E82                     l1128 4644  
                   l1241 42EA                     l1227 4762                     l1156 3626  
                   l1165 349E                     l1246 42F2                     l1078 14EE  
                   l1175 472C                     l1183 43FE                     l1159 362E  
                   l1095 19E6                     l1168 33E2                     l4001 3AFA  
                   l4003 3AFC                     l3301 1A4E                     l4005 3B0C  
                   l4101 32AE                     l1189 46BC                     l3311 1A7C  
                   l3303 1A54                     l4031 3B8A                     l4015 3B36  
                   l4007 3B10                     l4111 3396                     l4103 3304  
                   l5001 2C34                     l4041 3F72                     l4201 28B8  
                   l3401 1C52                     l3321 1AB0                     l3313 1A7E  
                   l3305 1A66                     l4033 3B9A                     l4025 3B5E  
                   l4017 3B40                     l4009 3B1E                     l4121 347E  
                   l4113 33D2                     l4105 3318                     l5011 2C70  
                   l5003 2C3C                     l4131 43AE                     l4051 3FB8  
                   l4043 3F80                     l4211 2902                     l4203 28C8  
                   l3411 1CBE                     l3403 1C54                     l3331 1AEC  
                   l3315 1A8E                     l3323 1AB8                     l3307 1A68  
                   l4027 3B6A                     l4019 3B4A                     l4123 348E  
                   l4107 3326                     l4115 3406                     l5021 2CC0  
                   l5013 2C78                     l5005 2C3E                     l5101 29DC  
                   l4133 43B2                     l4061 4620                     l4053 3FE6  
                   l4045 3F8C                     l4037 3F4E                     l4213 290E  
                   l4205 28DA                     l3421 1D16                     l3413 1CC0  
                   l3405 1C5E                     l3341 1B00                     l3333 1AF0  
                   l3325 1AC8                     l3317 1A9E                     l3309 1A6E  
                   l4029 3B7A                     l4117 3442                     l4301 0B98  
                   l4221 084C                     l4151 4546                     l4143 4532  
                   l5031 2CDC                     l5023 2CC4                     l5015 2C8E  
                   l5007 2C4A                     l5111 2A10                     l5103 29E0  
                   l4127 46F6                     l4135 43C6                     l3271 3E96  
                   l4055 3FFA                     l4047 3FA0                     l4039 3F5E  
                   l4215 2916                     l4207 28EA                     l3431 1D44  
                   l3415 1CD0                     l3407 1C64                     l3351 1B14  
                   l3343 1B04                     l3335 1AF4                     l3327 1ADA  
                   l3319 1AAE                     l4071 3D42                     l4063 3CB0  
                   l4119 3456                     l3503 4686                     l4311 0BF8  
                   l4303 0BA0                     l4231 08A0                     l4223 0856  
                   l4153 454A                     l4145 453E                     l5041 2D2E  
                   l5033 2CF0                     l5025 2CC6                     l5017 2C9C  
                   l5009 2C5E                     l5121 2A5A                     l5113 2A26  
                   l5105 29E2                     l4137 43F4                     l3521 37F0  
                   l3513 37BA                     l3273 3EA8                     l4049 3FB4  
                   l4209 28F0                     l4217 2926                     l4161 268C  
                   l3601 22FE                     l3433 1D52                     l3425 1D2A  
                   l3441 1D70                     l3409 1C8A                     l3417 1CE0  
                   l3353 1B18                     l3345 1B08                     l3337 1AF8  
                   l3329 1AE8                     l3361 1B28                     l4081 3DA4  
                   l4065 3CD0                     l4401 1084                     l4313 0C0A  
                   l4305 0BD2                     l4241 08E4                     l4233 08AA  
                   l4225 0866                     l5201 366C                     l4155 4560  
                   l5051 2D60                     l5043 2D40                     l5035 2D02  
                   l5027 2CCE                     l5019 2CAE                     l5131 2AA2  
                   l5123 2A5E                     l5115 2A34                     l5107 29F6  
                   l3507 4794                     l4139 43F8                     l3531 384C  
                   l3523 37FE                     l3515 37BE                     l4059 4606  
                   l3275 3EB2                     l4171 2700                     l4163 26B4  
                   l3611 2338                     l3603 230E                     l3435 1D5A  
                   l3427 1D34                     l3419 1D06                     l3443 1D7E  
                   l3371 1B98                     l3363 1B2C                     l3355 1B1C  
                   l3347 1B0C                     l3339 1AFC                     l3291 1A14  
                   l3283 19E8                     l4067 3D0E                     l4075 3D4E  
                   l4411 10CA                     l4403 1092                     l4331 0CBA  
                   l4315 0C12                     l4307 0BE2                     l4243 08F0  
                   l4251 0906                     l4235 08B2                     l4227 0874  
                   l5211 3696                     l5203 3678                     l4157 4564  
                   l5061 2DB0                     l5053 2D6C                     l5045 2D52  
                   l5037 2D0A                     l5029 2CD0                     l5141 2ADA  
                   l5133 2AB0                     l5125 2A72                     l5117 2A46  
                   l5109 2A08                     l3509 47B0                     l5301 355C  
                   l3541 38B6                     l3533 3854                     l3525 381E  
                   l3517 37CC                     l3277 3ED0                     l3269 3E84  
                   l4181 274A                     l4173 271C                     l4165 26D4  
                   l3701 25A4                     l3621 2364                     l3613 233E  
                   l3605 231E                     l3453 1DD0                     l3461 1E26  
                   l3445 1D82                     l3437 1D5E                     l3429 1D42  
                   l3381 1BC2                     l3373 1BA4                     l3365 1B56  
                   l3357 1B20                     l3349 1B10                     l3293 1A24  
                   l3285 19F4                     l4077 3D60                     l4069 3D36  
                   l4085 4352                     l4093 42CA                     l4421 10F4  
                   l4413 10CE                     l4405 109A                     l4341 0CF2  
                   l4333 0CC2                     l4325 0C56                     l4317 0C2C  
                   l4309 0BE6                     l4261 0990                     l4253 092C  
                   l4245 08F8                     l4237 08C4                     l4229 087C  
                   l5221 36D6                     l5205 368A                     l5213 369A  
                   l5071 2DE8                     l5063 2DBE                     l5055 2D80  
                   l5047 2D56                     l5039 2D20                     l5151 2B1A  
                   l5143 2AEE                     l5135 2AC2                     l5127 2A84  
                   l5119 2A50                     l3551 3900                     l3543 38D6  
                   l3535 3868                     l3527 3822                     l3519 37EC  
                   l3279 3F06                     l4191 27E8                     l4183 2754  
                   l4175 272E                     l4167 26E4                     l4159 266C  
                   l3711 2610                     l3703 25B2                     l3631 239E  
                   l3623 2374                     l3615 2344                     l3607 2320  
                   l3471 1E78                     l3463 1E36                     l3455 1DDC  
                   l3447 1D90                     l3439 1D6E                     l3391 1C18  
                   l3383 1BE4                     l3375 1BA8                     l3367 1B72  
                   l3359 1B24                     l3295 1A34                     l3287 1A02  
                   l4087 4362                     l4095 42DC                     l4511 13D4  
                   l4503 139E                     l4431 1128                     l4423 10FA  
                   l4415 10D4                     l4407 10AC                     l4351 0D3C  
                   l4343 0D00                     l4327 0C68                     l4335 0CC6  
                   l4319 0C44                     l4271 0A00                     l4263 09A8  
                   l4247 08FC                     l4239 08D2                     l5231 3738  
                   l5223 36DE                     l5215 36AE                     l5207 368E  
                   l4601 4452                     l5073 2DF4                     l5065 2DD0  
                   l5057 2D92                     l5049 2D58                     l5161 2B6E  
                   l5153 2B30                     l5145 2AFE                     l5137 2AD4  
                   l5129 2A8C                     l5081 2950                     l4521 34B4  
                   l3553 3920                     l3545 38D8                     l3537 3876  
                   l3529 382E                     l3561 3954                     l4185 275A  
                   l4193 284C                     l4177 273C                     l4169 26E6  
                   l3721 265E                     l3713 262A                     l3705 25DC  
                   l3633 23B4                     l3625 2384                     l3617 2352  
                   l3609 2328                     l3801 2094                     l3481 1E96  
                   l3473 1E7E                     l3465 1E46                     l3457 1DEA  
                   l3449 1DA6                     l3393 1C26                     l3385 1BF4  
                   l3377 1BB6                     l3369 1B82                     l3297 1A36  
                   l3289 1A04                     l4089 4294                     l4513 13DA  
                   l4505 13B0                     l4417 10E0                     l4409 10BA  
                   l4425 1100                     l4433 112E                     l4441 11C6  
                   l4361 0D82                     l4353 0D4E                     l4345 0D04  
                   l4337 0CCE                     l4329 0C84                     l4265 09B2  
                   l4257 0962                     l4249 0900                     l5233 374E  
                   l5241 37A0                     l5225 36FC                     l5217 36B6  
                   l5209 3692                     l4611 446A                     l4603 4462  
                   l5075 2DFE                     l5067 2DE2                     l5059 2D9A  
                   l5171 2BAA                     l5163 2B80                     l5155 2B42  
                   l5147 2B06                     l5139 2AD6                     l5091 29A2  
                   l5083 2964                     l4531 3512                     l4523 34B8  
                   l3547 38EA                     l3539 3888                     l3571 39C4  
                   l3563 3974                     l3491 45E4                     l4195 2866  
                   l4187 27DC                     l4179 2742                     l3723 2660  
                   l3715 2646                     l3707 25E0                     l3651 2408  
                   l3635 23C4                     l3643 23E4                     l3627 2386  
                   l3619 2354                     l3811 212A                     l3803 20A0  
                   l3731 1EA8                     l3475 1E80                     l3467 1E66  
                   l3459 1E24                     l3395 1C34                     l3379 1BB8  
                   l3299 1A3E                     l4099 328E                     l4507 13BC  
                   l4451 1230                     l4443 11E4                     l4435 1186  
                   l4427 1112                     l4419 10F0                     l4371 0E96  
                   l4363 0DE6                     l4347 0D16                     l4355 0D56  
                   l4339 0CE0                     l4275 0A36                     l4259 0974  
                   l5235 375E                     l5227 3710                     l5219 36C6  
                   l4613 4476                     l4605 4464                     l5069 2DE6  
                   l5077 2E02                     l5165 2B92                     l5157 2B4A  
                   l5149 2B0E                     l5093 29B4                     l5173 2BAE  
                   l5085 2976                     l4541 353E                     l4525 34BC  
                   l3549 38F0                     l3581 3A3C                     l3573 39CC  
                   l3565 3978                     l3557 3942                     l3485 45C2  
                   l3493 472E                     l4197 2884                     l4189 27E2  
                   l3901 40B0                     l3717 264A                     l3709 25FA  
                   l3661 245A                     l3653 2422                     l3645 23F4  
                   l3637 23CC                     l3629 238E                     l3821 2180  
                   l3813 2148                     l3805 20BC                     l3741 1EE4  
                   l3733 1EB4                     l3477 1E86                     l3469 1E6A  
                   l3397 1C40                     l3389 1C08                     l4509 13C4  
                   l4461 126E                     l4453 1234                     l4445 1200  
                   l4437 11BA                     l4429 1124                     l4381 0F54  
                   l4373 0ECA                     l4365 0E3E                     l4357 0D5E  
                   l4349 0D24                     l4293 0AD0                     l4277 0A48  
                   l4269 09DA                     l4701 178C                     l4621 13FC  
                   l5181 4418                     l5237 3784                     l5229 371C  
                   ?_pad 0011                     l4615 4488                     l4607 4466  
                   l5079 2E04                     l5175 2BB0                     l5167 2B94  
                   l5159 2B60                     l5095 29C6                     l5087 297E  
                   l4551 35E6                     l4543 3572                     l4535 3518  
                   l4527 34D8                     l4519 34A0                     l3583 3A4E  
                   l3575 39E0                     l3567 3986                     l3559 3946  
                   l3487 45CE                     l3495 473A                     l4199 289E  
                   l3903 40B6                     l3911 40D8                     l3719 2658  
                   l3671 24B6                     l3663 246A                     l3655 2432  
                   l3647 23F4                     l3639 23D0                     l3831 21EA  
                   l3823 2184                     l3815 2152                     l3807 20E6  
                   l3751 1F16                     l3743 1EF4                     l3735 1EC2  
                   l3479 1E94                     l3399 1C44                     l4471 12A0  
                   l4463 1276                     l4455 1244                     l4447 1212  
                   l4439 11C2                     l4391 0FC8                     l4383 0F64  
                   l4375 0EFC                     l4367 0E72                     l4359 0D6E  
                   l4295 0B04                     l4279 0A64                     l4287 0A80  
                   l4703 179E                     l4631 1450                     l4623 1420  
                   l5183 4420                     l5239 3796                     l5191 363C  
                   l4617 448A                     l4609 4468                     l4801 466A  
                   l5169 2BA0                     l5097 29CA                     l5089 2994  
                   l4553 35F8                     l4537 352E                     l4529 350E  
                   l3577 39EE                     l3585 3A54                     l3569 39A6  
                   l3489 45E0                     l3497 473E                     l3905 40C6  
                   l3921 4104                     l3913 40DC                     l3681 24F6  
                   l3673 24B8                     l3665 247E                     l3657 2442  
                   l3593 22D2                     l3841 224C                     l3833 21F6  
                   l3825 2192                     l3817 2160                     l3809 211C  
                   l3761 1F56                     l3753 1F24                     l3745 1EFA  
                   l3737 1EC4                     l4473 12A6                     l4481 12F6  
                   l4465 1284                     l4457 1256                     l4449 1220  
                   l4393 0FEC                     l4385 0F98                     l4377 0F12  
                   l4369 0E78                     l4297 0B0A                     l4289 0A9A  
                   l4561 3DAE                     l4721 18CC                     l4705 17B4  
                   l4713 181E                     l4633 1452                     l4625 142E  
                   l5185 443C                     l5177 4400                     l5193 3640  
                   l4619 448C                     l4803 4672                     l4811 307A  
                   l5099 29D4                     l4555 360A                     l4547 35A8  
                   l4539 3536                     l3587 3A64                     l3579 3A1C  
                   l3499 4756                     l3907 40CE                     l3931 413C  
                   l3923 410C                     l3915 40EA                     l3691 2532  
                   l3683 2500                     l3675 24C8                     l3667 248C  
                   l3659 2452                     l3595 22DE                     l3851 22B4  
                   l3843 2260                     l3835 2204                     l3827 21C0  
                   l3819 2172                     l3771 1FA0                     l3763 1F5C  
                   l3755 1F26                     l3747 1F0A                     l3739 1ED4  
                   l4491 1346                     l4483 1308                     l4475 12CC  
                   l4467 128C                     l4459 125E                     l4395 1050  
                   l4387 0FA8                     l4379 0F44                     l4299 0B64  
                   l4571 3E0A                     l4563 3DD8                     l4731 1968  
                   l4723 1900                     l4715 184C                     l4707 17C2  
                   l4651 147C                     l4643 1470                     l4635 1464  
                   l4627 1440                     l5179 4410                     l5195 3644  
                   l4581 449E                     l4805 4678                     l4821 30CA  
                   l4813 308C                     l4901 2E78                     l3589 3A84  
                   l3941 4176                     l3933 4152                     l3925 411E  
                   l3917 40F2                     l3693 2540                     l3685 250E  
                   l3677 24DA                     l3669 2498                     l3597 22EC  
                   l3853 22B6                     l3845 227A                     l3837 222E  
                   l3781 1FF0                     l3773 1FAC                     l3765 1F7C  
                   l3757 1F36                     l3749 1F10                     l3861 457C  
                   l4493 134E                     l4485 1322                     l4477 12E8  
                   l4469 1294                     l4397 1060                     l4389 0FBC  
                   l4573 3E26                     l4741 19A4                     l4733 1976  
                   l4709 17F2                     l4661 14FE                     l4629 1444  
                   l5197 3656                     l5189 3630                     l4591 44B6  
                   l4583 44AE                     l4831 3108                     l4823 30D6  
                   l4815 30A2                     l4807 3054                     l4911 2EAC  
                   l4903 2E8A                     l3871 4026                     l3943 417E  
                   l3935 415A                     l3927 4126                     l3919 40F6  
                   l3695 256E                     l3679 24F0                     l3687 2520  
                   l3599 22EE                     l3951 41C6                     l3847 2296  
                   l3855 22BC                     l3839 2232                     l3791 2032  
                   l3783 1FFC                     l3775 1FB6                     l3767 1F8C  
                   l3759 1F46                     l3863 458C                     l4495 135E  
                   l4487 1328                     l4479 12F0                     l4399 1072  
                   l4575 3E38                     l4567 3DE4                     l4735 198A  
                   l4719 18BA                     l4671 1596                     l4663 1522  
                   l4655 1488                     l4647 1476                     l4639 146A  
                   l5199 3668                     l4593 44C2                     l4585 44B0  
                   l4761 42F4                     l4841 315A                     l4833 311E  
                   l4825 30DA                     l4817 30B0                     l4809 3068  
                   l4921 2EFC                     l4913 2EBE                     l4905 2E8E  
                   l3881 404C                     l3873 402E                     l3937 4160  
                   l3929 412E                     l3689 252E                     l3953 41F4  
                   l3857 22C0                     l3849 22A6                     l3793 203E  
                   l3785 2008                     l3777 1FCC                     l4497 1364  
                   l4489 133A                     l4577 3E60                     l4569 3DF2  
                   l4729 1944                     l4673 15B6                     l4665 152A  
                   l4681 161E                     l4657 14DC                     l4745 19B0  
                   l4595 44D4                     l4587 44B2                     l4763 42F8  
                   l4851 31A2                     l4843 315E                     l4835 312C  
                   l4827 30EE                     l4819 30C2                     l4931 2F30  
                   l4923 2F0E                     l4915 2EC6                     l4907 2E90  
                   l3891 4084                     l3883 4054                     l3875 4032  
                   l3867 4014                     l3939 4166                     l3699 2598  
                   l3955 4204                     l3947 4188                     l3971 3C28  
                   l3963 3BAC                     l3795 204E                     l3787 2016  
                   l3779 1FD8                     l4499 136A                     l4747 19D4  
                   l4739 1996                     l4691 16C4                     l4683 1640  
                   l4675 15C4                     l4667 1538                     l4659 14FC  
                   l5299 14AE                     l4771 423A                     l4597 44D6  
                   l4589 44B4                     l4781 4768                     l4765 431C  
                   l4861 31E2                     l4853 31B0                     l4845 3172  
                   l4837 313E                     l4829 3100                     l4941 2F80  
                   l4933 2F42                     l4925 2F12                     l4917 2EDC  
                   l4909 2E98                     l3893 408A                     l3885 4066  
                   l3877 4040                     l3869 4018                     l3957 4228  
                   l3949 41B6                     l3981 3CAC                     l3973 3C36  
                   l3965 3BDA                     l3797 2068                     l3789 2022  
                   l4693 16E8                     l4685 1650                     l4669 155C  
                   l4773 4248                     l4599 44D8                     l4791 478C  
                   l4783 4774                     l4767 4320                     l4871 3234  
                   l4863 31F6                     l4855 31C2                     l4847 3184  
                   l4839 3150                     l4759 47E0                     l4951 2FA0  
                   l4943 2F8A                     l4935 2F4A                     l4927 2F14  
                   l4919 2EEA                     l3895 40A0                     l3887 406E  
                   l3879 4048                     l3959 422E                     l3975 3C48  
                   l3967 3BEA                     l3799 2078                     l4695 170C  
                   l4687 1682                     l4679 160C                     l4775 426E  
                   l4777 47CC                     l4785 477A                     l4793 4648  
                   l4881 326E                     l4873 3246                     l4865 3208  
                   l4857 31D4                     l4849 318C                     l4961 2FEA  
                   l4953 2FB4                     l4945 2F8E                     l4937 2F60  
                   l4929 2F1C                     l3897 40A8                     l3889 4076  
                   l3977 3C56                     l3969 3C18                     l3985 46BE  
                   l3993 3AA6                     l4697 1754                     l4689 1692  
                   l4769 4232                     l4787 4780                     l4779 4764  
                   l4795 4648                     l4883 3278                     l4875 3258  
                   l4867 3210                     l4859 31DE                     l4971 3028  
                   l4963 2FF8                     l4955 2FC6                     l4947 2F96  
                   l4939 2F6E                     l4891 2E28                     l3899 40AA  
                   l3979 3CA6                     l3987 46D4                     l3995 3ABC  
                   l4789 4786                     l4797 4658                     l4877 3262  
                   l4869 3226                     l4885 3284                     l4981 304C  
                   l4973 302A                     l4965 300A                     l4957 2FCE  
                   l4949 2F98                     l4893 2E3A                     l3989 46E4  
                   l4799 4660                     l4887 3286                     l4879 3266  
                   l4975 3034                     l4967 301C                     l4959 2FD4  
                   l4895 2E42                     l4991 2BFC                     l4983 2BB8  
                   l3999 3AD0                     l4977 303E                     l4969 3020  
                   l4897 2E58                     l4889 2E14                     l4993 2C0A  
                   l4985 2BCC                     l4899 2E66                     l4979 304A  
                   l4995 2C1C                     l4987 2BDE                     l4997 2C2E  
                   l4989 2BE6                     l4999 2C32                     STR_1 0821  
                   STR_2 0813                     STR_3 0801                     STR_4 0847  
                   STR_5 082E                     STR_6 0834                     STR_7 083C  
                   _LATA 000F89                     u4000 2374                     _LATD 000F8C  
                   u4001 2370                     u4010 23B4                     u4011 23B0  
                   u4100 2540                     u4020 23F4                     u4101 253C  
                   u4021 23F0                     u4110 256E                     u4030 246A  
                   u4111 256A                     u4031 2466                     u5000 26B4  
                   u4120 2584                     u4040 248C                     u4200 1EE4  
                   u3400 1A14                     u5001 26B0                     u4121 2580  
                   u4041 2488                     u4201 1EE0                     u3401 1A10  
                   u5010 26E4                     u4130 2598                     u4050 24B6  
                   u4210 1F24                     u3410 1A24                     u5011 26E0  
                   u4131 2594                     u4051 24B2                     u4211 1F20  
                   u3411 1A20                     u5100 28DA                     u5020 2700  
                   u4140 25B2                     u4060 24DA                     u4300 21C0  
                   u4220 1F36                     u3500 1B70                     u3420 1A66  
                   u5101 28D6                     u5021 26FC                     u4141 25AE  
                   u4061 24D6                     u4301 21BC                     u4221 1F32  
                   u3421 1A62                     u3350 3E96                     u5110 28EA  
                   u5030 272E                     u4150 25FA                     u4070 24F0  
                   u4310 21D6                     u4230 1F46                     u3510 1B98  
                   u3430 1A7C                     u3351 3E92                     u5111 28E6  
                   u5031 272A                     u4151 25F6                     u4071 24EC  
                   u4311 21D2                     u4231 1F42                     u3511 1B94  
                   u3431 1A78                     u6000 3068                     u3360 3EA8  
                   u5120 2902                     u5040 273C                     u4400 4084  
                   u4160 262A                     u4080 250E                     u4320 21EA  
                   u4240 1F7C                     u3600 1CD0                     u3520 1BB6  
                   u3440 1A8E                     u5200 0974                     u6001 3064  
                   u3361 3EA4                     u5121 28FE                     u5041 2738  
                   u4401 4080                     u4161 2626                     u4081 250A  
                   u4321 21E6                     u4241 1F78                     u3601 1CCC  
                   u3521 1BB2                     u3441 1A8A                     u5201 0970  
                   u6010 307A                     u3370 3ED0                     u5050 2866  
                   u4410 40A0                     u4170 2658                     u4090 252E  
                   u4330 2204                     u4250 1F8C                     u3610 1D06  
                   u3530 1BD6                     u3450 1A9E                     u5210 0A00  
                   u5130 0874                     u6011 3076                     u3371 3ECC  
                   u5051 2862                     u4411 409C                     u4171 2654  
                   u4091 252A                     u4331 2200                     u4251 1F88  
                   u3611 1D02                     u3531 1BD2                     u3451 1A9A  
                   u5211 09FC                     u5131 0870                     u6100 31B0  
                   u6020 30B0                     u3380 3F06                     u5060 2884  
                   u4420 40C6                     u4500 41F4                     u4340 224C  
                   u4260 2106                     u4180 1EC2                     u3700 1DD0  
                   u3620 1D16                     u3540 1BE4                     u3460 1ADA  
                   u5300 0C2C                     u5220 0A2E                     u5140 08C4  
                   u6101 31AC                     u6021 30AC                     u3381 3F02  
                   u5061 2880                     u4421 40C2                     u4501 41F0  
                   u4341 2248                     u4181 1EBE                     u3701 1DCC  
                   u3621 1D12                     u3541 1BE0                     u3461 1AD6  
                   u5301 0C28                     u5221 0A28                     u5141 08C0  
                   u6110 31C2                     u6030 30C2                     u5070 289E  
                   u4430 40EA                     u4510 4228                     u4350 227A  
                   u4270 2160                     u4190 1ED4                     u3710 1DEA  
                   u3630 1D42                     u3550 1BF4                     u3470 1AE8  
                   u3390 1A02                     u5310 0C52                     u5230 0A30  
                   u5150 08D2                     u6111 31BE                     u6031 30BE  
                   u5071 289A                     u4431 40E6                     u4511 4224  
                   u4351 2276                     u4271 215C                     u4191 1ED0  
                   u3711 1DE6                     u3631 1D3E                     u3551 1BF0  
                   u3471 1AE4                     u3391 19FE                     u5311 0C4E  
                   u5151 08CE                     u6120 31F6                     u6040 30EE  
                   u6200 2EAC                     u5080 28B8                     u4440 4104  
                   u4520 3BDA                     u4360 22B4                     u4280 2180  
                   u3720 1E24                     u3640 1D52                     u3560 1C26  
                   u3480 1B56                     u4600 3B1E                     u3800 46B6  
                   u5400 0D4E                     u5320 0C68                     u5240 0A48  
                   u5160 08E4                     u6121 31F2                     u6041 30EA  
                   u6201 2EA8                     u5081 28B4                     u4441 4100  
                   u4521 3BD6                     u4361 22B0                     u4281 217C  
                   u4265 20FC                     u3721 1E20                     u3641 1D4E  
                   u3561 1C22                     u3481 1B52                     u4601 3B1A  
                   u3801 46B0                     u5401 0D4A                     u5321 0C64  
                   u5241 0A44                     u5161 08E0                     u6130 3208  
                   u6050 3100                     u6210 2EBE                     u5090 28C8  
                   u4370 4026                     u4450 411E                     u4530 3C18  
                   u4290 2192                     u3730 1E36                     u3650 1D6E  
                   u3570 1C34                     u3490 1B6E                     u4610 3B32  
                   u3810 46B8                     u5410 0E96                     u5330 0C84  
                   u5250 0ACC                     u5170 092C                     u6131 3204  
                   u6051 30FC                     u6211 2EBA                     u5091 28C4  
                   u4371 4022                     u4451 411A                     u4531 3C14  
                   u4291 218E                     u3731 1E32                     u3651 1D6A  
                   u3571 1C30                     u3491 1B68                     u4611 3B2E  
                   u5411 0E92                     u5331 0C80                     u5251 0AC8  
                   u5171 0928                     u6140 3234                     u6060 312C  
                   u6300 2FF8                     u6220 2EEA                     u3820 37CC  
                   u3900 3986                     u4380 4040                     u4460 413C  
                   u4540 3C36                     u3740 1E46                     u3660 1D7E  
                   u3580 1C52                     u4620 3B5A                     u4700 3CF0  
                   u5500 10AC                     u5420 0EFC                     u5340 0CBA  
                   u5260 0B60                     u5180 095A                     u6141 3230  
                   u6061 3128                     u6301 2FF4                     u6221 2EE6  
                   u3821 37C8                     u3901 3982                     u4381 403C  
                   u4461 4138                     u4541 3C32                     u3741 1E42  
                   u3661 1D7A                     u3581 1C4E                     u4621 3B56  
                   u5501 10A8                     u5421 0EF8                     u5341 0CB6  
                   u5261 0B5C                     u5181 0954                     u6150 3246  
                   u6070 313E                     u6310 300A                     u6230 2EFC  
                   u3830 37FE                     u3910 39C4                     u4390 4066  
                   u4470 4152                     u4550 3C56                     u3750 1E66  
                   u3670 1D90                     u3590 1C8A                     u4630 3B7A  
                   u4710 3D0E                     u5510 10BA                     u5430 0F44  
                   u5350 0CE0                     u5270 0BD2                     u5190 095C  
                   u6151 3242                     u6071 313A                     u6311 3006  
                   u6231 2EF8                     u3831 37FA                     u3911 39C0  
                   u4391 4062                     u4471 414E                     u4551 3C52  
                   u3751 1E62                     u3671 1D8C                     u3591 1C86  
                   u4631 3B76                     u4711 3D0A                     u5511 10B6  
                   u5431 0F40                     u5351 0CDC                     u5271 0BCE  
                   u6080 3172                     u6240 2F30                     u6160 2E28  
                   u6400 2CF0                     u6320 2BCC                     u3920 39EE  
                   u4480 4176                     u4560 3CA6                     u3760 1E78  
                   u3680 1DA6                     u4640 3B8A                     u4720 3D36  
                   u4800 42C6                     u5600 1322                     u5520 1112  
                   u5440 0F54                     u5360 0CF2                     u5280 0BF8  
                   u6081 316E                     u6241 2F2C                     u6161 2E24  
                   u6401 2CEC                     u6321 2BC8                     u3841 3828  
                   u3921 39EA                     u4481 4172                     u4561 3CA2  
                   u3761 1E74                     u3681 1DA2                     u4641 3B86  
                   u4721 3D32                     u4705 3CE6                     u5601 131E  
                   u5521 110E                     u5441 0F50                     u5361 0CEE  
                   u5281 0BF4                     u6090 3184                     u6250 2F42  
                   u6170 2E3A                     u6410 2D02                     u6330 2BDE  
                   u3850 384C                     u3930 3A1C                     u4650 3F5E  
                   u4490 41B6                     u4570 46D4                     u3770 1E94  
                   u3690 1DBC                     u4730 3D60                     u4810 42DC  
                   u5610 133A                     u5530 11E4                     u5450 0FBC  
                   u5370 0D00                     u5290 0C0A                     u6091 3180  
                   u6251 2F3E                     u6171 2E36                     u6411 2CFE  
                   u6331 2BDA                     u3851 3848                     u3931 3A18  
                   u4651 3F5A                     u4491 41B2                     u4571 46D0  
                   u3771 1E90                     u3691 1DB8                     u4731 3D5C  
                   u4811 42D8                     u5611 1336                     u5531 11E0  
                   u5451 0FB8                     u5371 0CFC                     u5291 0C06  
                   u6260 2F6E                     u6180 2E66                     u6420 2D2E  
                   u6340 2C0A                     u6500 29A2                     u5700 35F8  
                   u3860 3876                     u3940 3A64                     u3780 4604  
                   u4660 3F80                     u4580 3ABC                     u4900 3442  
                   u4820 32D6                     u5620 1398                     u5540 1200  
                   u5460 1060                     u5380 0D16                     u6261 2F6A  
                   u6181 2E62                     u6421 2D2A                     u6341 2C06  
                   u6501 299E                     u5701 35F4                     u3861 3872  
                   u3941 3A60                     u3781 4600                     u4661 3F7C  
                   u4581 3AB8                     u4901 343E                     u5621 1392  
                   u5541 11FC                     u5461 105C                     u5381 0D12  
                   u6270 2F80                     u6190 2E78                     u6430 2D40  
                   u6350 2C1C                     u6510 29B4                     u5710 360A  
                   u3870 38B6                     u3790 4756                     u4670 3FD6  
                   u3950 22EC                     u4590 3AF0                     u4750 3D9A  
                   u4910 347E                     u4830 3304                     u5630 139A  
                   u5550 1212                     u5470 1072                     u5390 0D24  
                   u6271 2F7C                     u6191 2E74                     u6431 2D3C  
                   u6351 2C18                     u6511 29B0                     u5711 3606  
                   u3871 38B2                     u3791 4752                     u4671 3FD2  
                   u3951 22E8                     u4751 3D94                     u4911 347A  
                   u4831 3300                     u5551 120E                     u5471 106E  
                   u5391 0D20                     u6280 2FB4                     u6440 2D80  
                   u6360 2C5E                     u6600 2AEE                     u6520 29F6  
                   u4920 4726                     u3880 3900                     u4680 3FE6  
                   u3960 22FE                     u4760 3D9C                     u4840 3326  
                   u5640 13B0                     u5560 1220                     u5480 1084  
                   u5720 3DD8                     u5800 1522                     u6281 2FB0  
                   u6441 2D7C                     u6361 2C5A                     u6601 2AEA  
                   u6521 29F2                     u4921 4720                     u3881 38FC  
                   u4681 3FE2                     u3961 22FA                     u4745 3D72  
                   u4841 3322                     u4825 32CC                     u5641 13AC  
                   u5561 121C                     u5481 1080                     u5721 3DD4  
                   u5801 151E                     u6290 2FC6                     u6450 2D92  
                   u6370 2C70                     u6610 2B30                     u6530 2A08  
                   u4930 4728                     u5650 34D8                     u3890 3954  
                   u4690 4620                     u3970 230E                     u4770 439A  
                   u5570 1256                     u5490 1092                     u5730 3E0A  
                   u5810 155C                     u6291 2FC2                     u6451 2D8E  
                   u6371 2C6C                     u6611 2B2C                     u6531 2A04  
                   u5651 34D4                     u3891 3950                     u4691 461C  
                   u3971 230A                     u4595 3AE6                     u5571 1252  
                   u5491 108E                     u5731 3E06                     u5811 1558  
                   u6460 2DBE                     u6380 2C9C                     u6620 2B42  
                   u6540 2A34                     u4940 43C6                     u5660 350E  
                   u3980 2352                     u4860 3392                     u4780 43AC  
                   u5580 1284                     u5740 3E26                     u5900 184C  
                   u5820 1604                     u6461 2DBA                     u6381 2C98  
                   u6621 2B3E                     u6541 2A30                     u4941 43C2  
                   u5661 350A                     u3981 234E                     u4861 338E  
                   u4781 43A8                     u5581 1280                     u5741 3E22  
                   u5901 1848                     u5821 15FE                     u6470 2DD0  
                   u6390 2CAE                     u6630 2B6E                     u6550 2A46  
                   u4950 43F4                     u5670 352A                     u3990 2364  
                   u4870 33B6                     u4790 42C4                     u5590 1308  
                   u5750 3E38                     u5910 18B2                     u5830 1606  
                   u6471 2DCC                     u6391 2CAA                     u6631 2B6A  
                   u6551 2A42                     u4951 43F0                     u5671 3526  
                   u3991 2360                     u4855 333A                     u4791 42BE  
                   u5591 1304                     u5751 3E34                     u5911 18AC  
                   u4960 4560                     u6640 2B80                     u6560 2A72  
                   u6480 2964                     u5680 35E0                     u4880 33D2  
                   u4856 3344                     u5760 3E60                     u5920 18B4  
                   u5840 161E                     u4961 455C                     u6641 2B7C  
                   u6561 2A6E                     u6481 2960                     u5681 35DA  
                   u4881 33CE                     u4857 3354                     u4777 4390  
                   u5761 3E5C                     u5841 161A                     u4970 457A  
                   u6570 2A84                     u6490 2976                     u5690 35E2  
                   u4890 3426                     u5930 18CC                     u5850 1650  
                   u5770 1420                     u6650 36AE                     u4971 4576  
                   u6571 2A80                     u6707 2988                     u6491 2972  
                   u4875 33AC                     u5931 18C8                     u5851 164C  
                   u5771 141C                     u6651 36AA                     u6580 2AB0  
                   u4980 269C                     u5940 1968                     u5860 1692  
                   u5780 14EE                     u6660 3738                     u6581 2AAC  
                   u6717 2A1A                     u4981 2696                     u5941 1964  
                   u5861 168E                     u5781 14EA                     u6661 3734  
                   u5950 4318                     u6590 2AC2                     u4990 269E  
                   u5870 16E8                     u5790 14FC                     u6670 374A  
                   u6807 2D62                     u6591 2ABE                     u6727 2A96  
                   u4895 341C                     u5871 16E4                     u5791 14F8  
                   u6671 3746                     u5960 4340                     u5880 170C  
                   u6680 37B2                     u6817 2DA4                     u6737 2B54  
                   u5881 1708                     u6681 37AE                     u5970 4350  
                   u5890 179E                     u5971 434C                     u6907 321A  
                   u6827 2DEA                     u6747 2B96                     u5891 179A  
                   u5980 428A                     u5957 430E                     u6837 2E4C  
                   u6757 2BF0                     u5981 4286                     u5990 4658  
                   u5967 4336                     u5991 4654                     u6847 2ED0  
                   u6767 2C40                     u6857 2F54                     u6777 2C82  
                   u6697 36CC                     u6867 2FDE                     u6787 2CD2  
                   u6877 3096                     u6797 2D14                     u6887 3112  
                   u6897 3196          __end_of_INT_isr 47CC                     abs@a 0013  
                   _dbuf 0100                     _atoi 34A0                     _cont 00F6  
                   _main 3630                     _dtoa 266C       __size_of_LCD_Clear 0008  
                   _prec 00E0                     _temp 00D8                     _nout 00DC  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   btemp 005F                     _volt 00D4            ___fpclassifyf 3CB0  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        __end_of_MSdelay 457C          ___fldiv@new_exp 0012            _LCD_String_xy 4646  
           _tolower$1059 000D             ___param_bank 000000          __end_of_Int_Ext 47D8  
                  ??_abs 0015                    ??_pad 0017         __end_of_LCD_Char 449C  
       __end_of_LCD_Init 4794            ___fltol@sign1 0009          __end_of___aodiv 3942  
                  ?_atoi 0008          __end_of___fladd 1EA8                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 3AA6          __end_of___fldiv 266C  
        __end_of___awdiv 40D8          __end_of___flneg 46F6                    STR_10 0838  
                  STR_11 0840                    STR_14 0844                    STR_16 0844  
        __end_of___awmod 4188          __end_of___flmul 22D2          __end_of___flsub 45C2  
        __end_of___fltol 3BAC          ___awdiv@divisor 0003                    _LATD2 007C62  
                  _LATD3 007C63                    i2l173 47C8          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 0042                    _TRISA 000F92                    _TRISC 000F94  
                  _TRISD 000F95                    _cont2 00E4                    _flags 00E2  
                  _fputc 3E84                    _fputs 45C2          __end_of_isdigit 472E  
                  _temp2 00EA                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 00DE                    _putch 47E8  
                  dtoa@d 001E                    dtoa@i 003E                    dtoa@n 0036  
                  dtoa@p 0030                    dtoa@s 0034                    dtoa@w 0032  
        __end_of_isspace 4400          __end_of_isupper 46BE                    tablat 000FF5  
                  ttemp5 0060                    ttemp6 0063                    ttemp7 0067  
                  status 000FD8                    wtemp8 0060      __size_of_LCD_String 005E  
        __end_of_sprintf 4450           ?___fpclassifyf 0001          __end_of_tolower 42F4  
        __end_of_strncmp 3E84           ?_LCD_String_xy 000B          __initialization 44E8  
           __end_of_atoi 3630             __end_of_main 37BA             __end_of_dtoa 2950  
                 ??_atoi 000A                   ??_main 005C                   ??_dtoa 0026  
      __end_of_LCD_Clear 47E8            __activetblptr 000002                ??_INT_isr 0001  
                 ?_fputc 0001                   ?_fputs 000A         ___awdiv@dividend 0001  
                 ?_putch 0001         LCD_String_xy@msg 000C         LCD_String_xy@pos 000B  
       LCD_String_xy@row 000E                ??_MSdelay 0003                   i2l5243 47BC  
                 i2l5245 47C2                   i2l5247 47C6                   _OSCCON 000FD3  
          vfpfcnvrt@done 00A0                ??_Int_Ext 0001             vfprintf@cfmt 0050  
                 ___flge 3BAC                   ___fleq 4188                ??___aodiv 0011  
              ??___fladd 0009                ??___aomod 0011                   ___wmul 4794  
              ??___fldiv 0009                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0009                ??___flsub 0022  
              ??___fltol 0005       __size_of_Secuence1 023A       __size_of_Secuence2 0240  
     __size_of_Secuence3 025C       __size_of_Secuence4 0268                   _efgtoa 084C  
                 _floorf 328E                   clear_0 450E                   clear_1 451A  
       ___awdiv@quotient 0007          ___awmod@divisor 0003          ___awmod@counter 0005  
                 pad@buf 0013     __size_of_LCD_Command 004C                   dtoa@fp 001C  
                 _strcpy 4352                   _strlen 472E                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 4294  
              ??_sprintf 0052                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 001A               ___flge@ff2 001E          ??___fpclassifyf 0005  
             ___fleq@ff1 0001               ___fleq@ff2 0005                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 4524                ?_LCD_Init 0001  
        ??_LCD_String_xy 000E               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001             __pidataBANK0 47D8  
          __end_of_fputc 3F4E            __end_of_fputs 4606            __end_of_putch 47EA  
           ??_LCD_String 000B                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001        __end_of_Secuence1 328E        __end_of_Secuence2 3054  
      __end_of_Secuence3 2E14        __end_of_Secuence4 2BB8               __pbssBANK0 00CC  
             __pbssBANK1 0100               ??_LCD_Char 0007               ??_LCD_Init 0009  
     __end_of_LCD_String 4352               _efgtoa$903 0068               _efgtoa$907 006A  
             _efgtoa$908 006C               _efgtoa$909 006E               _efgtoa$898 0064  
             _efgtoa$899 0066                  ?___flge 001A                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 002E                  ?_floorf 001A  
                ?_strcpy 0001                  ?_strlen 0001       __size_of_vfpfcnvrt 05EC  
                _INT_isr 0008                  _MSdelay 4532                  _Int_Ext 47CC  
          LCD_String@msg 0009                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___aodiv 37BA  
                ___fladd 19E8                  ___aomod 3942                  ___fldiv 22D2  
                ___awdiv 4014                  ___flneg 46BE                  ___awmod 40D8  
                ___flmul 1EA8                  ___flsub 457C                  ___fltol 3AA6  
        __size_of___wmul 0026       main@Total_distance 00B6                ?_vfprintf 004A  
           __psmallconst 0800          __size_of_efgtoa 0BB0          __size_of_floorf 0212  
                __pcinit 44E8                  __ramtop 0800                  __ptext0 3630  
                __ptext1 4400                  __ptext2 4232                  __ptext3 13FC  
                __ptext4 3DAE                  __ptext5 084C                  __ptext6 4294  
                __ptext7 4686                  __ptext8 4352                  __ptext9 328E  
        __size_of_strcpy 005C          __size_of_strlen 0036             __size_of_abs 0040  
           __size_of_pad 00C6               _duty_cicle 00F0                  _isdigit 46F6  
       ___awmod@dividend 0001                  _isspace 43AE                  _isupper 4686  
                efgtoa@c 0034                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 0030                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0074  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 0070  
                efgtoa@u 0094                  efgtoa@w 007F                _LCD_Clear 47E0  
                atoi@neg 000E                  _sprintf 4400                  _tolower 4294  
                _strncmp 3DAE           __pintcode_body 47BA     end_of_initialization 4524  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  fputc@fp 0003           LCD_Command@cmd 0008  
          __Lmediumconst 0000                  int_func 47BA                  fputs@fp 000C  
      __end_of_vfpfcnvrt 19E8               efgtoa@mode 0081               efgtoa@sign 007A  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0050  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001              ___fladd@grs 0010                _TRISBbits 000F93  
             ?_LCD_Clear 0001              ___fldiv@grs 0014              ___fldiv@rem 000D  
            ___flmul@grs 000E        __size_of_LCD_Char 004C        __size_of_LCD_Init 0030  
          ??_LCD_Command 0007           __end_of___flge 3CB0           __end_of___fleq 4232  
            vfpfcnvrt@ap 0044              vfpfcnvrt@ct 00AA              vfpfcnvrt@fp 0040  
            vfpfcnvrt@ll 0098           __end_of___wmul 47BA           __end_of_efgtoa 13FC  
         __end_of_floorf 34A0               floorf@F524 00CC           __end_of_strcpy 43AE  
         __end_of_strlen 4764      start_initialization 44E8              __end_of_abs 4646  
            __end_of_pad 4014    __end_of___fpclassifyf 3DAE                _Secuence1 3054  
              _Secuence2 2E14                _Secuence3 2BB8                _Secuence4 2950  
  __end_of_LCD_String_xy 4686              vfprintf@fmt 004C                 ??___flge 0022  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0035  
            __pdataBANK0 00F2                 ??_floorf 001E                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001      __end_of_LCD_Command 44E8  
              ___flmul@a 0005                ___flmul@b 0001              __pbssCOMRAM 005D  
              ___flsub@a 001E                ___flsub@b 001A            __pcstackBANK0 0060  
       ___aodiv@dividend 0001              ??_LCD_Clear 0009                 ?_INT_isr 0001  
               ?_MSdelay 0001               ?_Secuence1 0001               ?_Secuence2 0001  
             ?_Secuence3 0001               ?_Secuence4 0001                 ?_Int_Ext 0001  
              __pintcode 0008                 ?___aodiv 0001                 ?___fladd 0001  
               ?___aomod 0001                 ?___fldiv 0001                 ?___awdiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 0001                 ?___flsub 001A                 ?___fltol 0001  
      __size_of_vfprintf 0062              __smallconst 0800                 ?_isdigit 0001  
               ?_isspace 0001                 ?_isupper 0001    LCD_String_xy@location 000F  
               ?_sprintf 00AE                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 4450  
               _LCD_Init 4764           ___wmul@product 0005              _LCD_Command 449C  
              _vfpfcnvrt 13FC        ___wmul@multiplier 0001               vfpfcnvrt@c 00AD  
             vfpfcnvrt@f 00A6         __size_of_INT_isr 47C4              _INTCON2bits 000FF1  
              copy_data0 44FC         __size_of_MSdelay 004A              ??_Secuence1 0001  
            ??_Secuence2 0009              ??_Secuence3 0001              ??_Secuence4 0009  
               __Hrparam 0000         __size_of_Int_Ext 000C               vfprintf@ap 004E  
               __Lrparam 0000               vfprintf@fp 004A         __size_of___aodiv 0188  
       __size_of___fladd 04C0         __size_of___aomod 0164         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F463 00D0               sprintf@fmt 00B0                 _atoi$964 0010  
               _atoi$965 0014                 _atoi$966 0012         __size_of_isdigit 0038  
               _dtoa$874 002E         __size_of_isspace 0052                 __ptext10 3CB0  
               __ptext11 3AA6                 __ptext20 4014                 __ptext12 457C  
               __ptext21 266C                 __ptext13 19E8                 __ptext30 34A0  
               __ptext22 3F4E                 __ptext14 46BE                 __ptext31 43AE  
               __ptext23 472E                 __ptext15 1EA8                 __ptext40 42F4  
               __ptext32 46F6                 __ptext24 45C2                 __ptext16 3BAC  
               __ptext41 4450                 __ptext33 4794                 __ptext25 3E84  
               __ptext17 4188                 __ptext42 4764                 __ptext34 2950  
               __ptext26 47E8                 __ptext18 22D2                 __ptext43 449C  
               __ptext35 2BB8                 __ptext27 4606                 __ptext19 40D8  
               __ptext44 4532                 __ptext36 2E14                 __ptext28 3942  
               __ptext45 47CC                 __ptext37 47E0                 __ptext29 37BA  
               __ptext38 3054                 __ptext39 4646         __size_of_isupper 0038  
       __size_of_sprintf 0050         __size_of_tolower 0060               strcpy@dest 0001  
       __size_of_strncmp 00D6            __size_of_atoi 0190            __size_of_main 018A  
          __size_of_dtoa 02E4               MSdelay@val 0001                 efgtoa@fp 002E  
               efgtoa@ne 0076                 efgtoa@pp 0072                 efgtoa@ou 0060  
               int$flags 005F                 _vfprintf 4232               _LCD_String 42F4  
            _isspace$995 0007         ___aomod@dividend 0001               _INTCONbits 000FF2  
               isdigit@c 0001                 intlevel2 0000                sprintf@ap 0054  
               isspace@c 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003              efgtoa@nmode 007E  
        ___aomod@divisor 0009              ??_vfpfcnvrt 0046          ___aomod@counter 0011  
          _vfpfcnvrt$923 00A2            _vfpfcnvrt$928 00A4                 sprintf@f 0056  
               tolower@c 0007                 sprintf@s 00AE   __size_of___fpclassifyf 00FE  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
 __size_of_LCD_String_xy 0040            ___fladd@signs 000D             ___aodiv@sign 0012  
           ___fladd@aexp 000E             ___fladd@bexp 000F             ___aomod@sign 0012  
